[{"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/index.js":"1","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/reportWebVitals.js":"2","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/App.js":"3","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/LoginRegister.js":"4","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Main.js":"5","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/topbar/Topbar.js":"6","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/StateManagment/MobileMenu.js":"7","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/firebase/config.js":"8","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/StateManagment/Auth.js":"9","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/hooks/Client.js":"10","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/MultipleAccounts.jsx":"11","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/NotApproved.jsx":"12","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/BottomBar.jsx":"13","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/StateManagment/Colors.jsx":"14","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Login.js":"15","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Register.js":"16","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Search.js":"17","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/firebase/useFirestore.js":"18","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Profile.js":"19","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/NewClient.js":"20","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/PublicProfile.js":"21","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Settings.js":"22","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Members.js":"23","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Analytics.js":"24","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Notifications.js":"25","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Measures.js":"26","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Contributions.js":"27","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/topbar/Iconbar.js":"28","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/topbar/ProfilePhoto.js":"29","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/allActivity/AllActivity.js":"30","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/MyIntroduction.jsx":"31","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/LeftSideBarFullScreen.jsx":"32","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/MyMessages.jsx":"33","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/UserRoles.jsx":"34","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/MyGroups.jsx":"35","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/MyContributions.jsx":"36","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ProfileSettings.jsx":"37","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/AboutMe.jsx":"38","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/MyEvents.jsx":"39","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Subscriptions.jsx":"40","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/MyChannels.jsx":"41","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Registrations.jsx":"42","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ActivityDetail.jsx":"43","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ActivitySettings.jsx":"44","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Activities.jsx":"45","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ActivityGoal.jsx":"46","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Matching/Roadmap.jsx":"47","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Matching/MatchDetail.jsx":"48","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Matching/MatchProfileFields.jsx":"49","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Matching/MatchItemDetail.jsx":"50","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Matching/Matches.jsx":"51","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Matching/MatchItems.jsx":"52","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Matching/AddMatchItem.jsx":"53","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/hooks/Location.js":"54","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/hooks/GetYearMonth.jsx":"55","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Matching/MatchCategories.jsx":"56","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/rightSideBar/RightSideBar.js":"57","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/LeftSideBarAuthProfileFullScreen.js":"58","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/LeftSideBarAuthProfile.js":"59","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/hooks/MenuStatus.jsx":"60","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/hooks/ButtonClicked.jsx":"61","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Calender.jsx":"62","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/LeftSideBar.js":"63","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/allActivity/ActivityCard.js":"64","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/rightSideBar/RightSideBarGroup.js":"65","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/hooks/GetLink.jsx":"66","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/rightSideBar/AllMembers.js":"67","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Impact/QuestionnaireSettings.jsx":"68","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Impact/SendQuestionnaire.jsx":"69","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Impact/ImpactIndicators.jsx":"70","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Impact/ImpactProgress.jsx":"71","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Impact/Stakeholders.jsx":"72","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Impact/QuestionnaireAnalysis.jsx":"73","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/index.js":"74","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/App.js":"75","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/reportWebVitals.js":"76","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/LoginRegister.js":"77","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/topbar/Topbar.js":"78","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/firebase/config.js":"79","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Main.js":"80","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/StateManagment/Auth.js":"81","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/StateManagment/MobileMenu.js":"82","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/hooks/Client.js":"83","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/MultipleAccounts.jsx":"84","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/BottomBar.jsx":"85","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/StateManagment/Colors.jsx":"86","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/NotApproved.jsx":"87","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Register.js":"88","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/firebase/useFirestore.js":"89","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/topbar/Iconbar.js":"90","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Login.js":"91","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/topbar/ProfilePhoto.js":"92","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Search.js":"93","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/NewClient.js":"94","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Profile.js":"95","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Members.js":"96","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/PublicProfile.js":"97","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Analytics.js":"98","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Notifications.js":"99","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Settings.js":"100","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Measures.js":"101","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Contributions.js":"102","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/allActivity/AllActivity.js":"103","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/LeftSideBarFullScreen.jsx":"104","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/MyMessages.jsx":"105","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/MyIntroduction.jsx":"106","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/MyGroups.jsx":"107","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/MyEvents.jsx":"108","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/MyContributions.jsx":"109","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/AboutMe.jsx":"110","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Registrations.jsx":"111","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/UserRoles.jsx":"112","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/ProfileSettings.jsx":"113","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Impact/ImpactIndicators.jsx":"114","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Impact/QuestionnaireAnalysis.jsx":"115","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Impact/ImpactProgress.jsx":"116","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Matching/Roadmap.jsx":"117","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Matching/MatchDetail.jsx":"118","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Matching/Matches.jsx":"119","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Matching/MatchProfileFields.jsx":"120","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Matching/MatchItemDetail.jsx":"121","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Matching/MatchItems.jsx":"122","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Matching/AddMatchItem.jsx":"123","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Impact/SendQuestionnaire.jsx":"124","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Impact/Stakeholders.jsx":"125","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/hooks/Location.js":"126","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Matching/MatchCategories.jsx":"127","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Impact/QuestionnaireSettings.jsx":"128","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/hooks/GetYearMonth.jsx":"129","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/ActivityDetail.jsx":"130","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/ActivityGoal.jsx":"131","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Activities.jsx":"132","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/rightSideBar/RightSideBar.js":"133","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/LeftSideBar.js":"134","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/LeftSideBarAuthProfileFullScreen.js":"135","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/LeftSideBarAuthProfile.js":"136","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/hooks/MenuStatus.jsx":"137","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Calender.jsx":"138","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/hooks/ButtonClicked.jsx":"139","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/allActivity/ActivityCard.js":"140","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/rightSideBar/RightSideBarGroup.js":"141","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/hooks/GetLink.jsx":"142","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/rightSideBar/AllMembers.js":"143","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/ActivitySettings.jsx":"144","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/MyChannels.jsx":"145","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Subscriptions.jsx":"146","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/hooks/Colors.js":"147","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/MessageBar.js":"148","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/Reaction.jsx":"149","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/LikeBar.js":"150","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/ReactionBar.js":"151","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/Start.js":"152","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/AddArticle.js":"153","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/Group.js":"154","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/News.js":"155","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/ChatGroups.js":"156","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/Introductions.js":"157","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/Events.js":"158","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/MessageDetail.js":"159","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/ChatRoom.js":"160","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/AddNews.js":"161","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/ArticleDetail.js":"162","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/AddEvent.js":"163","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/GroupSettings.js":"164","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/Channel.js":"165","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/GroupLanding.js":"166","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/KnowledgeCentre.js":"167","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/ChannelSettingsDetail.js":"168","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/AddChannelItem.js":"169","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/ChannelDetail.js":"170","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/EventDetail.js":"171","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/NewsDetail.js":"172","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/GroupSettingsDetail.jsx":"173","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/Likes.jsx":"174","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/EventSignups.jsx":"175","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/IntroductionsCard.js":"176","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/MessageBarGroup.js":"177","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/GroupChannel.jsx":"178","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/ArticleCard.js":"179","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/index.js":"180","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/App.js":"181","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/reportWebVitals.js":"182","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/LoginRegister.js":"183","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Main.js":"184","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/topbar/Topbar.js":"185","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/StateManagment/MobileMenu.js":"186","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/firebase/config.js":"187","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/StateManagment/Auth.js":"188","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/hooks/Colors.js":"189","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/hooks/Client.js":"190","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/BottomBar.jsx":"191","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/MultipleAccounts.jsx":"192","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/NotApproved.jsx":"193","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/StateManagment/Colors.jsx":"194","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Login.js":"195","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Register.js":"196","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/firebase/useFirestore.js":"197","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Search.js":"198","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/NewClient.js":"199","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Profile.js":"200","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Analytics.js":"201","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Members.js":"202","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Settings.js":"203","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/PublicProfile.js":"204","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Notifications.js":"205","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Contributions.js":"206","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Measures.js":"207","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/topbar/Iconbar.js":"208","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/Group.js":"209","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/Start.js":"210","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/AddArticle.js":"211","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/topbar/ProfilePhoto.js":"212","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/Introductions.js":"213","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/News.js":"214","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/ChatGroups.js":"215","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/Events.js":"216","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/MessageDetail.js":"217","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/AddNews.js":"218","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/AddEvent.js":"219","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/ArticleDetail.js":"220","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/ChatRoom.js":"221","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/GroupSettings.js":"222","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/Channel.js":"223","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/ChannelDetail.js":"224","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/AddChannelItem.js":"225","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/KnowledgeCentre.js":"226","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/NewsDetail.js":"227","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/GroupLanding.js":"228","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/ChannelSettingsDetail.js":"229","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/EventDetail.js":"230","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/allActivity/AllActivity.js":"231","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/hooks/Location.js":"232","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/MyIntroduction.jsx":"233","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/MyGroups.jsx":"234","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/MyEvents.jsx":"235","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/LeftSideBarFullScreen.jsx":"236","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/ProfileSettings.jsx":"237","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Subscriptions.jsx":"238","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/UserRoles.jsx":"239","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/MyContributions.jsx":"240","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Registrations.jsx":"241","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/MyChannels.jsx":"242","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/AboutMe.jsx":"243","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/ActivitySettings.jsx":"244","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/MyMessages.jsx":"245","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/GroupSettingsDetail.jsx":"246","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/Likes.jsx":"247","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Impact/QuestionnaireAnalysis.jsx":"248","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Matching/MatchProfileFields.jsx":"249","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Matching/Roadmap.jsx":"250","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Matching/MatchDetail.jsx":"251","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Matching/Matches.jsx":"252","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Matching/MatchItemDetail.jsx":"253","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/hooks/ButtonClicked.jsx":"254","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/hooks/GetYearMonth.jsx":"255","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Matching/MatchItems.jsx":"256","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Matching/AddMatchItem.jsx":"257","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Matching/MatchCategories.jsx":"258","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Impact/ImpactProgress.jsx":"259","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Impact/SendQuestionnaire.jsx":"260","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Impact/ImpactIndicators.jsx":"261","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Impact/Stakeholders.jsx":"262","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Impact/QuestionnaireSettings.jsx":"263","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/EventSignups.jsx":"264","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/LeftSideBar.js":"265","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/LeftSideBarAuthProfileFullScreen.js":"266","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/MessageBar.js":"267","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/allActivity/ActivityCard.js":"268","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/rightSideBar/RightSideBar.js":"269","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/hooks/MenuStatus.jsx":"270","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/LeftSideBarAuthProfile.js":"271","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/Reaction.jsx":"272","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Calender.jsx":"273","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/ArticleCard.js":"274","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/MessageBarGroup.js":"275","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/ReactionBar.js":"276","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/LikeBar.js":"277","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/IntroductionsCard.js":"278","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/rightSideBar/AllMembers.js":"279","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/hooks/GetLink.jsx":"280","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/GroupChannel.jsx":"281","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/ActivityDetail.jsx":"282","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Activities.jsx":"283","/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/ActivityGoal.jsx":"284","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Impact/AddQuestionnaire.jsx":"285","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/ChannelSettings.js":"286","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/WelcomeSettings.js":"287","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ProjectManagement/TaskSettings.jsx":"288","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ProjectManagement/TaskDetail.jsx":"289","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ProjectManagement/AddGoal.js":"290","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ProjectManagement/GoalDetail.js":"291","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ProjectManagement/GoalSettings.js":"292","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ProjectManagement/Goals.js":"293","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ProjectManagement/GoalCard.js":"294","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ProjectManagement/GoalSettingsDetail.jsx":"295","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ProjectManagement/Tasks.jsx":"296"},{"size":500,"mtime":1643965715000,"results":"297","hashOfConfig":"298"},{"size":362,"mtime":1638041339000,"results":"299","hashOfConfig":"298"},{"size":3472,"mtime":1643803559000,"results":"300","hashOfConfig":"298"},{"size":2052,"mtime":1643803409000,"results":"301","hashOfConfig":"298"},{"size":13555,"mtime":1644238077000,"results":"302","hashOfConfig":"298"},{"size":1565,"mtime":1642601732000,"results":"303","hashOfConfig":"298"},{"size":313,"mtime":1638041338000,"results":"304","hashOfConfig":"298"},{"size":545,"mtime":1638041339000,"results":"305","hashOfConfig":"298"},{"size":1018,"mtime":1638041338000,"results":"306","hashOfConfig":"298"},{"size":144,"mtime":1642602088000,"results":"307","hashOfConfig":"298"},{"size":2595,"mtime":1643803288000,"results":"308","hashOfConfig":"298"},{"size":11492,"mtime":1643803411000,"results":"309","hashOfConfig":"298"},{"size":218,"mtime":1638041338000,"results":"310","hashOfConfig":"298"},{"size":859,"mtime":1638041338000,"results":"311","hashOfConfig":"298"},{"size":1664,"mtime":1638041338000,"results":"312","hashOfConfig":"298"},{"size":10378,"mtime":1638041338000,"results":"313","hashOfConfig":"298"},{"size":3059,"mtime":1643382795000,"results":"314","hashOfConfig":"298"},{"size":25693,"mtime":1643709957000,"results":"315","hashOfConfig":"298"},{"size":6944,"mtime":1643803168000,"results":"316","hashOfConfig":"298"},{"size":9650,"mtime":1643806348000,"results":"317","hashOfConfig":"298"},{"size":8254,"mtime":1641901858000,"results":"318","hashOfConfig":"298"},{"size":15563,"mtime":1643806581000,"results":"319","hashOfConfig":"298"},{"size":3132,"mtime":1643973127000,"results":"320","hashOfConfig":"298"},{"size":9476,"mtime":1641902637000,"results":"321","hashOfConfig":"298"},{"size":2830,"mtime":1638041338000,"results":"322","hashOfConfig":"298"},{"size":1040,"mtime":1638041338000,"results":"323","hashOfConfig":"298"},{"size":5298,"mtime":1638041338000,"results":"324","hashOfConfig":"298"},{"size":4331,"mtime":1643808784000,"results":"325","hashOfConfig":"298"},{"size":639,"mtime":1638041339000,"results":"326","hashOfConfig":"298"},{"size":988,"mtime":1638041338000,"results":"327","hashOfConfig":"298"},{"size":2020,"mtime":1638041338000,"results":"328","hashOfConfig":"298"},{"size":7795,"mtime":1644230632000,"results":"329","hashOfConfig":"298"},{"size":1830,"mtime":1638041338000,"results":"330","hashOfConfig":"298"},{"size":29598,"mtime":1643798225000,"results":"331","hashOfConfig":"298"},{"size":1633,"mtime":1638041338000,"results":"332","hashOfConfig":"298"},{"size":1514,"mtime":1639471360000,"results":"333","hashOfConfig":"298"},{"size":6980,"mtime":1641994334000,"results":"334","hashOfConfig":"298"},{"size":4849,"mtime":1638041338000,"results":"335","hashOfConfig":"298"},{"size":2776,"mtime":1639557786000,"results":"336","hashOfConfig":"298"},{"size":2773,"mtime":1638041338000,"results":"337","hashOfConfig":"298"},{"size":2123,"mtime":1638041338000,"results":"338","hashOfConfig":"298"},{"size":13122,"mtime":1643795238000,"results":"339","hashOfConfig":"298"},{"size":5246,"mtime":1638041338000,"results":"340","hashOfConfig":"298"},{"size":5382,"mtime":1643972699000,"results":"341","hashOfConfig":"298"},{"size":1973,"mtime":1638041338000,"results":"342","hashOfConfig":"298"},{"size":2700,"mtime":1638041338000,"results":"343","hashOfConfig":"298"},{"size":3320,"mtime":1643378586000,"results":"344","hashOfConfig":"298"},{"size":11444,"mtime":1644231252000,"results":"345","hashOfConfig":"298"},{"size":4919,"mtime":1642596765000,"results":"346","hashOfConfig":"298"},{"size":11424,"mtime":1644231242000,"results":"347","hashOfConfig":"298"},{"size":5577,"mtime":1642689148000,"results":"348","hashOfConfig":"298"},{"size":7931,"mtime":1643794141000,"results":"349","hashOfConfig":"298"},{"size":12031,"mtime":1643798955000,"results":"350","hashOfConfig":"298"},{"size":226,"mtime":1638041339000,"results":"351","hashOfConfig":"298"},{"size":1064,"mtime":1638041339000,"results":"352","hashOfConfig":"298"},{"size":8153,"mtime":1642686631000,"results":"353","hashOfConfig":"298"},{"size":238,"mtime":1638041338000,"results":"354","hashOfConfig":"298"},{"size":15104,"mtime":1643880389000,"results":"355","hashOfConfig":"298"},{"size":14129,"mtime":1644237665000,"results":"356","hashOfConfig":"298"},{"size":313,"mtime":1638041339000,"results":"357","hashOfConfig":"298"},{"size":192,"mtime":1641985446000,"results":"358","hashOfConfig":"298"},{"size":4853,"mtime":1639490777000,"results":"359","hashOfConfig":"298"},{"size":7485,"mtime":1644230623000,"results":"360","hashOfConfig":"298"},{"size":1941,"mtime":1638041338000,"results":"361","hashOfConfig":"298"},{"size":1282,"mtime":1638041338000,"results":"362","hashOfConfig":"298"},{"size":614,"mtime":1638041339000,"results":"363","hashOfConfig":"298"},{"size":1355,"mtime":1638041338000,"results":"364","hashOfConfig":"298"},{"size":3775,"mtime":1643709880000,"results":"365","hashOfConfig":"298"},{"size":6567,"mtime":1643632359000,"results":"366","hashOfConfig":"298"},{"size":6159,"mtime":1643879383000,"results":"367","hashOfConfig":"298"},{"size":6011,"mtime":1644230601000,"results":"368","hashOfConfig":"298"},{"size":2973,"mtime":1643972942000,"results":"369","hashOfConfig":"298"},{"size":7595,"mtime":1643879863000,"results":"370","hashOfConfig":"298"},{"size":500,"mtime":1638041339000,"results":"371","hashOfConfig":"372"},{"size":3294,"mtime":1638041338000,"results":"373","hashOfConfig":"372"},{"size":362,"mtime":1638041339000,"results":"374","hashOfConfig":"372"},{"size":1891,"mtime":1638041338000,"results":"375","hashOfConfig":"372"},{"size":1565,"mtime":1642601732000,"results":"376","hashOfConfig":"372"},{"size":545,"mtime":1638041339000,"results":"377","hashOfConfig":"372"},{"size":13276,"mtime":1643630985000,"results":"378","hashOfConfig":"372"},{"size":1018,"mtime":1638041338000,"results":"379","hashOfConfig":"372"},{"size":313,"mtime":1638041338000,"results":"380","hashOfConfig":"372"},{"size":144,"mtime":1642602088000,"results":"381","hashOfConfig":"372"},{"size":1703,"mtime":1638041338000,"results":"382","hashOfConfig":"372"},{"size":218,"mtime":1638041338000,"results":"383","hashOfConfig":"372"},{"size":859,"mtime":1638041338000,"results":"384","hashOfConfig":"372"},{"size":11349,"mtime":1638041338000,"results":"385","hashOfConfig":"372"},{"size":10378,"mtime":1638041338000,"results":"386","hashOfConfig":"372"},{"size":25076,"mtime":1643631060000,"results":"387","hashOfConfig":"372"},{"size":3397,"mtime":1638041338000,"results":"388","hashOfConfig":"372"},{"size":1664,"mtime":1638041338000,"results":"389","hashOfConfig":"372"},{"size":639,"mtime":1638041339000,"results":"390","hashOfConfig":"372"},{"size":3059,"mtime":1643382795000,"results":"391","hashOfConfig":"372"},{"size":9844,"mtime":1641397486000,"results":"392","hashOfConfig":"372"},{"size":5845,"mtime":1638041338000,"results":"393","hashOfConfig":"372"},{"size":3062,"mtime":1638041338000,"results":"394","hashOfConfig":"372"},{"size":8254,"mtime":1641901858000,"results":"395","hashOfConfig":"372"},{"size":9476,"mtime":1641902637000,"results":"396","hashOfConfig":"372"},{"size":2830,"mtime":1638041338000,"results":"397","hashOfConfig":"372"},{"size":14501,"mtime":1642683607000,"results":"398","hashOfConfig":"372"},{"size":1040,"mtime":1638041338000,"results":"399","hashOfConfig":"372"},{"size":5298,"mtime":1638041338000,"results":"400","hashOfConfig":"372"},{"size":988,"mtime":1638041338000,"results":"401","hashOfConfig":"372"},{"size":7795,"mtime":1641566058000,"results":"402","hashOfConfig":"372"},{"size":1830,"mtime":1638041338000,"results":"403","hashOfConfig":"372"},{"size":2020,"mtime":1638041338000,"results":"404","hashOfConfig":"372"},{"size":1633,"mtime":1638041338000,"results":"405","hashOfConfig":"372"},{"size":2776,"mtime":1639557786000,"results":"406","hashOfConfig":"372"},{"size":1514,"mtime":1639471360000,"results":"407","hashOfConfig":"372"},{"size":4849,"mtime":1638041338000,"results":"408","hashOfConfig":"372"},{"size":13110,"mtime":1641909582000,"results":"409","hashOfConfig":"372"},{"size":24500,"mtime":1641993081000,"results":"410","hashOfConfig":"372"},{"size":6980,"mtime":1641994334000,"results":"411","hashOfConfig":"372"},{"size":6152,"mtime":1643541857000,"results":"412","hashOfConfig":"372"},{"size":2625,"mtime":1643631930000,"results":"413","hashOfConfig":"372"},{"size":4789,"mtime":1643541955000,"results":"414","hashOfConfig":"372"},{"size":3320,"mtime":1643378586000,"results":"415","hashOfConfig":"372"},{"size":11424,"mtime":1643379651000,"results":"416","hashOfConfig":"372"},{"size":5577,"mtime":1642689148000,"results":"417","hashOfConfig":"372"},{"size":4919,"mtime":1642596765000,"results":"418","hashOfConfig":"372"},{"size":11404,"mtime":1642688897000,"results":"419","hashOfConfig":"372"},{"size":7567,"mtime":1643628387000,"results":"420","hashOfConfig":"372"},{"size":11993,"mtime":1643195779000,"results":"421","hashOfConfig":"372"},{"size":6567,"mtime":1643632359000,"results":"422","hashOfConfig":"372"},{"size":2676,"mtime":1643542050000,"results":"423","hashOfConfig":"372"},{"size":226,"mtime":1638041339000,"results":"424","hashOfConfig":"372"},{"size":8153,"mtime":1642686631000,"results":"425","hashOfConfig":"372"},{"size":3769,"mtime":1643630795000,"results":"426","hashOfConfig":"372"},{"size":1064,"mtime":1638041339000,"results":"427","hashOfConfig":"372"},{"size":5246,"mtime":1638041338000,"results":"428","hashOfConfig":"372"},{"size":2700,"mtime":1638041338000,"results":"429","hashOfConfig":"372"},{"size":1973,"mtime":1638041338000,"results":"430","hashOfConfig":"372"},{"size":238,"mtime":1638041338000,"results":"431","hashOfConfig":"372"},{"size":7485,"mtime":1641566042000,"results":"432","hashOfConfig":"372"},{"size":15921,"mtime":1642416947000,"results":"433","hashOfConfig":"372"},{"size":14962,"mtime":1642416918000,"results":"434","hashOfConfig":"372"},{"size":313,"mtime":1638041339000,"results":"435","hashOfConfig":"372"},{"size":4853,"mtime":1639490777000,"results":"436","hashOfConfig":"372"},{"size":192,"mtime":1641985446000,"results":"437","hashOfConfig":"372"},{"size":1941,"mtime":1638041338000,"results":"438","hashOfConfig":"372"},{"size":1282,"mtime":1638041338000,"results":"439","hashOfConfig":"372"},{"size":614,"mtime":1638041339000,"results":"440","hashOfConfig":"372"},{"size":1355,"mtime":1638041338000,"results":"441","hashOfConfig":"372"},{"size":5313,"mtime":1638041338000,"results":"442","hashOfConfig":"372"},{"size":2123,"mtime":1638041338000,"results":"443","hashOfConfig":"372"},{"size":2773,"mtime":1638041338000,"results":"444","hashOfConfig":"372"},{"size":790,"mtime":1643808014000,"results":"445","hashOfConfig":"298"},{"size":6831,"mtime":1644231420000,"results":"446","hashOfConfig":"298"},{"size":11350,"mtime":1644231408000,"results":"447","hashOfConfig":"298"},{"size":8534,"mtime":1644231063000,"results":"448","hashOfConfig":"298"},{"size":6173,"mtime":1644231358000,"results":"449","hashOfConfig":"298"},{"size":2491,"mtime":1644231067000,"results":"450","hashOfConfig":"298"},{"size":14950,"mtime":1644237092000,"results":"451","hashOfConfig":"298"},{"size":9132,"mtime":1644237457000,"results":"452","hashOfConfig":"298"},{"size":4503,"mtime":1644237487000,"results":"453","hashOfConfig":"298"},{"size":10314,"mtime":1644237496000,"results":"454","hashOfConfig":"298"},{"size":4244,"mtime":1644237346000,"results":"455","hashOfConfig":"298"},{"size":5721,"mtime":1644237678000,"results":"456","hashOfConfig":"298"},{"size":12462,"mtime":1644231753000,"results":"457","hashOfConfig":"298"},{"size":7145,"mtime":1644231786000,"results":"458","hashOfConfig":"298"},{"size":10787,"mtime":1644237435000,"results":"459","hashOfConfig":"298"},{"size":2412,"mtime":1644237689000,"results":"460","hashOfConfig":"298"},{"size":16184,"mtime":1644231818000,"results":"461","hashOfConfig":"298"},{"size":5073,"mtime":1644235271000,"results":"462","hashOfConfig":"298"},{"size":5052,"mtime":1644237477000,"results":"463","hashOfConfig":"298"},{"size":5811,"mtime":1644237463000,"results":"464","hashOfConfig":"298"},{"size":3038,"mtime":1644235325000,"results":"465","hashOfConfig":"298"},{"size":7420,"mtime":1644237234000,"results":"466","hashOfConfig":"298"},{"size":10847,"mtime":1644235349000,"results":"467","hashOfConfig":"298"},{"size":2610,"mtime":1644237163000,"results":"468","hashOfConfig":"298"},{"size":9805,"mtime":1644231621000,"results":"469","hashOfConfig":"298"},{"size":2675,"mtime":1644235392000,"results":"470","hashOfConfig":"298"},{"size":7733,"mtime":1644237333000,"results":"471","hashOfConfig":"298"},{"size":2520,"mtime":1644237379000,"results":"472","hashOfConfig":"298"},{"size":2238,"mtime":1644237291000,"results":"473","hashOfConfig":"298"},{"size":2620,"mtime":1644237357000,"results":"474","hashOfConfig":"298"},{"size":6344,"mtime":1644237051000,"results":"475","hashOfConfig":"298"},{"size":2465,"mtime":1644237304000,"results":"476","hashOfConfig":"298"},{"size":1585,"mtime":1644231061000,"results":"477","hashOfConfig":"298"},{"size":500,"mtime":1643965715000,"results":"478","hashOfConfig":"479"},{"size":3472,"mtime":1643803559000,"results":"480","hashOfConfig":"479"},{"size":362,"mtime":1638041339000,"results":"481","hashOfConfig":"479"},{"size":2052,"mtime":1643803409000,"results":"482","hashOfConfig":"479"},{"size":13565,"mtime":1644231575000,"results":"483","hashOfConfig":"479"},{"size":1565,"mtime":1642601732000,"results":"484","hashOfConfig":"479"},{"size":313,"mtime":1638041338000,"results":"485","hashOfConfig":"479"},{"size":545,"mtime":1638041339000,"results":"486","hashOfConfig":"479"},{"size":1018,"mtime":1638041338000,"results":"487","hashOfConfig":"479"},{"size":790,"mtime":1643808014000,"results":"488","hashOfConfig":"479"},{"size":144,"mtime":1642602088000,"results":"489","hashOfConfig":"479"},{"size":218,"mtime":1638041338000,"results":"490","hashOfConfig":"479"},{"size":2595,"mtime":1643803288000,"results":"491","hashOfConfig":"479"},{"size":11492,"mtime":1643803411000,"results":"492","hashOfConfig":"479"},{"size":859,"mtime":1638041338000,"results":"493","hashOfConfig":"479"},{"size":1664,"mtime":1638041338000,"results":"494","hashOfConfig":"479"},{"size":10378,"mtime":1638041338000,"results":"495","hashOfConfig":"479"},{"size":25693,"mtime":1643709957000,"results":"496","hashOfConfig":"479"},{"size":3059,"mtime":1643382795000,"results":"497","hashOfConfig":"479"},{"size":9650,"mtime":1643806348000,"results":"498","hashOfConfig":"479"},{"size":6944,"mtime":1643803168000,"results":"499","hashOfConfig":"479"},{"size":9476,"mtime":1641902637000,"results":"500","hashOfConfig":"479"},{"size":3132,"mtime":1643973127000,"results":"501","hashOfConfig":"479"},{"size":15563,"mtime":1643806581000,"results":"502","hashOfConfig":"479"},{"size":8254,"mtime":1641901858000,"results":"503","hashOfConfig":"479"},{"size":2830,"mtime":1638041338000,"results":"504","hashOfConfig":"479"},{"size":5298,"mtime":1638041338000,"results":"505","hashOfConfig":"479"},{"size":1040,"mtime":1638041338000,"results":"506","hashOfConfig":"479"},{"size":4331,"mtime":1643808784000,"results":"507","hashOfConfig":"479"},{"size":9126,"mtime":1644231705000,"results":"508","hashOfConfig":"479"},{"size":2491,"mtime":1644231067000,"results":"509","hashOfConfig":"479"},{"size":14938,"mtime":1644231060000,"results":"510","hashOfConfig":"479"},{"size":639,"mtime":1638041339000,"results":"511","hashOfConfig":"479"},{"size":4241,"mtime":1644231651000,"results":"512","hashOfConfig":"479"},{"size":4556,"mtime":1644231064000,"results":"513","hashOfConfig":"479"},{"size":10295,"mtime":1644230948000,"results":"514","hashOfConfig":"479"},{"size":5814,"mtime":1644231672000,"results":"515","hashOfConfig":"479"},{"size":12462,"mtime":1644231753000,"results":"516","hashOfConfig":"479"},{"size":10793,"mtime":1644235249000,"results":"517","hashOfConfig":"479"},{"size":16184,"mtime":1644231818000,"results":"518","hashOfConfig":"479"},{"size":2400,"mtime":1644230934000,"results":"519","hashOfConfig":"479"},{"size":7145,"mtime":1644231786000,"results":"520","hashOfConfig":"479"},{"size":5073,"mtime":1644235271000,"results":"521","hashOfConfig":"479"},{"size":5111,"mtime":1644231061000,"results":"522","hashOfConfig":"479"},{"size":2595,"mtime":1644230947000,"results":"523","hashOfConfig":"479"},{"size":10847,"mtime":1644235349000,"results":"524","hashOfConfig":"479"},{"size":3038,"mtime":1644235325000,"results":"525","hashOfConfig":"479"},{"size":2675,"mtime":1644235392000,"results":"526","hashOfConfig":"479"},{"size":5808,"mtime":1644235289000,"results":"527","hashOfConfig":"479"},{"size":7390,"mtime":1644230948000,"results":"528","hashOfConfig":"479"},{"size":9805,"mtime":1644231621000,"results":"529","hashOfConfig":"479"},{"size":988,"mtime":1638041338000,"results":"530","hashOfConfig":"479"},{"size":226,"mtime":1638041339000,"results":"531","hashOfConfig":"479"},{"size":2020,"mtime":1638041338000,"results":"532","hashOfConfig":"479"},{"size":1633,"mtime":1638041338000,"results":"533","hashOfConfig":"479"},{"size":2776,"mtime":1639557786000,"results":"534","hashOfConfig":"479"},{"size":7795,"mtime":1644230632000,"results":"535","hashOfConfig":"479"},{"size":6980,"mtime":1641994334000,"results":"536","hashOfConfig":"479"},{"size":2773,"mtime":1638041338000,"results":"537","hashOfConfig":"479"},{"size":29598,"mtime":1643798225000,"results":"538","hashOfConfig":"479"},{"size":1514,"mtime":1639471360000,"results":"539","hashOfConfig":"479"},{"size":13122,"mtime":1643795238000,"results":"540","hashOfConfig":"479"},{"size":2123,"mtime":1638041338000,"results":"541","hashOfConfig":"479"},{"size":4849,"mtime":1638041338000,"results":"542","hashOfConfig":"479"},{"size":5382,"mtime":1643972699000,"results":"543","hashOfConfig":"479"},{"size":1830,"mtime":1638041338000,"results":"544","hashOfConfig":"479"},{"size":7712,"mtime":1644230963000,"results":"545","hashOfConfig":"479"},{"size":2508,"mtime":1644230980000,"results":"546","hashOfConfig":"479"},{"size":7595,"mtime":1643879863000,"results":"547","hashOfConfig":"479"},{"size":4919,"mtime":1642596765000,"results":"548","hashOfConfig":"479"},{"size":3320,"mtime":1643378586000,"results":"549","hashOfConfig":"479"},{"size":11444,"mtime":1644231252000,"results":"550","hashOfConfig":"479"},{"size":5577,"mtime":1642689148000,"results":"551","hashOfConfig":"479"},{"size":11424,"mtime":1644231242000,"results":"552","hashOfConfig":"479"},{"size":192,"mtime":1641985446000,"results":"553","hashOfConfig":"479"},{"size":1064,"mtime":1638041339000,"results":"554","hashOfConfig":"479"},{"size":7931,"mtime":1643794141000,"results":"555","hashOfConfig":"479"},{"size":12031,"mtime":1643798955000,"results":"556","hashOfConfig":"479"},{"size":8153,"mtime":1642686631000,"results":"557","hashOfConfig":"479"},{"size":6011,"mtime":1644230601000,"results":"558","hashOfConfig":"479"},{"size":6567,"mtime":1643632359000,"results":"559","hashOfConfig":"479"},{"size":6159,"mtime":1643879383000,"results":"560","hashOfConfig":"479"},{"size":2973,"mtime":1643972942000,"results":"561","hashOfConfig":"479"},{"size":3775,"mtime":1643709880000,"results":"562","hashOfConfig":"479"},{"size":2223,"mtime":1644230963000,"results":"563","hashOfConfig":"479"},{"size":7485,"mtime":1644230623000,"results":"564","hashOfConfig":"479"},{"size":15104,"mtime":1643880389000,"results":"565","hashOfConfig":"479"},{"size":6831,"mtime":1644231420000,"results":"566","hashOfConfig":"479"},{"size":1941,"mtime":1638041338000,"results":"567","hashOfConfig":"479"},{"size":238,"mtime":1638041338000,"results":"568","hashOfConfig":"479"},{"size":313,"mtime":1638041339000,"results":"569","hashOfConfig":"479"},{"size":14171,"mtime":1643880377000,"results":"570","hashOfConfig":"479"},{"size":11350,"mtime":1644231408000,"results":"571","hashOfConfig":"479"},{"size":4853,"mtime":1639490777000,"results":"572","hashOfConfig":"479"},{"size":1585,"mtime":1644231061000,"results":"573","hashOfConfig":"479"},{"size":6318,"mtime":1644230997000,"results":"574","hashOfConfig":"479"},{"size":6173,"mtime":1644231358000,"results":"575","hashOfConfig":"479"},{"size":8534,"mtime":1644231063000,"results":"576","hashOfConfig":"479"},{"size":2608,"mtime":1644230963000,"results":"577","hashOfConfig":"479"},{"size":1355,"mtime":1638041338000,"results":"578","hashOfConfig":"479"},{"size":614,"mtime":1638041339000,"results":"579","hashOfConfig":"479"},{"size":2453,"mtime":1644230963000,"results":"580","hashOfConfig":"479"},{"size":5246,"mtime":1638041338000,"results":"581","hashOfConfig":"479"},{"size":1973,"mtime":1638041338000,"results":"582","hashOfConfig":"479"},{"size":2700,"mtime":1638041338000,"results":"583","hashOfConfig":"479"},{"size":8355,"mtime":1644230838000,"results":"584","hashOfConfig":"298"},{"size":4503,"mtime":1644237604000,"results":"585","hashOfConfig":"298"},{"size":8068,"mtime":1644237645000,"results":"586","hashOfConfig":"298"},{"size":5631,"mtime":1644237978000,"results":"587","hashOfConfig":"298"},{"size":4272,"mtime":1644238048000,"results":"588","hashOfConfig":"298"},{"size":10259,"mtime":1644230749000,"results":"589","hashOfConfig":"298"},{"size":4240,"mtime":1644237944000,"results":"590","hashOfConfig":"298"},{"size":2256,"mtime":1644230750000,"results":"591","hashOfConfig":"298"},{"size":967,"mtime":1644230750000,"results":"592","hashOfConfig":"298"},{"size":1106,"mtime":1644230749000,"results":"593","hashOfConfig":"298"},{"size":6478,"mtime":1644230750000,"results":"594","hashOfConfig":"298"},{"size":6367,"mtime":1644238030000,"results":"595","hashOfConfig":"298"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},"1r9k9ns",{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605","usedDeprecatedRules":"598"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"608","messages":"609","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"610","usedDeprecatedRules":"598"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"621","usedDeprecatedRules":"598"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"624","usedDeprecatedRules":"598"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"631","usedDeprecatedRules":"598"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634","usedDeprecatedRules":"598"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"637","usedDeprecatedRules":"598"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"640","usedDeprecatedRules":"598"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"598"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"646","usedDeprecatedRules":"598"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"649","usedDeprecatedRules":"598"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652","usedDeprecatedRules":"598"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"655","usedDeprecatedRules":"598"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"658","usedDeprecatedRules":"598"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"667","usedDeprecatedRules":"598"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"670","usedDeprecatedRules":"598"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"598"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"688","usedDeprecatedRules":"598"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"691","usedDeprecatedRules":"598"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"696","usedDeprecatedRules":"598"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699","usedDeprecatedRules":"598"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"702","usedDeprecatedRules":"598"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"705","usedDeprecatedRules":"598"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"708","usedDeprecatedRules":"598"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"711","usedDeprecatedRules":"598"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"714","usedDeprecatedRules":"598"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"717","usedDeprecatedRules":"598"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"720","usedDeprecatedRules":"598"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"723","usedDeprecatedRules":"598"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"726","usedDeprecatedRules":"598"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"729","usedDeprecatedRules":"598"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"732","usedDeprecatedRules":"598"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"735","usedDeprecatedRules":"598"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"742","usedDeprecatedRules":"598"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"747","usedDeprecatedRules":"598"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"750","usedDeprecatedRules":"598"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"753","usedDeprecatedRules":"598"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"758","usedDeprecatedRules":"598"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"761","usedDeprecatedRules":"598"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"774","messages":"775","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"778","usedDeprecatedRules":"598"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"781","usedDeprecatedRules":"598"},{"filePath":"782","messages":"783","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"784","usedDeprecatedRules":"598"},{"filePath":"785","messages":"786","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5555wz",{"filePath":"787","messages":"788","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"789","messages":"790","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"791","messages":"792","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"793","messages":"794","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"795","messages":"796","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"797","messages":"798","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"799","messages":"800","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"801","messages":"802","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"803","messages":"804","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"805","messages":"806","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"807","messages":"808","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"809","messages":"810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"811","messages":"812","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"813","messages":"814","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"815","messages":"816","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"817","messages":"818","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"819","messages":"820","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"821","messages":"822","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"823","messages":"824","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"825","messages":"826","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"827","messages":"828","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"829","messages":"830","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"831","messages":"832","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"833","messages":"834","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"835","messages":"836","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"837","messages":"838","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"839","messages":"840","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"841","messages":"842","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"843","messages":"844","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"845","messages":"846","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"847","messages":"848","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"849","messages":"850","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"851","messages":"852","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"853","messages":"854","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"855","messages":"856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"857","messages":"858","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"859","messages":"860","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"861","messages":"862","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"863","messages":"864","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"865","messages":"866","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"867","messages":"868","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"869","messages":"870","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"871","messages":"872","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"873","messages":"874","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"875","messages":"876","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"877","messages":"878","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"879","messages":"880","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"881","messages":"882","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"883","messages":"884","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"885","messages":"886","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"887","messages":"888","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"889","messages":"890","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"891","messages":"892","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"893","messages":"894","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"895","messages":"896","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"897","messages":"898","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"899","messages":"900","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"901","messages":"902","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"903","messages":"904","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"905","messages":"906","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"907","messages":"908","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"909","messages":"910","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"911","messages":"912","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"913","messages":"914","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"915","messages":"916","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"917","messages":"918","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"919","messages":"920","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"921","messages":"922","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"923","messages":"924","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"925","messages":"926","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"927","messages":"928","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"929","messages":"930","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"931","messages":"932","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"933","messages":"934","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"935","usedDeprecatedRules":"598"},{"filePath":"936","messages":"937","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"938","usedDeprecatedRules":"598"},{"filePath":"939","messages":"940","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"941","usedDeprecatedRules":"598"},{"filePath":"942","messages":"943","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"944","usedDeprecatedRules":"598"},{"filePath":"945","messages":"946","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"947","messages":"948","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"949","usedDeprecatedRules":"598"},{"filePath":"950","messages":"951","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"952","usedDeprecatedRules":"598"},{"filePath":"953","messages":"954","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"955","usedDeprecatedRules":"598"},{"filePath":"956","messages":"957","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"958","usedDeprecatedRules":"598"},{"filePath":"959","messages":"960","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"961","messages":"962","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"963","usedDeprecatedRules":"598"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"966","usedDeprecatedRules":"598"},{"filePath":"967","messages":"968","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"969","usedDeprecatedRules":"598"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"972","usedDeprecatedRules":"598"},{"filePath":"973","messages":"974","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"975","messages":"976","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"977","usedDeprecatedRules":"598"},{"filePath":"978","messages":"979","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"980","usedDeprecatedRules":"598"},{"filePath":"981","messages":"982","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"983","usedDeprecatedRules":"598"},{"filePath":"984","messages":"985","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"986","usedDeprecatedRules":"598"},{"filePath":"987","messages":"988","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"989","usedDeprecatedRules":"598"},{"filePath":"990","messages":"991","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"992","usedDeprecatedRules":"598"},{"filePath":"993","messages":"994","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"995","usedDeprecatedRules":"598"},{"filePath":"996","messages":"997","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"998","messages":"999","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1000","usedDeprecatedRules":"598"},{"filePath":"1001","messages":"1002","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"1003","messages":"1004","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1005","usedDeprecatedRules":"598"},{"filePath":"1006","messages":"1007","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1012","usedDeprecatedRules":"598"},{"filePath":"1013","messages":"1014","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1015","usedDeprecatedRules":"598"},{"filePath":"1016","messages":"1017","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1018","usedDeprecatedRules":"598"},{"filePath":"1019","messages":"1020","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"1021","messages":"1022","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13clqbj",{"filePath":"1023","messages":"1024","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1025","messages":"1026","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1027","messages":"1028","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1029","messages":"1030","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1031","messages":"1032","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"1033","messages":"1034","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1035","messages":"1036","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1037","messages":"1038","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1039","messages":"1040","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1041","messages":"1042","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1043","messages":"1044","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1045","messages":"1046","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1047","messages":"1048","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"1049","messages":"1050","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1051","messages":"1052","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1053","messages":"1054","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1055","messages":"1056","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1057","messages":"1058","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1059","messages":"1060","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1061","messages":"1062","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1063","messages":"1064","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1065","messages":"1066","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1067","messages":"1068","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1069","messages":"1070","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1071","messages":"1072","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1073","messages":"1074","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1075","messages":"1076","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1077","messages":"1078","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1079","messages":"1080","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1081","messages":"1082","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1083","messages":"1084","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1085","messages":"1086","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1087","messages":"1088","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1089","messages":"1090","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1091","messages":"1092","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1093","messages":"1094","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1095","messages":"1096","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1097","messages":"1098","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1099","messages":"1100","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1101","messages":"1102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1103","messages":"1104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1105","messages":"1106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1107","messages":"1108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1109","messages":"1110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1111","messages":"1112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1113","messages":"1114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1115","messages":"1116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1117","messages":"1118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1119","messages":"1120","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1121","messages":"1122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1123","messages":"1124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1125","messages":"1126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1127","messages":"1128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1129","messages":"1130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1131","messages":"1132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1133","messages":"1134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1135","messages":"1136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1137","messages":"1138","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1139","messages":"1140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1141","messages":"1142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1143","messages":"1144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1145","messages":"1146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1147","messages":"1148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1149","messages":"1150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1151","messages":"1152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1153","messages":"1154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1155","messages":"1156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1157","messages":"1158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1159","messages":"1160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1161","messages":"1162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1163","messages":"1164","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1165","messages":"1166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1167","messages":"1168","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1169","messages":"1170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1171","messages":"1172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1173","messages":"1174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1175","messages":"1176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1177","messages":"1178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1179","messages":"1180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1181","messages":"1182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1183","messages":"1184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1185","messages":"1186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1187","messages":"1188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1189","messages":"1190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1191","messages":"1192","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1193","messages":"1194","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1195","messages":"1196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1197","messages":"1198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1199","messages":"1200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1201","messages":"1202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1203","messages":"1204","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1205","messages":"1206","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1207","messages":"1208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1209","messages":"1210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1211","messages":"1212","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1213","messages":"1214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1215","messages":"1216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1217","messages":"1218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1219","messages":"1220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1221","messages":"1222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1223","messages":"1224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1225","messages":"1226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1227","messages":"1228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1229","messages":"1230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1231","messages":"1232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1233","usedDeprecatedRules":"598"},{"filePath":"1234","messages":"1235","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1236","usedDeprecatedRules":"598"},{"filePath":"1237","messages":"1238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1239","usedDeprecatedRules":"598"},{"filePath":"1240","messages":"1241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1242","messages":"1243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"598"},{"filePath":"1244","messages":"1245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1246","messages":"1247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1248","usedDeprecatedRules":"598"},{"filePath":"1249","messages":"1250","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1251","messages":"1252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1253","messages":"1254","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1255","messages":"1256","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1257","messages":"1258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/index.js",[],["1259","1260"],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/reportWebVitals.js",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/App.js",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/LoginRegister.js",["1261"],"import Login from \"./Login\"\nimport Register from \"./Register\"\nimport { useState } from \"react\"\nimport { useFirestore } from \"../firebase/useFirestore\"\nimport NewUserIcon from '../images/icons/new-user-icon.png'\nimport DoorIcon2 from '../images/icons/door-icon-2.png'\nimport Colors from \"../hooks/Colors\";\n\nconst LoginRegister = () => {\n\n    const [form, setForm] = useState(\"Login\")\n\n    const compagnies = useFirestore(\"CompagnyMeta\")\n    const colors = Colors()\n\n    const loginHandler = () => {\n        setForm(\"Login\")\n    }\n\n    const registerHandler = () => {\n        setForm(\"Register\")\n    }\n\n    const FormToggle = () => {\n        if(form === \"Login\"){\n            return <Login />\n        } else if (form === \"Register\"){\n            return <Register />\n        }\n    }\n\n    let logo = \"\"\n    let website = \"\"\n\n    compagnies && compagnies.map(doc => {\n        logo = doc.Logo\n        website = doc.Website\n    })\n\n    return (\n        <div>\n        <header className=\"top-bar\" style={{backgroundColor: colors.TopBarColor}}>\n            <a href={`${website}`}><img src={logo} className=\"top-bar-logo\" alt=\"logo\" /></a>\n        </header>\n        <div className=\"main-login-register\" style={{backgroundColor: colors.BackgroundColor}}>\n             <div className=\"left-side-bar-login-register\">\n                <div className=\"channel-div-login-register\">\n                    <div className=\"channel-inner-div-login-register\">\n                        <div className='login-register-container' onClick={loginHandler}>\n                            <img src={DoorIcon2} alt=\"\"/>\n                            <p>Login</p>\n                        </div>\n                        <div className='login-register-container' onClick={registerHandler}>\n                            <img src={NewUserIcon} alt=\"\"/>\n                            <p>Account maken</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <FormToggle />\n        </div>\n        </div>\n    )\n}\n\nexport default LoginRegister\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Main.js",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/topbar/Topbar.js",["1262","1263"],"import Iconbar from '../topbar/Iconbar';\nimport ProfilePhoto from '../topbar/ProfilePhoto';\nimport '../../CSS/topbar.css';\nimport {useFirestore} from \"../../firebase/useFirestore\"\nimport menuIcon from '../../images/icons/menu-icon.png'\nimport menuOpenIcon from '../../images/icons/menu-open-icon.png'\nimport { useContext, useState } from 'react';\nimport { MobileMenu } from '../../StateManagment/MobileMenu';\nimport { Colors } from \"../../StateManagment/Colors\";\n\nconst Topbar = () => {\n    const [colors] = useContext(Colors)\n    const [menu, setMenu] = useContext(MobileMenu)\n    const [icon, setIcon] = useState(menuIcon)\n    const docs  = useFirestore(\"CompagnyMeta\")\n\n    let logo = \"\"\n    let website = \"\"\n\n    docs && docs.map(doc => {\n        logo = doc.Logo\n        website = doc.Website\n    })\n\n    const showLeftSideBar = () => {\n        if(menu === \"none\"){\n            setMenu(\"flex\")\n            setIcon(menuOpenIcon)\n        } else if (menu === \"flex\"){\n            setMenu(\"none\")\n            setIcon(menuIcon)\n        }\n    }\n\n    return (\n        <header className=\"top-bar\" style={{backgroundColor: colors.Topbar}}>\n            <div className=\"left-side-bar-toggle\">\n                <img src={icon} alt=\"\" onClick={showLeftSideBar} />\n            </div>\n            <a href={`${website}`} target=\"_blank\" ><img src={logo} className=\"top-bar-logo\" alt=\"logo\" /></a>\n            <div className=\"iconbar-external-container\">\n                <Iconbar/>\n            </div>\n            <ProfilePhoto />\n        </header>\n    )\n}\n\nexport default Topbar\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/StateManagment/MobileMenu.js",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/firebase/config.js",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/StateManagment/Auth.js",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/hooks/Client.js",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/MultipleAccounts.jsx",["1264","1265","1266","1267","1268"],"import { useFirestore } from \"../firebase/useFirestore\"\nimport { db, timestamp, auth } from \"../firebase/config\";\nimport uuid from 'react-uuid';\nimport { client } from \"../hooks/Client\";\nimport { useHistory } from \"react-router-dom\"\nimport firebase from 'firebase';\nimport { useContext, useState, useEffect } from 'react';\nimport Colors from \"../hooks/Colors\";\nimport ButtonClicked from \"../hooks/ButtonClicked\";\n\nconst MultipleAccounts = () => {\n    const [name, setName] = useState('')\n    const [userDocID, setUserDocID] = useState('')\n    const [userID, setUserID] = useState('')\n    const [logo, setLogo] = useState('')\n    const [website, setWebsite] = useState('')\n    const [communityName, setCommunityName] = useState('')\n\n    const compagnies = useFirestore(\"CompagnyMeta\")\n    \n    const colors = Colors()\n\n    auth.onAuthStateChanged(User => {\n        if(User){\n\n            db.collection(\"Users\")\n            .where(\"Email\", \"==\", User.email)\n            .get()\n            .then(querySnapshot => {\n            querySnapshot.forEach(doc => {\n                const name = doc.data().UserName\n                const ID = doc.data().ID\n\n                setName(name)\n                setUserDocID(doc.id)\n                setUserID(ID)\n            })\n            })\n        } else if (User === null) {\n            return\n        }\n        })\n\n    useEffect(() => {\n\n        compagnies && compagnies.forEach(doc => {\n            setLogo(doc.Logo)\n            setWebsite(doc.Website)\n            setCommunityName(doc.CommunityName)\n        })\n\n    },[compagnies])\n\n    const registerUser = (e) => {\n\n        ButtonClicked(e, 'Aangemeld')\n\n        db.collection(\"Users\")\n        .doc(userDocID)\n        .update({\n            Compagny: firebase.firestore.FieldValue.arrayUnion(client)\n        })\n        .then(() => {\n            window.location.reload()\n        })\n      }\n\n    return (\n        <div>\n            <header className=\"top-bar\" style={{backgroundColor: colors.TopBarColor}}>\n                <a href={`${website}`}><img src={logo} className=\"top-bar-logo\" alt=\"logo\" /></a>\n            </header>\n            <div className=\"main\" style={{backgroundColor: colors.BackgroundColor}}>\n                <div className=\"approval-message-container\">\n                    <h2>Hoi {name}</h2>\n                    <h1>Welkom bij {communityName}</h1>\n                    <h2>Wil je lid worden van onze online omgeving?</h2>\n                    <button onClick={registerUser}>Aanmelden</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MultipleAccounts\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/NotApproved.jsx",["1269","1270","1271","1272","1273"],"import { useFirestore, useFirestoreUser } from \"../firebase/useFirestore\"\nimport { useState, useEffect } from \"react\"\nimport { auth } from \"../firebase/config\"\nimport { db, timestamp } from \"../firebase/config\"\nimport { client } from \"../hooks/Client\"\nimport Location from \"../hooks/Location\"\nimport { useHistory } from \"react-router-dom\"\nimport uuid from 'react-uuid';\nimport GetYearMonth from '../hooks/GetYearMonth'\nimport firebase from 'firebase'\nimport Colors from \"../hooks/Colors\";\n\nconst NotApproved = () => {\n    const [authO, setAuthO] = useState('')\n    const [user, setUser] = useState(null)\n    const [online, setOnline] = useState(null)\n    const [showSendMailContainer, setshowSendMailContainer] = useState(\"flex\")\n    const [showMailSendContainer, setshowMailSendContainer] = useState(\"none\")\n    const [communityName, setCommunityName] = useState(\"\")\n    const [logo, setLogo] = useState(\"\")\n    const [website, setWebsite] = useState(\"\")\n    const [headerPhoto, setHeaderPhoto] = useState(null)\n    const [verificationMethode, setVerificationMethode] = useState(\"\")\n\n    const history = useHistory()\n    const id = uuid()\n    const getYearMonth = GetYearMonth()\n    const location = Location()[3]\n    const colors = Colors()\n\n    let route = ''\n\n    if(location != undefined){\n        route = location\n    }\n\n    const compagnies = useFirestore(\"CompagnyMeta\")\n    const banners = useFirestore('Banners')\n    const users = useFirestoreUser(route)\n\n    useEffect(() => {\n        banners && banners.forEach(banner => {\n            const header = banner.NewMember\n            setHeaderPhoto(header)\n        })\n\n    }, [banners])\n\n    useEffect(() => {\n        users && users.forEach(user => {\n            setUser(user)\n        })\n    }, [users])\n\n    useEffect(() => {\n        auth.onAuthStateChanged(User =>{\n            if(User){\n                setOnline(true)\n                db.collection(\"Users\")\n                .where(\"Compagny\", \"array-contains\", client)\n                .where(\"Email\", \"==\", User.email)\n                .onSnapshot(querySnapshot => {\n                    querySnapshot.forEach (doc => {\n                    setAuthO(doc.data())\n                })\n            })\n            } else {\n                setOnline(null)\n            }\n        })\n    }, [compagnies])\n\n    useEffect(() => {\n        compagnies && compagnies.forEach(comp => {\n            setLogo(comp.Logo)\n            setWebsite(comp.Website)\n            setCommunityName(comp.CommunityName)\n            setVerificationMethode(comp.VerificationMethode)\n        })\n    }, [compagnies])\n\n    const verificationNotice = () => {\n\n        console.log(verificationMethode, route, user, online)\n\n        if(verificationMethode === \"Admin\" && route === '1' && user != null){ \n            return  <div>\n                        <h2>Je account wacht nog op goedkeuring van een beheerder</h2>\n                        <p>Zodra je account is goedgekeurd ontvang je een mailtje en kun je direct inloggen.</p>\n                    </div>\n        } else if (verificationMethode === \"Admin\" && route === '1' && user === null  && online === true){\n            return  <div>\n                        <h2>Je account wacht nog op goedkeuring van een beheerder</h2>\n                        <p>Zodra je account is goedgekeurd ontvang je een mailtje en kun je direct inloggen.</p>\n                    </div>\n        } else if(verificationMethode === \"Email\" && route === '1' && user != null){\n            return  <div>\n                        <h2>Je account moet nog worden geverificeerd</h2>\n                        <p>Je hebt een email ontvangen op {authO.Email} waarmee je je account kunt verificeren.</p>\n                        <div style={{display: showSendMailContainer}} className=\"no-email-button-container\">\n                            <p>Geen mail ontvangen?</p>\n                            <button className=\"button-simple\" onClick={noMailRecieved}>Opnieuw versturen</button>\n                        </div>\n                        <div style={{display: showMailSendContainer}} className=\"no-email-button-container\">\n                            <p>We hebben opnieuw een mail gestuurd naar {authO.Email}</p>\n                            <p id=\"still-no-mail-notice\">Nog niets ontvangen? Kijk in je spam of stuur een mailtje naar info@deccos.nl</p>\n                        </div>\n                    </div>\n        } else if(verificationMethode === \"Email\" && route != '1' && user != null){\n            return  <div>\n                        <button onClick={verifiyAccount}>Verifieer je account</button>\n                    </div>\n        } else if(verificationMethode === \"Email\" && route != '1' && user === null){\n            return  <div>\n                        <h2>Je account moet nog worden geverificeerd</h2>\n                        <p>Je hebt een email ontvangen op {authO.Email} waarmee je je account kunt verificeren.</p>\n                        <div style={{display: showSendMailContainer}} className=\"no-email-button-container\">\n                            <p>Geen mail ontvangen?</p>\n                            <button className=\"button-simple\" onClick={noMailRecieved}>Klik hier</button>\n                        </div>\n                        <div style={{display: showMailSendContainer}} className=\"no-email-button-container\">\n                            <p>We hebben opnieuw een mail gestuurd naar {authO.Email}</p>\n                            <p id=\"still-no-mail-notice\">Nog niets ontvangen? Kijk in je spam of stuur een mailtje naar info@deccos.nl</p>\n                        </div>\n                    </div>\n        }\n        else if(verificationMethode === \"Email\" && route === '1' && online === true && user === null){\n            return  <div>\n                        <h2>Je account moet nog worden geverificeerd</h2>\n                        <p>Je hebt een email ontvangen op {authO.Email} waarmee je je account kunt verificeren.</p>\n                        <div style={{display: showSendMailContainer}} className=\"no-email-button-container\">\n                            <p>Geen mail ontvangen?</p>\n                            <button className=\"button-simple\" onClick={noMailRecieved}>Klik hier</button>\n                        </div>\n                        <div style={{display: showMailSendContainer}} className=\"no-email-button-container\">\n                            <p>We hebben opnieuw een mail gestuurd naar {authO.Email}</p>\n                            <p id=\"still-no-mail-notice\">Nog niets ontvangen? Kijk in je spam of stuur een mailtje naar info@deccos.nl</p>\n                        </div>\n                    </div>\n        }\n    }\n\n    const noMailRecieved = () => {\n        verificationEmailEmail()\n        setshowMailSendContainer(\"flex\")\n        setshowSendMailContainer(\"none\") \n    }\n\n    const verificationEmailEmail = () => {\n        console.log(authO.Email)\n        db.collection(\"Email\").doc().set({\n            to: [authO.Email],\n            cc: \"info@Deccos.nl\",\n            message: {\n            subject: `Verificeer je account `,\n            html: `Hallo ${authO.ForName} ${authO.SurName}, </br></br>\n                Je hebt je aangemeld voor ${communityName} <br><br>\n\n                Klik <a href=\"https://deccos.co/${client}/NotApproved/${authO.ID}\">hier</a> om je account te verificeren.<br><br>\n                \n                Vriendelijke groet, </br></br>\n                ${communityName} </br></br>\n                <img src=\"${logo}\" width=\"100px\">`,\n            Gebruikersnaam: `${authO.ForName} ${authO.SurName}`,\n            Emailadres: authO.Email,\n            Type: \"Verification mail\"\n              }     \n          });\n    }\n\n    const verifiyAccount = () => {\n        console.log(route)\n        console.log(headerPhoto)\n        console.log(user)\n        if(route != 1 && user != null && headerPhoto != null){\n            console.log('test user')\n            db.collection(\"Users\")\n            .where(\"ID\", \"==\", route)\n            .get()\n            .then(querySnapshot => {\n                querySnapshot.forEach(doc => {\n\n                    db.collection(\"Users\")\n                    .doc(doc.id)\n                    .update({\n                        Approved: true\n                    })\n                })\n            })\n            .then(() => {\n                db.collection(\"AllActivity\")\n                .doc()\n                .set({\n                    Title: `Welkom ${user.UserName}!`,\n                    Type: \"NewMember\",\n                    Compagny: client,\n                    ButtonText: \"Bekijk profiel\",\n                    Timestamp: timestamp,\n                    ID: id,\n                    Banner: headerPhoto,\n                    Description: 'is lid geworden van de community',\n                    Link: `/${client}/PublicProfile/${user.ID}`,\n                    User: `${user.UserName}`,\n                    UserPhoto: user.Photo,\n                }) \n            })\n            .then(() => {\n                db.collection(\"MemberGraph\")\n                .where(\"Compagny\", \"==\", client)\n                .where('Month', '==', getYearMonth)\n                .get()\n                .then(querySnapshot => {\n\n                    console.log(querySnapshot)\n\n                    if(querySnapshot.empty === false){\n\n                        querySnapshot.forEach(doc => {\n                            console.log('Bestaat')\n\n                            db.collection(\"MemberGraph\")\n                            .doc(doc.id)\n                            .update({\n                                Contributions: firebase.firestore.FieldValue.increment(1)\n                            })\n                            .then(() => {\n                                console.log('link')\n                                history.push(`/${client}/`)\n                                window.location.reload()\n                            })\n                        })\n                    } else if(querySnapshot.empty === true){\n                        console.log(\"bestaat niet\")\n                        db.collection(\"MemberGraph\")\n                        .doc()\n                        .set({\n                            Month: getYearMonth,\n                            Contributions: 1,\n                            Compagny: client,\n                            LastActive: timestamp,\n                            ID: uuid()\n                        })\n                        .then(() => {\n                            console.log('link')\n                            history.push(`/${client}/`)\n                            window.location.reload()\n                        })\n                    }\n                })\n            })\n        }\n    }\n\n    return (\n        <div id='not-approved-container'>\n             <header className=\"top-bar\" style={{backgroundColor: colors.TopBarColor}}>\n                <a href={`${website}`}><img src={logo} className=\"top-bar-logo\" alt=\"logo\" /></a>\n            </header>\n            <div className=\"main\" style={{backgroundColor: colors.BackgroundColor}}>\n                <div className=\"approval-message-container\">\n                    <img src={authO.Photo} alt=\"\"/>\n                    <h2>Hoi {authO.UserName},</h2>\n                    <h1>Welkom bij {communityName}</h1>\n                    {verificationNotice()}\n                    <a href={`${website}`} target=\"_blank\">Terug naar de website</a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default NotApproved\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/BottomBar.jsx",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/StateManagment/Colors.jsx",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Login.js",["1274"],"import { useState } from 'react';\nimport { client } from '../hooks/Client';\nimport { auth, db } from '../firebase/config';\nimport { useHistory } from \"react-router-dom\";\n\nconst Login = () => {\n\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const history = useHistory();\n\n    const emailHandler = (e) => {\n        const email = e.target.value\n        setEmail(email)\n    }\n\n    const passwordHandler = (e) => {\n        const password = e.target.value\n        setPassword(password)\n    }\n\n    const loginHandler = (e) => {\n        e.preventDefault()\n        e.target.innerText = 'Inloggen'\n\n        auth.signInWithEmailAndPassword(email, password)\n        .catch(err => {\n            console.log(err)\n            if(err){\n                alert(err)\n            } else {\n                return\n            }\n        })\n        .then(() => {\n            history.push(`/${client}/AllActivity`)\n        })\n    }\n\n    return (\n        <div className=\"main\">\n            <div className=\"login-container\">\n                <h2>Login</h2>\n                <form id=\"login-form\">\n                    <p>Email</p>\n                    <input onChange={emailHandler} type=\"email\" placeholder=\"Schrijf hier je emailadres\" />\n                    <p>Wachtwoord</p>\n                    <input onChange={passwordHandler} type=\"password\" placeholder=\"Schrijf hier je wachtwoord\" />\n                    <div className=\"button-container button-login\">\n                        <button onClick={loginHandler}>Login</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Register.js",["1275","1276"],"import { useState, useEffect } from 'react';\nimport { auth, db, timestamp } from \"../firebase/config\";\nimport { client } from \"../hooks/Client\";\nimport uuid from 'react-uuid';\nimport firebase from 'firebase'\nimport { useFirestore, useFirestoreAdmins } from '../firebase/useFirestore.js';\nimport { bucket } from '../firebase/config';\nimport spinnerRipple from '../images/spinner-ripple.svg'\nimport dummyPhoto from '../images/Design/dummy-photo.jpeg'\nimport { useHistory } from \"react-router-dom\"\nimport GetYearMonth from '../hooks/GetYearMonth'\n\nconst RegisterUser = () => {\n\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [passwordRepeat, setPasswordRepeat] = useState(\"\")\n    const [forname, setForname] = useState(\"\")\n    const [surname, setSurname] = useState(\"\")\n    const [photo, setPhoto] = useState(dummyPhoto)\n    const [loader, setLoader] = useState(\"\")\n    const [communityNameDB, setCommunityNameDB] = useState(\"\")\n    const [logoDB, setLogoDB] = useState(\"\")\n    const [adminEmail, setAdminEmail] = useState('')\n\n    const id = uuid()\n    const history = useHistory()\n    const getYearMonth = GetYearMonth()\n    \n    const compagny = useFirestore(\"CompagnyMeta\")\n    const admins = useFirestoreAdmins('Admins')\n\n    useEffect(() => {\n        compagny && compagny.forEach(comp => {\n            setCommunityNameDB(comp.CommunityName)\n            setLogoDB(comp.Logo)\n        })\n    }, [compagny])\n\n    useEffect(() => {\n        const adminArray = []\n        admins && admins.forEach(admin => {\n            adminArray.push(admin.Email)\n        })\n        setAdminEmail(adminArray)\n    }, [admins])\n\n    const fornameHandler = (e) => {\n        const forname = e.target.value\n\n        setForname(forname)\n    }\n\n    const surnameHandler = (e) => {\n        const surname = e.target.value\n\n        setSurname(surname)\n    }\n\n    const emailHandler = (e) => {\n        const email = e.target.value\n\n        setEmail(email)\n    }\n\n    const passwordHandler = (e) => {\n        const password = e.target.value\n\n        setPassword(password)\n    }\n\n    const passwordRepeatHandler = (e) => {\n        const passwordRepeat = e.target.value\n\n        setPasswordRepeat(passwordRepeat)\n    }\n\n    const photoHandler = (e) => {\n        setLoader(spinnerRipple)\n\n        const photo = e.target.files[0]\n\n        const storageRef = bucket.ref(\"/ProfilePhotos/\" + photo.name);\n        const uploadTask = storageRef.put(photo)\n\n        uploadTask.then(() => {\n          \n            uploadTask.on('state_changed', snapshot => {\n            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            switch (snapshot.state) {\n            case firebase.storage.TaskState.PAUSED:\n                console.log('Upload is paused');\n                break;\n            case firebase.storage.TaskState.RUNNING:\n                console.log('Upload is running');\n                break;\n            }\n            }, (err) => {\n                alert(err)\n            }, () => {\n            uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n            console.log('File available at', downloadURL);\n\n            setPhoto(downloadURL)\n            setLoader(downloadURL)\n\n                })\n            })\n        })\n    }\n\n    const checkHandler = (e) => {\n        e.preventDefault()\n        e.target.innerText = \"Aangemeld\"\n\n        if(password === passwordRepeat){\n            registerHandler()\n        } else {\n            alert('De paswoorden zijn niet gelijk')\n        }\n    }\n\n    const registerHandler = () => {\n\n        console.log(adminEmail)\n    \n        auth\n        .createUserWithEmailAndPassword(email, password)\n        .then((cred) => {\n            db.collection(\"Users\")\n            .doc(cred.user.uid)\n            .set({\n                UserName: `${forname} ${surname}`,\n                ForName: forname,\n                SurName: surname,\n                Compagny: firebase.firestore.FieldValue.arrayUnion(client),\n                Timestamp: timestamp,\n                Email: email,\n                Photo: photo,\n                Channels: [],\n                ID: id,\n                Approved: false,\n                Deleted: false,\n                Docid: cred.user.uid,\n            })\n        })\n        .then(() => {\n            db.collection('LikeGraph')\n            .doc()\n            .set({\n                Compagny: client,\n                UserName: `${forname} ${surname}`,\n                UserID: id,\n                Contributions: 0,\n                LastActive: timestamp,\n                Month: getYearMonth,\n                ID: uuid()\n            })\n        })\n        .then(() => {\n            compagny && compagny.forEach(comp => {\n                if(comp.VerificationMethode === \"Admin\"){\n                    verificationEmailAdmin(email, forname, surname, communityNameDB, logoDB)\n                    emailToAdminAdmin(forname, surname, communityNameDB)\n                } else if(comp.VerificationMethode === \"Email\"){\n                    verificationEmailEmail(email, forname, surname, communityNameDB, logoDB)\n                    emailToAdminEmail(forname, surname, communityNameDB)\n                }\n            })\n        })\n        .then(() => {\n            history.push(`/${client}/NotApproved/1`)\n        })\n        .catch(err => {\n            if(err){\n                alert(err)\n                return\n            }\n            \n        })\n    }\n\n    const emailToAdminAdmin = (forname, surname, communityName) => {\n        db.collection(\"Email\").doc().set({\n            to: adminEmail,\n            cc: \"info@Deccos.nl\",\n            message: {\n            subject: `Iemand heeft zich aangemald voor ${communityName}`,\n            html: `\n                Iemand heeft zich aangemeld voor jullie community. <br><br>\n\n                Naam: ${forname} ${surname}. <br><br>\n\n                Dit lidmaatschap moet door een beheerder worden geverificeerd.<br><br>\n\n                <a href='https://deccos.co/${client}/Registrations'>Klik hier</a> om de alle openstaande aanvragen te beheren.<br><br>\n                \n                `,\n            Gebruikersnaam: `${forname} ${surname}`,\n            Emailadres: adminEmail,\n            Type: \"Verification mail email\"\n              }     \n          });\n    }\n\n    const verificationEmailAdmin = (email, forname, surname, communityName, logo) => {\n        db.collection(\"Email\").doc().set({\n            to: [email],\n            cc: \"info@Deccos.nl\",\n            message: {\n            subject: `Je account wordt geverifieerd door een beheerder `,\n            html: `Hallo ${forname} ${surname}, </br></br>\n                Om ervoor te zorgen dat onze community een prettige omgeving blijft\n                worden alle aanmeldingen geverifieerd door een beheerder. <br><br>\n\n                Zodra onze beheerder je account heeft bekeken en goedgekeurd ontvang je een mail.<br><br>\n\n                Vanaf dan kun je inloggen met je email en wachtwoord<br><br>\n                \n                Vriendelijke groet, </br></br>\n                ${communityName} </br></br>\n                <img src=\"${logo}\" width=\"100px\">`,\n            Gebruikersnaam: `${forname} ${surname}`,\n            Emailadres: email,\n            Type: \"Verification mail\"\n              }     \n          });\n    }\n\n    const verificationEmailEmail = (email, forname, surname, communityName, logo) => {\n        console.log(email)\n        db.collection(\"Email\").doc().set({\n            to: [email],\n            cc: \"info@Deccos.nl\",\n            message: {\n            subject: `Verificeer je account `,\n            html: `Hallo ${forname} ${surname}, </br></br>\n                Je hebt je aangemeld voor ${communityName} <br><br>\n\n                Klik <a href=\"https://deccos.co/${client}/NotApproved/${id}\">hier</a> om je account te verificeren.<br><br>\n                \n                Vriendelijke groet, </br></br>\n                ${communityName} </br></br>\n                <img src=\"${logo}\" width=\"100px\">`,\n            Gebruikersnaam: `${forname} ${surname}`,\n            Emailadres: email,\n            Type: \"Verification mail\"\n              }     \n          });\n    }\n\n    const emailToAdminEmail = (forname, surname, communityName) => {\n        console.log(adminEmail)\n        db.collection(\"Email\").doc().set({\n            to: adminEmail,\n            cc: \"info@Deccos.nl\",\n            message: {\n            subject: `Iemand heeft zich aangemald voor ${communityName}`,\n            html: `\n                Iemand heeft zich aangemeld voor jullie community. <br><br>\n\n                Naam: ${forname} ${surname}. <br><br>\n\n                <a href='https://deccos.co/${client}/Members'>Klik hier</a> om de alle leden te beheren.<br><br>\n                \n                `,\n            Gebruikersnaam: `${forname} ${surname}`,\n            Emailadres: adminEmail,\n            Type: \"Verification mail admin\"\n              }     \n          });\n    }\n\n    return (\n        <div className=\"main\">\n            <div className=\"login-container\">\n                <h2>Account maken</h2>\n                <form>\n                    <p>Voornaam*</p>\n                    <input onChange={fornameHandler} type=\"text\" placeholder=\"Schrijf hier je voornaam\" />\n                    <p>Achternaam</p>\n                    <input onChange={surnameHandler} type=\"text\" placeholder=\"Schrijf hier je achternaam\" />\n                    <p>Emailadres*</p>\n                    <input onChange={emailHandler} type=\"email\" placeholder=\"Schrijf hier je achternaam\" />\n                    <p>Wachtwoord*</p>\n                    <input onChange={passwordHandler} type=\"password\" placeholder=\"Schrijf hier je wachtwoord\" />\n                    <p>Herhaal je wachtwoord*</p>\n                    <input onChange={passwordRepeatHandler} type=\"password\" placeholder=\"Herhaal hier je wachtwoord\" />\n                    <p>Profielfoto</p>\n                    <input onChange={photoHandler} type=\"file\" />\n                    <div className=\"spinner-container\">\n                        <img src={loader} alt=\"\" />\n                    </div>\n                </form>\n                <div className=\"button-container-register\">\n                    <button onClick={checkHandler}>Aanmelden</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RegisterUser\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Search.js",["1277"],"import {useFirestore} from \"../firebase/useFirestore\"\nimport LeftSideBar from \"./LeftSideBar\"\nimport LeftSideBarFullScreen from \"./LeftSideBarFullScreen\"\nimport RightSideBar from \"./rightSideBar/RightSideBar\"\nimport MenuStatus from \"../hooks/MenuStatus\";\nimport { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Auth } from '../StateManagment/Auth';\n\nconst Search = () => {\n    const [authO] = useContext(Auth)\n    const [input, setInput] = useState('')\n\n    const menuState = MenuStatus()\n    const history = useHistory();\n\n    const searchItems = useFirestore('Search')\n\n    const searchInputHandler = (e) => {\n        const input = e.target.value \n\n        setInput(input)\n    }\n\n    const filter = () => {\n\n        const itemArray = []\n\n        searchItems && searchItems.forEach(item => {\n            if(item.Name.includes(input)){\n                itemArray.push(item)\n            } else if(item.Description){\n                item.Description.forEach(description => {\n                    if(description.Input.includes(input)){\n                        itemArray.push(item)\n                    }\n                })\n            }\n        })\n\n        return itemArray\n    }\n\n    console.log(authO)\n\n    return (\n        <div className=\"main\">\n            <LeftSideBar />\n            <LeftSideBarFullScreen/>\n            <div className=\"card-overview\">\n                <div id='search-bar-container'>\n                    <input type=\"text\" placeholder={`Waar zoek je naar op zoek ${authO.ForName}?`} onChange={searchInputHandler} />\n                </div>\n                <div id=\"search-container\" style={{display: menuState}}>\n                    {filter().map(item => (\n                        <div id='search-item-container'>\n                            <div>\n                                <h3>Text</h3>\n                                <p>{item.Name}</p>\n                            </div>\n                            <div>\n                                <h3>{item.Description && 'Omschrijving'}</h3>\n                                {item.Description && item.Description.map(input => (\n                                <p>{input.Input}</p>\n                            ))}\n                            </div>\n                            <div>\n                                <h3>Type</h3>\n                                <p>{item.Type}</p>\n                            </div>\n                            <a href={item.Link}><button>Bekijk</button></a>\n                        </div>\n                    ))}\n                {/* <InstantSearch indexName=\"Deccos\" searchClient={searchClient}>\n                    <div className=\"right-panel\">\n                        <SearchBox translations={{\n                            placeholder: 'Zoek hier...',\n                        }} />\n                        <Hits hitComponent={Hit} />\n                    </div>\n                </InstantSearch> */}\n                </div>\n            </div>\n            <RightSideBar />\n        </div>\n    )\n}\n\nexport default Search\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/firebase/useFirestore.js",["1278","1279","1280","1281","1282"],"import { db } from \"./config.js\"\nimport { useState, useEffect} from 'react';\nimport { client } from '../hooks/Client';\n\nconst useFirestore = (collection) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(collection)\n        .where(\"Compagny\", \"==\", client)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [collection])  \n\n    return docs\n};\n\nconst useFirestoreID = (collection, id) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(collection)\n        .where(\"Compagny\", \"==\", client)\n        .where(\"ID\", \"==\", id)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [collection, id])  \n\n    return docs\n};\n\nconst useFirestoreTimestamp = (collection) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(collection)\n        .where(\"Compagny\", \"==\", client)\n        .orderBy(\"Timestamp\", \"desc\")\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [collection])  \n\n    return docs\n};\n\nconst useFirestoreUser = (userID) => {\n\n    const [docs, setDocs] = useState(\"\")\n    \n    const docArray = []\n    useEffect(() => {\n        db.collection(\"Users\")\n        .where(\"Compagny\", \"array-contains\", client)\n        .where(\"ID\", \"==\", userID)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        setDocs(docArray)\n\n    }, [userID])  \n\n    return docs\n};\n\nconst useFirestoreUsers = (state) => {\n\n    const [docs, setDocs] = useState(\"\")\n    \n    const docArray = []\n    useEffect(() => {\n        db.collection(\"Users\")\n        .where(\"Compagny\", \"array-contains\", client)\n        .where(\"Deleted\", \"==\", state)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        setDocs(docArray)\n\n    }, [state])  \n\n    return docs\n};\n\nconst useFirestoreUsersApproved = (state) => {\n\n    const [docs, setDocs] = useState(\"\")\n    \n    const docArray = []\n    useEffect(() => {\n        db.collection(\"Users\")\n        .where(\"Compagny\", \"array-contains\", client)\n        .where(\"Deleted\", \"==\", state)\n        .where('Approved', '==', true)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        setDocs(docArray)\n\n    }, [state])  \n\n    return docs\n};\n\nconst useFirestoreMessages = (collection, id  ) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(collection)\n        .where(\"Compagny\", \"==\", client)\n        .where(\"ParentID\", \"==\", id)\n        .orderBy(\"Timestamp\", \"desc\")\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [collection, id])  \n\n    return docs\n};\n\nconst useFirestoreNewMessagesChatGroups = ( id ) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection('Messages')\n        .where(\"Compagny\", \"==\", client)\n        .where(\"Channel\", \"==\", 'Chat')\n        .where(\"Members\", \"array-contains\", id)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [id])  \n\n    return docs\n};\n\nconst useFirestoreMyMessages = (collection, id) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(collection)\n        .where(\"Compagny\", \"==\", client)\n        .where(\"UserID\", \"==\", id)\n        .where(\"Public\", \"==\", true)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [collection, id])  \n\n    return docs\n};\n\nconst useFirestoreChats = (id) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(\"Chats\")\n        .where(\"Compagny\", \"==\", client)\n        .where(\"Room\", \"==\", id)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [])  \n\n    return docs\n};\n\nconst useFirestoreChatsGroups = (collection, auth ) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(collection)\n        .where(\"Compagny\", \"==\", client)\n        .where(\"MemberList\", \"array-contains\", auth)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [collection, auth])  \n\n    return docs\n};\n\nconst useFirestoreGroupsAuth = ( auth ) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection('Subscriptions')\n        .where(\"Compagny\", \"==\", client)\n        .where('Type', '==', 'Group')\n        .where(\"UserID\", \"==\", auth)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [auth])  \n\n    return docs\n};\n\n\nconst useFirestoreNotifications = (collection, id  ) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(collection)\n        .orderBy(\"Timestamp\", \"desc\")\n        .where(\"Compagny\", \"==\", client)\n        .where(\"RecieverID\", \"==\", id)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [collection, id])  \n\n    return docs\n};\n\nconst useFirestoreNewNotifications = (collection, auth, status) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(collection)\n        .where(\"Compagny\", \"==\", client)\n        .where(\"RecieverID\", \"==\", auth)\n        .where(\"Read\", \"==\", status)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [collection, status])  \n\n    return docs\n};\n\nconst useFirestoreChannelItems = (collection, id  ) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(collection)\n        .where(\"Compagny\", \"==\", client)\n        .where(\"ChannelID\", \"==\", id)\n        .orderBy(\"Timestamp\", \"desc\")\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [collection, id])  \n\n    return docs\n};\n\nconst useFirestoreContributions = (collection, type, id ) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(collection)\n        .where(\"Compagny\", \"==\", client)\n        .where(type, \"==\", id)\n        .orderBy(\"Timestamp\", \"desc\")\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [collection, id, type])  \n\n    return docs\n};\n\nconst useFirestoreIntroductions = (collection, id ) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(collection)\n        .where(\"Compagny\", \"==\", client)\n        .where(\"AuthID\", \"==\", id)\n        .orderBy(\"Timestamp\", \"asc\")\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [collection, id ])  \n\n    return docs\n};\n\nconst useFirestoreNotApproved = () => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(\"Users\")\n        .where(\"Compagny\", \"array-contains\", client)\n        .where(\"Approved\", \"==\", false)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [])  \n\n    return docs\n};\n\nconst useFirestoreProfileFields = () => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(\"ProfileFields\")\n        .where(\"Compagny\", \"==\", client)\n        .where(\"Template\", \"==\", true)\n        .orderBy(\"Position\", \"desc\")\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [])  \n\n    return docs\n};\n\nconst useFirestoreProfileFieldsUser = () => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(\"ProfileFields\")\n        .where(\"Compagny\", \"==\", client)\n        .where(\"Template\", \"==\", false)\n        .orderBy(\"Position\", \"desc\")\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [])  \n\n    return docs\n};\n\nconst useFirestoreContributionGraph = () => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(\"ContributionGraph\")\n        .where('Compagny', '==', client)\n        .orderBy(\"LastActive\", \"desc\")\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [])  \n\n    return docs\n};\n\nconst useFirestoreContributionGraphUser = (id) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(\"ContributionGraphUser\")\n        .where('Compagny', '==', client)\n        .where(\"UserID\", \"==\", id)\n        .orderBy(\"LastActive\", \"desc\")\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [id])  \n\n    return docs\n};\n\nconst useFirestoreMessageGraph = () => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(\"MessageGraph\")\n        .where('Compagny', '==', client)\n        .orderBy(\"LastActive\", \"desc\")\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [])  \n\n    return docs\n};\n\nconst useFirestoreLikesGraphUser = (id) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(\"LikeGraph\")\n        .where('Compagny', '==', client)\n        .where(\"UserID\", \"==\", id)\n        .orderBy(\"LastActive\", \"desc\")\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [id])  \n\n    return docs\n};\n\nconst useFirestoreLikesGraph = () => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(\"LikeGraph\")\n        .where('Compagny', '==', client)\n        .orderBy(\"LastActive\", \"desc\")\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [])  \n\n    return docs\n};\n\nconst useFirestoreMemberGraph = () => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(\"MemberGraph\")\n        .where('Compagny', '==', client)\n        .orderBy(\"LastActive\", \"asc\")\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [])  \n\n    return docs\n};\n\nconst useFirestoreAboutMe = (id) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(\"AboutMe\")\n        .where('Compagny', '==', client)\n        .where(\"UserID\", \"==\", id)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [id])  \n\n    return docs\n};\n\nconst useFirestoreActivities = (goal) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(\"Activities\")\n        .where(\"GoalID\", \"==\", goal)\n        .where('Compagny', '==', client)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [goal])  \n\n    return docs\n};\n\nconst useFirestoreChannelName = (name) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(\"Channels\")\n        .where(\"Name\", \"==\", name)\n        .where('Compagny', '==', client)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [name])  \n\n    return docs\n};\n\nconst useFirestoreAdmins = (collection) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(collection)\n        .where('Compagny', '==', client)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [collection])  \n\n    return docs\n};\n\nconst useFirestoreSubscriptions = (id) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection('Subscriptions')\n        .where('Compagny', '==', client)\n        .where('UserID', '==', id)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [id])  \n\n    return docs\n};\n\nconst useFirestoreSubscriptionsChannelGroup = (id) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection('Subscriptions')\n        .where('Compagny', '==', client)\n        .where('SubID', '==', id)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [id])  \n\n    return docs\n};\n\nconst useFirestoreSubscriptionsNotApproved = (collection) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection(collection)\n        .where('Compagny', '==', client)\n        .where('Approved', '==', false)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [collection])  \n\n    return docs\n};\n\nconst useFirestoreTasks = (activity) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection('Tasks')\n        .where('Compagny', '==', client)\n        .where('ActivityID', '==', activity)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [activity])  \n\n    return docs\n};\n\nconst useFirestoreTasksComplete = (activity) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection('Tasks')\n        .where('Compagny', '==', client)\n        .where('ActivityID', '==', activity)\n        .where('Completed', '==', true)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [activity])  \n\n    return docs\n};\n\nconst useFirestoreMyTasks = (id) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection('Tasks')\n        .where('Compagny', '==', client)\n        .where('AppointedID', '==', id)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [id])  \n\n    return docs\n};\n\nconst useFirestoreMyEvents = (id) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection('EventSignups')\n        .where('Compagny', '==', client)\n        .where('UserID', '==', id)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [id])  \n\n    return docs\n};\n\nconst useFirestoreQuestionnaireFields = (id) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection('QuestionnaireFields')\n        .where('Compagny', '==', client)\n        .where('QuestionnaireID', '==', id)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [id])  \n\n    return docs\n};\n\nconst useFirestoreQuestionnaireAnalysis = (id) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection('QuestionnaireAnalysis')\n        .where('Compagny', '==', client)\n        .where('QuestionnaireID', '==', id)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [id])  \n\n    return docs\n};\n\nconst useFirestoreQuestionnairesResponses = (id) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection('QuestionnairesResponses')\n        .where('Compagny', '==', client)\n        .where('QuestionnaireID', '==', id)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [id])  \n\n    return docs\n};\n\nconst useFirestoreMatches = (id) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection('Matches')\n        .where('Compagny', '==', client)\n        .where('Match', 'array-contains', id)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [id])  \n\n    return docs\n};\n\nconst useFirestoreMatchRoadmaps = () => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection('MatchRoadmaps')\n        .where('Compagny', '==', client)\n        .orderBy(\"Position\", \"asc\")\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [])  \n\n    return docs\n};\n\nconst useFirestoreMatchTagsType = (type) => {\n\n    const [docs, setDocs] = useState(\"\")\n\n    useEffect(() => {\n        const unsub = db.collection('MatchTags')\n        .where('Compagny', '==', client)\n        .where('Type', '==', type)\n        .onSnapshot(querySnapshot => {\n            let docArray = []\n            querySnapshot.forEach(doc => {\n                docArray.push({...doc.data(), docid: doc.id})\n            })\n            setDocs(docArray)\n        })\n        \n        return () => unsub();\n\n    }, [type])  \n\n    return docs\n};\n\n\nexport { \n    useFirestore, \n    useFirestoreID, \n    useFirestoreTimestamp, \n    useFirestoreUser, \n    useFirestoreUsers, \n    useFirestoreUsersApproved,\n    useFirestoreMessages,\n    useFirestoreChats,\n    useFirestoreChatsGroups,\n    useFirestoreGroupsAuth,\n    useFirestoreNotifications,\n    useFirestoreChannelItems,\n    useFirestoreContributions,\n    useFirestoreNewNotifications,\n    useFirestoreIntroductions,\n    useFirestoreMyMessages,\n    useFirestoreNewMessagesChatGroups,\n    useFirestoreNotApproved,\n    useFirestoreProfileFields,\n    useFirestoreProfileFieldsUser,\n    useFirestoreContributionGraph,\n    useFirestoreContributionGraphUser,\n    useFirestoreMessageGraph,\n    useFirestoreLikesGraph,\n    useFirestoreLikesGraphUser,\n    useFirestoreMemberGraph,\n    useFirestoreAboutMe,\n    useFirestoreActivities,\n    useFirestoreChannelName,\n    useFirestoreAdmins,\n    useFirestoreSubscriptions,\n    useFirestoreSubscriptionsChannelGroup,\n    useFirestoreSubscriptionsNotApproved,\n    useFirestoreTasks,\n    useFirestoreTasksComplete,\n    useFirestoreMyTasks,\n    useFirestoreMyEvents,\n    useFirestoreQuestionnaireFields,\n    useFirestoreQuestionnairesResponses,\n    useFirestoreQuestionnaireAnalysis,\n    useFirestoreMatches,\n    useFirestoreMatchRoadmaps,\n    useFirestoreMatchTagsType\n}","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Profile.js",["1283","1284","1285","1286"],"import RightSideBar from \"./rightSideBar/RightSideBar\"\nimport LeftSideBarAuthProfile from \"./LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \"./LeftSideBarAuthProfileFullScreen\";\nimport { db, bucket, auth } from \"../firebase/config.js\"\nimport {useFirestore } from \"../firebase/useFirestore\"\nimport firebase from 'firebase'\nimport { useHistory } from \"react-router\";\nimport { client } from '../hooks/Client';\nimport { useState, useContext, useEffect } from 'react';\nimport { Auth } from '../StateManagment/Auth';\nimport MenuStatus from \"../hooks/MenuStatus\";\n\nconst Profile = () => {\n\n    const [ authO ] = useContext(Auth)\n    const [forName, setForName] = useState(authO.ForName)\n    const [surName, setSurName] = useState(authO.SurName)\n    const [userCompagnies, setUserCompagnies] = useState(null)\n    const [userCompagnyArray, setUserCompagnyArray] = useState([])\n\n    const docs = useFirestore(\"CompagnyMeta\")\n    const history = useHistory()\n    const menuState = MenuStatus()\n\n    useEffect(() => {\n      const compagnies = authO.Compagny \n\n      setUserCompagnies(compagnies)\n\n    }, [authO]);\n  \n    const changePhoto = (e) => {\n\n        const newPhoto = e.target.files[0]\n\n        const storageRef = bucket.ref(\"/ProfilePhotos/\" + newPhoto.name);\n        const uploadTask = storageRef.put(newPhoto)\n\n        uploadTask.then(() => {\n          \n            uploadTask.on('state_changed', snapshot => {\n            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            switch (snapshot.state) {\n            case firebase.storage.TaskState.PAUSED:\n                console.log('Upload is paused');\n                break;\n            case firebase.storage.TaskState.RUNNING:\n                console.log('Upload is running');\n                break;\n            }\n            }, (err) => {\n                alert(err)\n            }, () => {\n            uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n            console.log('File available at', downloadURL);\n\n            savePhoto(downloadURL)\n\n                })\n            })\n        })\n    }\n\n    const savePhoto = (photo) => {\n        auth.onAuthStateChanged(User =>{\n            if(User){\n                db.collection(\"Users\")\n                .doc(User.uid)\n                .update({\n                    Photo: photo\n                })\n            }\n        })\n    }\n\n    const logOut = () => {\n        auth.signOut()\n        .then(() => {\n            history.push(`/${client}/Login`)\n        }) \n    }\n\n    const deleteAccount = () => {\n        auth\n        .currentUser\n        .delete()\n        .catch(err => {\n            console.log(err)\n        })\n        .then(() => {\n            db.collection(\"Users\")\n            .doc(auth.id)\n            .delete()\n        })\n        .then(() => {\n           docs && docs.forEach(doc => {\n               db.collection(\"CompagnyMeta\")\n               .doc(doc.id)\n               .update({\n                   Members: firebase.firestore.FieldValue.delete(doc.UserName)\n               })\n           })\n        })\n        .then(() => {\n            window.location.reload()\n        }) \n    }\n\n    const forNameHandler = (e) => {\n        const forName = e.target.value\n\n        setForName(forName)\n    }\n\n    const surNameHandler = (e) => {\n        const surName = e.target.value\n\n        setSurName(surName)\n    }\n\n    const saveUserName = () => {\n        db.collection(\"Users\")\n        .doc(auth.Docid)\n        .update({\n            ForName: forName,\n            SurName: surName,\n            UserName: `${forName} ${surName}`\n        })\n    }\n\n    const linkUserCompagny = (e) => {\n        const compagny = e.target.dataset.compagny \n\n        history.push(`/${compagny}`)\n\n        window.location.reload()\n    }\n\n    return (\n        <div className=\"main\">\n            <LeftSideBarAuthProfile />\n            <LeftSideBarAuthProfileFullScreen/>\n                <div className=\"profile profile-auth-profile\" style={{display: menuState}}>\n                    <div className=\"profile-inner-container\">\n                        <div className=\"card-header\">\n                            <h1>Account instellingen</h1>\n                            <img id=\"profile-header-photo\" src={authO.Photo} alt=\"\" />\n                            <h2>{authO.UserName}</h2>\n                            <p>Verander de instellingen van je profiel</p>\n                        </div>\n                        <div className=\"divider account-status\">\n                            <h4>Uitloggen</h4>\n                            <button id=\"log-out-button\" onClick={logOut}>Uitloggen</button>\n                        </div >\n                        <div className=\"divider\">\n                            <h4>Schermnaam aanpassen</h4>\n                            <h5>Voornaam</h5>\n                            <input className=\"input-classic\" type=\"text\" defaultValue={authO.ForName} onChange={forNameHandler}/>\n                            <h5>Achternaam</h5>\n                            <input className=\"input-classic\" type=\"text\" defaultValue={authO.SurName} onChange={surNameHandler}/>\n                            <div className=\"button-container\">\n                                <button className=\"button-simple\" onClick={saveUserName}>Opslaan</button>\n                            </div>\n                        </div >\n                        <div className=\"divider\">\n                            <h4>Profielfoto aanpassen</h4>\n                            <div className=\"photo-container-profile\">\n                                <img id=\"adjust-photo-profile\" src={authO.Photo} alt=\"\" />\n                            </div>\n                            <input className=\"input-classic\" type=\"file\" onChange={changePhoto} />\n                        </div >\n                        <div className='divider'>\n                            {userCompagnies > 0}{\n                                <>\n                                    <h4>Mijn online omgevingen</h4>\n                                    <div>\n                                        {userCompagnies && userCompagnies.map(compagny => (\n                                            <div>\n                                                <p id='user-compagny' data-compagny={compagny} onClick={linkUserCompagny}>{compagny}</p>\n                                            </div>\n                                        ))}\n                                    </div>\n                                </>\n                            }\n                        </div>\n                        <div className=\"divider account-status\">\n                            <h4>Account verwijderen</h4>\n                            <button id=\"delete-account-button\" onClick={deleteAccount}>Verwijderen</button>\n                        </div >\n                    </div>\n                </div>\n            <RightSideBar />\n        </div>\n    )\n}\n\nexport default Profile\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/NewClient.js",["1287","1288","1289","1290"],"import RightSideBar from \"./rightSideBar/RightSideBar\"\nimport LeftSideBarAuthProfile from \"./LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \"./LeftSideBarAuthProfileFullScreen\";\nimport { useState } from 'react';\nimport { auth, db, timestamp } from \"../firebase/config\";\nimport uuid from 'react-uuid';\nimport { bucket } from '../firebase/config';\nimport firebase from 'firebase'\nimport spinnerRipple from '../images/spinner-ripple.svg'\nimport { useHistory } from \"react-router-dom\";\nimport MenuStatus from \"../hooks/MenuStatus\";\nimport { client } from \"../hooks/Client\";\nimport GetYearMonth from '../hooks/GetYearMonth'\n\nconst NewClient = () => {\n    const [compagnyName, setCompagnyName] = useState(\"\")\n    const [communityName, setCommunityName] = useState(\"\")\n    const [website, setWebsite] = useState(\"\")\n    const [logo, setLogo] = useState(\"\")\n    const [loader, setLoader] = useState(\"\")\n\n    const history = useHistory();\n    const id = uuid()\n    const menuState = MenuStatus()\n    const getYearMonth = GetYearMonth()\n\n    const compagnyNameHandler = (e) => {\n\n        const name = e.target.value \n        setCompagnyName(name)\n\n    }\n\n    const communityNameHandler = (e) => {\n        const name = e.target.value \n        setCommunityName(name)\n\n    }\n\n    const websiteHandler = (e) => {\n        const website = e.target.value \n        setWebsite(website)\n\n    }\n\n\n    const logoHandler = (e) => {\n\n        setLoader(spinnerRipple)\n\n        const logo = e.target.files[0]\n\n        const storageRef = bucket.ref(\"/Logos/\" + logo.name);\n        const uploadTask = storageRef.put(logo)\n\n        uploadTask.then(() => {\n          \n            uploadTask.on('state_changed', snapshot => {\n            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            switch (snapshot.state) {\n            case firebase.storage.TaskState.PAUSED:\n                console.log('Upload is paused');\n                break;\n            case firebase.storage.TaskState.RUNNING:\n                console.log('Upload is running');\n                break;\n            }\n            }, (err) => {\n                alert(err)\n            }, () => {\n            uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n            console.log('File available at', downloadURL);\n\n            setLogo(downloadURL)\n            setLoader(downloadURL)\n\n                })\n            })\n        })\n    }\n\n    const saveNewClient = (e) => {\n        e.preventDefault()\n\n        db.collection(\"CompagnyMeta\")\n        .doc()\n        .set({\n           Compagny: compagnyName,\n           CommunityName: communityName, \n           Logo: logo,\n           ID: id,\n           Groups: true,\n           Channels: true,\n           Welcome: true,\n           Impact: false,\n           ProjectManagement: false,\n           Match: false,\n           VerificationMethode: \"Admin\",\n           Website: website,\n           Rules: [],\n           Timestamp: timestamp,\n           WelcomeHeader: 'https://firebasestorage.googleapis.com/v0/b/deccos-app.appspot.com/o/Hero-III.jpg?alt=media&token=71ffc2d8-b90a-4497-aaf2-2206f619712d',\n           WelcomeText: `Welkom bij ${communityName}`,\n           Categories: [\n               \"-- Selecteer een categorie --\"\n           ]\n        })\n        .then(() => {\n            db.collection(\"Banners\")\n            .doc()\n            .set({\n                Compagny: compagnyName,\n                NewEvent: 'https://firebasestorage.googleapis.com/v0/b/deccos-app.appspot.com/o/DefaultActivityBanners%2Fwall-events.png?alt=media&token=6a539d0e-0c5c-45e3-9899-bbdf1e53fe31',\n                NewGoal: 'https://firebasestorage.googleapis.com/v0/b/deccos-app.appspot.com/o/DefaultActivityBanners%2Fwall-new-goal.png?alt=media&token=2f349b5e-b2c9-4ca2-9588-9cdaa166e8070',\n                NewMember: 'https://firebasestorage.googleapis.com/v0/b/deccos-app.appspot.com/o/DefaultActivityBanners%2Fwall-group-register.png?alt=media&token=51023ce7-0460-4e6f-b8b4-019e74af1b35',\n                NewArticle: 'https://firebasestorage.googleapis.com/v0/b/deccos-app.appspot.com/o/DefaultActivityBanners%2Fwall-new-article.png?alt=media&token=d068573a-fb08-467c-99ab-c790294acd63',\n                NewIntroduction: 'https://firebasestorage.googleapis.com/v0/b/deccos-app.appspot.com/o/DefaultActivityBanners%2Fwall-goal-cutout.png?alt=media&token=822bee4f-6652-4a22-bbec-115595234aac',\n                NewGroup: 'https://firebasestorage.googleapis.com/v0/b/deccos-app.appspot.com/o/DefaultActivityBanners%2FnewGroup.png?alt=media&token=98f836f4-e8bc-40fb-af23-fcd29263b593',\n                NewMessage: 'https://firebasestorage.googleapis.com/v0/b/deccos-app.appspot.com/o/DefaultActivityBanners%2Fwall-new-article.png?alt=media&token=d068573a-fb08-467c-99ab-c790294acd63',\n                NewNews: 'https://firebasestorage.googleapis.com/v0/b/deccos-app.appspot.com/o/DefaultActivityBanners%2Fwall-news.png?alt=media&token=da27acdd-558d-4a9f-819c-d1f12108db56',\n                NewChannelItem: 'https://firebasestorage.googleapis.com/v0/b/deccos-app.appspot.com/o/DefaultActivityBanners%2Fwall-channel.jpg?alt=media&token=e636a884-0b04-4c36-9c54-823e63770d45',\n                NewChannel: 'https://firebasestorage.googleapis.com/v0/b/deccos-app.appspot.com/o/DefaultActivityBanners%2Fwall-channel.jpg?alt=media&token=e636a884-0b04-4c36-9c54-823e63770d45'\n            })\n        })\n        .then(() => {\n            db.collection(\"Channels\")\n            .doc()\n            .set({\n                Compagny: compagnyName,\n                Name: \"Nieuws\",\n                Layout: \"Post\",\n                ID: uuid(),\n                Link: \"News\",\n                Members: []\n            })\n        })\n        .then(() => {\n            db.collection(\"Channels\")\n            .doc()\n            .set({\n                Compagny: compagnyName,\n                Name: \"Kenniscentrum\",\n                Layout: \"Card\",\n                ID: uuid(),\n                Link: \"KnowledgeCentre\",\n                Members: []\n            })\n        })\n        .then(() => {\n            db.collection(\"Channels\")\n            .doc()\n            .set({\n                Compagny: compagnyName,\n                Name: \"Events\",\n                Layout: \"Post\",\n                ID: uuid(),\n                Link: \"Events\",\n                Members: []\n            })\n        })\n        .then(() => {\n            db.collection('MemberGraph')\n            .doc()\n            .set({\n                compagny: compagnyName,\n                ID: uuid(),\n                LastActive: timestamp,\n                Month: getYearMonth,\n                Contributions: 0\n            })\n        })\n        .then(() => {\n            db.collection('Admins')\n            .doc()\n            .set({\n                Compagny: compagnyName,\n                Email: 'info@deccos.nl',\n                Photo: 'https://firebasestorage.googleapis.com/v0/b/deccos-app.appspot.com/o/ProfilePhotos%2Ffoto-gijs350.jpg?alt=media&token=0e8e886f-2384-4f4c-b5de-a14fa7376135',\n                UserID: '6a8bf-08c3-a1ad-d04d-231ebe51dc60',\n                UserName: 'Gijs van Beusekom'\n            })\n        })\n        .then(() => {\n            db.collection('Colors')\n            .doc()\n            .set({\n                Background: '#dee3e8',\n                Topbar: '#FFFFFF',\n                TopBarIcons: '#2F2C41',\n                ID: uuid(),\n                Compagny: compagnyName\n            })\n        })\n        .then(() => {\n            db.collection('Impact')\n            .doc()\n            .set({\n                Questoinnaires: false,\n                Matches: false,\n                Members: false,\n                Goals: false,\n                ID: uuid(),\n                Compagny: compagnyName\n            })\n        })\n        .then(() => {\n            history.push(`/${compagnyName}`) \n        })\n\n    }\n\n    return (\n        <div className=\"main\">\n        <LeftSideBarAuthProfile />\n        <LeftSideBarAuthProfileFullScreen/>\n        <div className=\"profile profile-auth-profile\" style={{display: menuState}}>\n            <div className=\"settings-inner-container\">\n                <div className=\"card-header\">\n                    <h2>Nieuwe klant</h2>\n                    <p>Maak een nieuwe klant aan</p>\n                </div>\n                <form >\n                    <div className=\"divider\">\n                        <p>Bedrijfsnaam</p>\n                        <input onChange={compagnyNameHandler} type=\"text\" placeholder=\"Schrijf hier de bedrijfsnaam\" />\n                    </div>\n                    <div className=\"divider\">\n                        <p>Community naam</p>\n                        <input onChange={communityNameHandler} type=\"text\" placeholder=\"Schrijf hier de communitynaam\" />\n                    </div>\n                    <div className=\"divider\">\n                        <p>Website</p>\n                        <input onChange={websiteHandler} type=\"text\" placeholder=\"Schrijf hier de communitynaam\" />\n                    </div>\n                    <div className=\"divider\">\n                        <p>Logo</p>\n                        <input type=\"file\" onChange={logoHandler} />\n                        <div className=\"spinner-container\">\n                            <img src={loader} alt=\"\" />\n                        </div>\n                    </div>\n                    <div className=\"button-container\">\n                        <button onClick={saveNewClient}>Opslaan</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <RightSideBar />\n    </div>\n    )\n}\n\nexport default NewClient\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/PublicProfile.js",["1291","1292","1293","1294","1295","1296"],"import LeftSideBar from \"./LeftSideBar\";\nimport LeftSideBarFullScreen from \"./LeftSideBarFullScreen\";\nimport RightSideBar from \"./rightSideBar/RightSideBar\"\nimport { useFirestoreUser, useFirestoreIntroductions, useFirestoreAboutMe, useFirestore } from \"./../firebase/useFirestore\";\nimport { db, timestamp } from \"../firebase/config\";\nimport uuid from 'react-uuid';\nimport { client } from \"../hooks/Client\";\nimport { useHistory } from \"react-router-dom\";\nimport { useContext, useState, useEffect } from 'react';\nimport { Auth } from '../StateManagment/Auth';\nimport Location from \"../hooks/Location\"\nimport MenuStatus from \"../hooks/MenuStatus\";\nimport worldIcon from '../images/icons/world-icon.png'\nimport heartIcon from '../images/icons/heart-icon.png'\n\nconst PublicProfile = () => {\n    const [authO] = useContext(Auth)\n    const [numberOfContributions, setNumberOfContributions] = useState('')\n    const [admin, setAdmin] = useState(false)\n    const [impacteer, setImpacteer] = useState(false)\n    const [displayImpact, setDisplayImpact] = useState('')\n\n    const history = useHistory()\n    const route = Location()[3]\n    const id = uuid()\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n    const menuState = MenuStatus()\n\n    const profiles = useFirestoreUser(route)\n    const introductions = useFirestoreIntroductions(\"Introductions\", route)\n    const aboutMes = useFirestoreAboutMe(route)\n    const admins = useFirestore('Admins')\n    const impacteers = useFirestore('Impacteers')\n    const compagny = useFirestore(\"CompagnyMeta\")\n\n    useEffect(() => {\n        compagny && compagny.forEach(comp => {\n            setDisplayImpact(comp.Impact)\n        })\n    },[compagny])\n\n    useEffect(() => {\n        admins && admins.forEach(admin => {\n            if(admin.UserID === authO.ID){\n                setAdmin(true)\n            }\n        })\n    }, [admins])\n\n    useEffect(() => {\n        impacteers && impacteers.forEach(impacteer => {\n            if(impacteer.UserID === authO.ID){\n                setImpacteer(true)\n            }\n        })\n    }, [impacteers])\n\n    let room = \"\"\n\n    function createRoomName(){\n\n        profiles && profiles.forEach(profile => {\n            room = authO.ID < profile.ID ? authO.ID+'_'+profile.ID : profile.ID+'_'+authO.ID\n        })\n    } createRoomName()\n\n    useEffect(() => {\n        if(authO.ID != undefined){\n            const contributions = () => {\n                db.collection('Contributions')\n                .where('Compagny', '==', client)\n                .where('RecieverID', '==', authO.ID)\n                .get()\n                .then(querySnapshot => {\n                    setNumberOfContributions(querySnapshot.docs.length)\n                })\n            }\n            contributions()\n        }\n    }, [profiles])\n\n\n    const findChat = async() => {\n\n        let chats = \"\"\n\n        await db.collection(\"Chats\")\n            .where(\"Compagny\", \"==\", client)\n            .where(\"Room\", \"==\", room)\n            .get()\n            .then(querySnapshot => {\n\n                chats = querySnapshot.docs.length\n\n            })\n\n        return chats\n    }\n    \n    const startChat = async () => {\n\n        if(await findChat() === 0){\n            createChat()\n            console.log(\"create chat\")\n        } else if (await findChat() === 1){\n            console.log(\"link chat\")\n            linkToChat()\n        }\n    }\n\n    const linkToChat = () => {\n        db.collection(\"Chats\")\n            .where(\"Compagny\", \"==\", client)\n            .where(\"Room\", \"==\", room)\n            .get()\n            .then(querySnapshot => {\n                querySnapshot.forEach(doc => {\n\n                    const id = doc.data().ID\n\n                    history.push(`/${client}/ChatRoom/${id}`)\n\n                })\n            })\n    }\n\n    const createChat = () => {\n        db.collection(\"Chats\")\n        .doc()\n        .set({\n            ID: id,\n            Room: room,\n            Members: [\n                route,\n                authO.ID\n            ],\n            MemberList: [\n                route,\n                authO.ID\n            ],\n            Timestamp: timestamp,\n            Compagny: client,\n            Messages: 0\n        })\n        .then(() => {\n            history.push(`/${client}/ChatRoom/${id}`)\n        })\n    }\n\n    const showContributions = (e) => {\n\n        const id = e.target.dataset.id\n        \n        history.push(`/${client}/Contributions/${id}`)\n\n    }\n\n    const showLikes = (e) => {\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/Likes/${id}`)\n    }\n\n    const showImpact = () => {\n        if(displayImpact === true && admin === true && impacteer === true){\n            return 'flex'\n        } else if (displayImpact === true && admin === true && impacteer === false){\n            return 'flex'\n        } else if (displayImpact === true && admin === false && impacteer === false){\n            return 'none'\n        } else if (displayImpact === false && admin === false && impacteer === false){\n            return 'none'\n        } else if (displayImpact === false && admin === true && impacteer === true){\n            return 'none'\n        } else if (displayImpact === false && admin === true && impacteer === false){\n            return 'none'\n        } else if (displayImpact === false && admin === false && impacteer === true){\n            return 'none'\n        }\n    }\n\n    return (\n            <div className=\"main\">\n                 <LeftSideBar />\n                <LeftSideBarFullScreen/>\n                {profiles && profiles.map(profile => (\n                    <div className=\"profile public-profile-container\" key={profile.ID} style={{display: menuState}}>\n                        <div className=\"divider \">\n                            <img className=\"public-profile-photo\" src={profile.Photo} alt=\"\" />  \n                            <h1>{profile.UserName}</h1>\n                            <div className='like-icon-container-profile'>\n                                <div className='like-icon-inner-container' style={{display: showImpact()}}>\n                                    <img src={worldIcon} data-id={profile.ID} onClick={showContributions}/>\n                                    <p className='notification-counter-small'>{numberOfContributions}</p>\n                                </div>\n                                <div className='like-icon-inner-container'>\n                                    <img src={heartIcon} data-id={profile.ID} onClick={showLikes}/>\n                                    <p className='notification-counter-small'>{profile.Likes ? profile.Likes : 0}</p>\n                                </div>\n                            </div>\n                            <div className=\"button-container-public-profile\">\n                                <button onClick={startChat}>Chatten</button>\n                            </div>\n                        </div>\n                        <div id='about-me-container'>\n                            <h2>Over mij</h2>\n                            <div className=\"about-me-inner-container\">\n                                {introductions && introductions.map(introduction => (\n                                    <div className=\"about-me-section\" key={introduction.ID}>\n                                        <h3>Lid sinds</h3>\n                                        <p>{profile.Timestamp.toDate().toLocaleDateString(\"nl-NL\", options)}</p>\n                                        <h3>Introductie</h3>\n                                        <p>{introduction.Body}</p>\n                                        {aboutMes && aboutMes.map(aboutMe => (\n                                            <div key={aboutMe.ID}>\n                                                <h3>{aboutMe.Title}</h3>\n                                                <p>{aboutMe.Value}</p>\n                                            </div>\n                                        ))}\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                ))}\n                <RightSideBar />\n            </div>\n    )\n}\n\nexport default PublicProfile","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Settings.js",["1297","1298","1299"],"import RightSideBar from \"./rightSideBar/RightSideBar\"\nimport LeftSideBarAuthProfile from \"./LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \"./LeftSideBarAuthProfileFullScreen\";\nimport { db, bucket } from \"../firebase/config.js\"\nimport {useFirestore, useFirestoreID } from \"../firebase/useFirestore\"\nimport firebase from 'firebase'\nimport { useState, useEffect, useContext } from \"react\";\nimport MenuStatus from \"../hooks/MenuStatus\";\nimport { Colors } from \"../StateManagment/Colors\";\nimport \"../CSS/toggleSwitch.css\";\n\nconst Settings = () => {\n    const [colors] = useContext(Colors)\n    const [docid, setDocid] = useState('')\n    const [welcome, setWelcome] = useState('')\n    const [impact, setImpact] = useState('')\n    const [projectManagement, setProjectManagement] = useState('')\n    const [channels, setChannels] = useState('')\n    const [groups, setGroups] = useState('')\n    const [matches, setMatches] = useState('')\n\n    const compagny = useFirestore(\"CompagnyMeta\")\n\n    console.log(colors)\n\n    const [communityName, setCommunityName] = useState(\"\")\n    const [website, setWebsite] = useState(\"\")\n    const [backgroundColor, setBackgroundColor] = useState(colors.Background)\n    const [topbarColor, setTopbarColor] = useState(colors.Topbar)\n    const [topbarIconsColor, setTopbarIconsColor] = useState(colors.TopbarIcons)\n\n    const menuState = MenuStatus()\n\n    useEffect(() => {\n        compagny && compagny.forEach(comp => {\n            setDocid(comp.docid)\n            setWelcome(comp.Welcome)\n            setImpact(comp.Impact)\n            setChannels(comp.Channels)\n            setGroups(comp.Groups)\n            setMatches(comp.Matches)\n            setProjectManagement(comp.ProjectManagement)\n        })\n    },[compagny])\n\n    const LogoHandler = (e) => {\n\n        const logo = e.target.files[0]\n\n        const storageRef = bucket.ref(\"/ProfilePhotos/\" + logo.name);\n        const uploadTask = storageRef.put(logo)\n\n        uploadTask.then(() => {\n          \n            uploadTask.on('state_changed', snapshot => {\n            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            switch (snapshot.state) {\n            case firebase.storage.TaskState.PAUSED:\n                console.log('Upload is paused');\n                break;\n            case firebase.storage.TaskState.RUNNING:\n                console.log('Upload is running');\n                break;\n            }\n            }, (err) => {\n                alert(err)\n            }, () => {\n            uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n            console.log('File available at', downloadURL);\n\n            saveLogo(downloadURL)\n\n                })\n            })\n        })\n    }\n\n    const saveLogo = (banner) => {\n        compagny && compagny.forEach(comp => {\n            db.collection(\"CompagnyMeta\")\n            .doc(comp.docid)\n            .update({\n                Logo: banner\n            })\n        })\n    }\n\n    const communityNameHandler = (e) => {\n\n        const communityName = e.target.value\n\n        setCommunityName(communityName)\n\n    }\n\n    const saveName = (e) => {\n\n        const docid = e.target.dataset.id\n        db.collection(\"CompagnyMeta\")\n        .doc(docid)\n        .update({\n            CommunityName: communityName\n        })\n    }\n\n    const websiteHandler = (e) => {\n\n        const website = e.target.value\n\n        setWebsite(website)\n\n    }\n\n    const saveWebsite = (e) => {\n\n        const docid = e.target.dataset.id\n        \n        db.collection(\"CompagnyMeta\")\n        .doc(docid)\n        .update({\n            Website: website\n        })\n    }\n\n    const backgroundColorHandler = (e) => {\n        const color = e.target.value \n\n        console.log(color)\n\n        setBackgroundColor(color)\n    }\n\n    const saveBackgroundColor = (e) => {\n  \n        e.target.innerText = 'Opgeslagen'\n\n        db.collection('Colors')\n        .doc(colors.docid)\n        .update({\n            Background: backgroundColor\n        })\n    }\n\n    const topbarColorHandler = (e) => {\n        const color = e.target.value \n\n        setTopbarColor(color)\n    }\n\n    const saveTopbarColor = (e) => {\n\n        e.target.innerText = 'Opgeslagen'\n\n        db.collection('Colors')\n        .doc(colors.docid)\n        .update({\n            Topbar: topbarColor\n        })\n    }\n\n    const topbarIconsColorHandler = (e) => {\n        const color = e.target.value \n\n        console.log(color)\n\n        setTopbarIconsColor(color)\n    }\n\n    const saveTopbarIconsColor = (e) => {\n\n        e.target.innerText = 'Opgeslagen'\n\n        db.collection('Colors')\n        .doc(colors.docid)\n        .update({\n            TopbarIcons: topbarIconsColor\n        })\n    }\n\n    // Toggle status from database\n\n    const welcomeStatus = () => {\n        if(welcome === true){\n            return 'checked'\n        } else {\n            return ''\n        }\n    }\n\n    const projectManagementStatus = () => {\n        if(projectManagement === true){\n            return 'checked'\n        } else {\n            return ''\n        }\n    }\n\n    const impactStatus = () => {\n        if(impact === true){\n            return 'checked'\n        } else {\n            return ''\n        }\n    }\n\n    const channelsStatus = () => {\n        if(channels === true){\n            return 'checked'\n        } else {\n            return ''\n        }\n    }\n\n    const groupsStatus = () => {\n        if(groups === true){\n            return 'checked'\n        } else {\n            return ''\n        }\n    }\n\n    const matchesStatus = () => {\n        if(matches === true){\n            return 'checked'\n        } else {\n            return ''\n        }\n    }\n\n    // Toogle switch\n\n    const ToggleSwitchWelcome = () => {\n        return (\n          <div className=\"container\">\n            <div className=\"toggle-switch\">\n              <input type=\"checkbox\" className=\"checkbox\" defaultChecked={welcomeStatus()}\n                     name={'welcome'} id={'welcome'} onChange={toggleWelcome} />\n              <label className=\"label\" htmlFor={'welcome'}>\n                <span className=\"inner\"/>\n                <span className=\"switch\"/>\n              </label>\n            </div>\n          </div>\n        );\n      };\n\n      const ToggleSwitchProjectManagement = () => {\n        return (\n          <div className=\"container\">\n            <div className=\"toggle-switch\">\n              <input type=\"checkbox\" className=\"checkbox\" defaultChecked={projectManagementStatus()}\n                     name={'projectManagement'} id={'projectManagement'} onChange={toggleProjectManagement} />\n              <label className=\"label\" htmlFor={'projectManagement'}>\n                <span className=\"inner\"/>\n                <span className=\"switch\"/>\n              </label>\n            </div>\n          </div>\n        );\n      };\n\n      const ToggleSwitchImpact = () => {\n        return (\n          <div className=\"container\">\n            <div className=\"toggle-switch\">\n              <input type=\"checkbox\" className=\"checkbox\" defaultChecked={impactStatus()}\n                     name={'impact'} id={'impact'} onChange={toggleImpact} />\n              <label className=\"label\" htmlFor={'impact'}>\n                <span className=\"inner\"/>\n                <span className=\"switch\"/>\n              </label>\n            </div>\n          </div>\n        );\n      };\n\n      const ToggleSwitchChannels = () => {\n        return (\n          <div className=\"container\">\n            <div className=\"toggle-switch\">\n              <input type=\"checkbox\" className=\"checkbox\" defaultChecked={channelsStatus()}\n                     name={'channels'} id={'channels'} onChange={toggleChannels} />\n              <label className=\"label\" htmlFor={'channels'}>\n                <span className=\"inner\" data-selection='Uit'/>\n                <span className=\"switch\" data-selection='aan'/>\n              </label>\n            </div>\n          </div>\n        );\n      };\n\n      const ToggleSwitchGroups = () => {\n        return (\n          <div className=\"container\">\n            <div className=\"toggle-switch\">\n              <input type=\"checkbox\" className=\"checkbox\" defaultChecked={groupsStatus()}\n                     name={'groups'} id={'groups'} onChange={toggleGroups} />\n              <label className=\"label\" htmlFor={'groups'}>\n                <span className=\"inner\" data-selection='Uit'/>\n                <span className=\"switch\" data-selection='aan'/>\n              </label>\n            </div>\n          </div>\n        );\n      };\n\n      const ToggleSwitchMatches = () => {\n        return (\n          <div className=\"container\">\n            <div className=\"toggle-switch\">\n              <input type=\"checkbox\" className=\"checkbox\" defaultChecked={matchesStatus()}\n                     name={'matches'} id={'matches'} onChange={toggleMatches} />\n              <label className=\"label\" htmlFor={'matches'}>\n                <span className=\"inner\" data-selection='Uit'/>\n                <span className=\"switch\" data-selection='aan'/>\n              </label>\n            </div>\n          </div>\n        );\n      };\n\n      // Save setting to database\n\n    const toggleWelcome = (e) => {\n        const setting = e.target.checked\n\n        db.collection('CompagnyMeta')\n        .doc(docid)\n        .update({\n            Welcome: setting\n        })\n    }\n\n    const toggleProjectManagement = (e) => {\n        const setting = e.target.checked\n\n        db.collection('CompagnyMeta')\n        .doc(docid)\n        .update({\n            ProjectManagement: setting\n        })\n    }\n\n    const toggleImpact = (e) => {\n        const setting = e.target.checked\n\n        db.collection('CompagnyMeta')\n        .doc(docid)\n        .update({\n            Impact: setting\n        })\n    }\n\n    const toggleChannels = (e) => {\n        const setting = e.target.checked\n\n        db.collection('CompagnyMeta')\n        .doc(docid)\n        .update({\n            Channels: setting\n        })\n    }\n\n    const toggleGroups = (e) => {\n        const setting = e.target.checked\n\n        db.collection('CompagnyMeta')\n        .doc(docid)\n        .update({\n            Groups: setting\n        })\n    }\n\n    const toggleMatches = (e) => {\n        const setting = e.target.checked\n\n        db.collection('CompagnyMeta')\n        .doc(docid)\n        .update({\n            Matches: setting\n        })\n    }\n\n    console.log(topbarIconsColor)\n\n    return (\n        <div className=\"main\" style={{backgroundColor:backgroundColor}}>\n            <LeftSideBarAuthProfile />\n            <LeftSideBarAuthProfileFullScreen/>\n            <div className=\"profile profile-auth-profile\" style={{display: menuState}}>\n                {compagny && compagny.map(comp => (\n                <div className=\"settings-inner-container\" key={comp.ID}>\n                    <div className=\"card-header\">\n                        <h1>Algemeen</h1>\n                        <p>Verander de algemene instellingen van {comp.CommunityName}</p>\n                    </div>\n                    <div className=\"divider\">\n                        <h4>Community naam aanpassen</h4>\n                        <input className=\"input-classic\" type=\"text\" defaultValue={comp.CommunityName} onChange={communityNameHandler} />\n                        <div className=\"button-container button-container-top\">\n                            <button className=\"button-simple\" data-id={comp.docid} onClick={saveName}>Opslaan</button>\n                        </div>\n                    </div >\n                    <div className=\"divider logo-container\">\n                        <h4>Logo aanpassen</h4>\n                        <img src={comp.Logo} alt=\"\" />\n                        <input className=\"input-classic\" type=\"file\" onChange={LogoHandler} />\n                    </div >\n                    <div className=\"divider\">\n                        <h4>Website aanpassen</h4>\n                        <input className=\"input-classic\" type=\"text\" defaultValue={comp.Website} onChange={websiteHandler} />\n                        <div className=\"button-container button-container-top\">\n                            <button className=\"button-simple\" data-id={comp.docid} onClick={saveWebsite}>Opslaan</button>\n                        </div>\n                    </div >\n                    <div className=\"divider\">\n                        <h4>Kleuren aanpassen</h4>\n                        <div className='client-styles-container'>\n                            <div className='color-container'>\n                                <h5>Achtergrond</h5>\n                                <input className=\"input-color\" type=\"color\" defaultValue={backgroundColor} onChange={backgroundColorHandler} />\n                                <div className=\"button-container-colors\">\n                                    <button className=\"button-simple\" onClick={saveBackgroundColor}>Opslaan</button>\n                                </div>\n                            </div>\n                            <div className='color-container'>\n                                <h5>Topbar</h5>\n                                <input className=\"input-color\" type=\"color\" defaultValue={topbarColor} onChange={topbarColorHandler} />\n                                <div className=\"button-container-colors\">\n                                    <button className=\"button-simple\" onClick={saveTopbarColor}>Opslaan</button>\n                                </div>\n                            </div>\n                            <div className='color-container'>\n                                <h5>Topbar icons</h5>\n                                <input className=\"input-color\" type=\"color\" defaultValue={topbarIconsColor} onChange={topbarIconsColorHandler} />\n                                <div className=\"button-container-colors\">\n                                    <button className=\"button-simple\" onClick={saveTopbarIconsColor}>Opslaan</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='divider'>\n                        <h4>Functionaliteiten</h4>\n                        <div className='functionality-container'>\n                            <p>Welkom<sup>community</sup></p>\n                            <ToggleSwitchWelcome/>\n                        </div>\n                        <div className='functionality-container'>\n                            <p>Kanalen<sup>community</sup></p>\n                            <ToggleSwitchChannels/>\n                        </div>\n                        <div className='functionality-container'>\n                            <p>Groepen<sup>community</sup></p>\n                            <ToggleSwitchGroups/>\n                        </div>\n                        <div className='functionality-container'>\n                            <p>Projectbeheer<sup>beta</sup></p>\n                            <ToggleSwitchProjectManagement/>\n                        </div>\n                        <div className='functionality-container'>\n                            <p>Matchen<sup>beta</sup></p>\n                            <ToggleSwitchMatches/>\n                        </div>\n                        <div className='functionality-container'>\n                            <p>Impact<sup>beta</sup></p>\n                            <ToggleSwitchImpact/>\n                        </div>\n                    </div>\n                </div>\n                ))}\n            </div>\n            <RightSideBar />\n        </div>\n    )\n}\n\nexport default Settings\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Members.js",["1300","1301"],"import LeftSideBarAuthProfile from \"./LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \"./LeftSideBarAuthProfileFullScreen\";\nimport RightSideBar from \"./rightSideBar/RightSideBar\"\nimport { useFirestoreUsersApproved, useFirestore } from \"./../firebase/useFirestore\";\nimport { useHistory } from \"react-router-dom\";\nimport { client } from '../hooks/Client';\nimport { db, auth } from \"../firebase/config\";\nimport { useState, useContext, useEffect } from \"react\";\nimport MenuStatus from \"../hooks/MenuStatus\";\nimport { Auth } from '../StateManagment/Auth';\nimport deleteIcon from '../images/icons/delete-icon.png'\n\nconst Members = () => {\n    const [authO] = useContext(Auth)\n    const [showDeleteButton, setShowDeleteButton] = useState(\"none\")\n    const [memberCount, setMemberCount] = useState('')\n    const [communityName, setCommunityName] = useState('')\n\n    const docs = useFirestoreUsersApproved(false, true)\n    const compagnies = useFirestore(\"CompagnyMeta\")\n    const admins = useFirestore('Admins')\n\n    const history = useHistory()\n    const menuState = MenuStatus()\n    \n    const updateRoute = (e) => {\n\n        const memberID = e.target.id\n\n        history.push(`/${client}/PublicProfile/${memberID}`)\n    }\n\n    useEffect(() => {\n        compagnies && compagnies.forEach(compagny => {\n            setCommunityName(compagny.CommunityName)\n        })\n \n    }, [compagnies])\n\n    useEffect(() => {\n        const docArray = []\n        docs && docs.forEach(doc => {\n            docArray.push(doc)\n        })\n        setMemberCount(docArray.length)\n    }, [docs])\n\n    useEffect(() => {\n        const showDeleteButtonForAdmin = () => {\n            admins && admins.forEach(admin => {\n                if(admin.UserID === authO.ID){\n                    setShowDeleteButton(\"block\")\n                }\n            })\n        }\n        showDeleteButtonForAdmin()\n    }, [admins])\n\n    const deleteUser = (e) => {\n\n        const id = e.target.dataset.id\n\n        db.collection(\"Users\")\n        .doc(id)\n        .update({\n            Deleted: true\n        })\n    }\n\n    return (\n            <div className=\"main\">\n                <LeftSideBarAuthProfile />\n                <LeftSideBarAuthProfileFullScreen/>\n                <div className=\"profile profile-auth-profile\" style={{display: menuState}}>\n                    <div className=\"card-header\">\n                        <h1>Leden</h1>\n                        <p>Bekijk alle {memberCount} leden van {communityName}</p>\n                    </div>\n                    {docs && docs.map(doc => (\n                    <div id=\"members-container\" key={doc.ID}>\n                        <img src={doc.Photo} alt=\"\" id={doc.ID} onClick={updateRoute} />\n                        <h3 id={doc.ID} onClick={updateRoute}>{doc.UserName}</h3>\n                        <img src={deleteIcon} alt=\"\" style={{display: showDeleteButton}} className=\"userrole-users-delete-button\" data-id={doc.docid} onClick={deleteUser} />\n                    </div>\n                      ))}\n                </div>\n                <RightSideBar />\n            </div>\n    )\n}\n\nexport default Members","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Analytics.js",["1302","1303","1304","1305","1306","1307"],"import LeftSideBarAuthProfile from \"./LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \"./LeftSideBarAuthProfileFullScreen\";\nimport RightSideBar from \"./rightSideBar/RightSideBar\"\nimport MenuStatus from \"../hooks/MenuStatus\";\nimport { Line } from 'react-chartjs-2'\nimport { useFirestoreMemberGraph, useFirestoreLikesGraph, useFirestoreContributionGraph, useFirestoreMessageGraph } from '../firebase/useFirestore'\nimport { useState, useEffect } from 'react'\n\nconst Analytics = () => {\n    \n    // State\n    const [labelMembers, setLabelMembers] = useState('')\n    const [dataMembers, setDataMembers] = useState('')\n    const [labelLikes, setLabelLikes] = useState('')\n    const [dataLikes, setDataLikes] = useState('')\n    const [labelGoalLikes, setLabelGoalLikes] = useState('')\n    const [dataGoalLikes, setDataGoalLikes] = useState('')\n    const [labelMessages, setLabelMessages] = useState('')\n    const [dataMessages, setDataMessages] = useState('')\n\n    // Settings\n    const menuState = MenuStatus()\n\n    // Database query's\n    const members = useFirestoreMemberGraph()\n    const likes = useFirestoreLikesGraph()\n    const goalLikes = useFirestoreContributionGraph()\n    const messages = useFirestoreMessageGraph()\n\n    // Leden\n    useEffect(() => {\n\n        const monthArray = []\n        const countArray = []\n\n        members && members.forEach(member => {\n            const month = member.Month \n            const count = member.Contributions\n\n            monthArray.push(month)\n            countArray.push(count)\n    \n        })\n\n        setLabelMembers(monthArray)\n        setDataMembers(countArray)\n    }, [members])\n\n    // Messages\n    useEffect(() => {\n\n        const monthArray = []\n        const countArray = []\n\n        messages && messages.forEach(message => {\n            const month = message.Month \n            const count = message.Contributions\n\n            monthArray.push(month)\n            countArray.push(count)\n    \n        })\n\n        setLabelMessages(monthArray)\n        setDataMessages(countArray)\n    }, [likes])\n\n    // GoalLikes\n    // useEffect(() => {\n\n    //     const monthArray = []\n    //     const countArray = []\n\n    //     goalLikes && goalLikes.forEach(goalLike => {\n    //         const month = goalLike.Month \n    //         const count = goalLike.Contributions\n\n    //         monthArray.push(month)\n    //         countArray.push(count)\n    \n    //     })\n\n    //     setLabelGoalLikes(monthArray)\n    //     setDataGoalLikes(countArray)\n    // }, [likes])\n\n    // Likes\n    useEffect(() => {\n\n        const monthArray = []\n        const countArray = []\n\n        likes && likes.forEach(like => {\n            const month = like.Month \n            const count = like.Contributions\n\n            monthArray.push(month)\n            countArray.push(count)\n    \n        })\n\n        setLabelLikes(monthArray)\n        setDataLikes(countArray)\n    }, [likes])\n\n    return (\n            <div className=\"main\">\n                <LeftSideBarAuthProfile />\n                <LeftSideBarAuthProfileFullScreen/>\n                <div className=\"profile profile-auth-profile\" style={{display: menuState}}>\n                    <div className=\"settings-inner-container\">\n                        <div className=\"divider card-header\">\n                            <h1>Analytics</h1>\n                            <p>Analyseer de ontwikkeling van je community</p>\n                        </div>\n                        <div className='divider'>\n                            <h2>Leden</h2>\n                            <p>Analyseer de trend van de groei van het aantal leden van je community</p>\n                                <div>\n                                <Line data={{\n                                        labels: labelMembers,\n                                        datasets: [\n                                        {\n                                            label: 'Aantal leden',\n                                            data: dataMembers,\n                                            fill: false,\n                                            backgroundColor: 'green',\n                                            borderColor: 'green',\n                                        },\n                                        ],\n                                }} \n                                options={{\n                                    scales: {\n                                        yAxes: [\n                                        {\n                                            ticks: {\n                                            beginAtZero: true,\n                                            },\n                                        },\n                                        ],\n                                    },\n                                }} />\n                            </div>\n                        </div>\n                        <div className='divider'>\n                            <h2>Berichten</h2>\n                            <p>Analyseer de trend van de groei van het aantal berichten van je community</p>\n                            <div>\n                                <Line data={{\n                                        labels: labelMessages,\n                                        datasets: [\n                                        {\n                                            label: 'Aantal leden',\n                                            data: dataMessages,\n                                            fill: false,\n                                            backgroundColor: 'green',\n                                            borderColor: 'green',\n                                        },\n                                        ],\n                                }} \n                                options={{\n                                    scales: {\n                                        yAxes: [\n                                        {\n                                            ticks: {\n                                            beginAtZero: true,\n                                            },\n                                        },\n                                        ],\n                                    },\n                                }} />\n                            </div>\n                        </div>\n                        {/* <div className='divider'>\n                            <h2>Bijdragen aan doelen</h2>\n                            <p>Analyseer de trend van de groei van het aantal bijdragen aan de doelen van je community</p>\n                            <div>\n                                <Line data={{\n                                        labels: labelGoalLikes,\n                                        datasets: [\n                                        {\n                                            label: 'Aantal bijdragen aan doelen',\n                                            data: dataGoalLikes,\n                                            fill: false,\n                                            backgroundColor: 'green',\n                                            borderColor: 'green',\n                                        },\n                                        ],\n                                }} \n                                options={{\n                                    scales: {\n                                        yAxes: [\n                                        {\n                                            ticks: {\n                                            beginAtZero: true,\n                                            },\n                                        },\n                                        ],\n                                    },\n                                }} />\n                            </div>\n                        </div> */}\n                        <div className='divider'>\n                            <h2>Likes</h2>\n                            <p>Analyseer de trend van de groei van het aantal likes van je community</p>\n                            <div>\n                                <Line data={{\n                                        labels: labelLikes,\n                                        datasets: [\n                                        {\n                                            label: 'Aantal likes',\n                                            data: dataLikes,\n                                            fill: false,\n                                            backgroundColor: 'green',\n                                            borderColor: 'green',\n                                        },\n                                        ],\n                                }} \n                                options={{\n                                    scales: {\n                                        yAxes: [\n                                        {\n                                            ticks: {\n                                            beginAtZero: true,\n                                            },\n                                        },\n                                        ],\n                                    },\n                                }} />\n                            </div>\n                        </div>\n                        \n                    </div>  \n                </div>\n                <RightSideBar />\n            </div>\n    )\n}\n\nexport default Analytics","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Notifications.js",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Measures.js",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Contributions.js",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/topbar/Iconbar.js",["1308","1309","1310"],"\nimport {ReactComponent as NotificationIcon} from '../../images/icons/notifications-icon.svg'\nimport {ReactComponent as ChatIcon} from '../../images/icons/chat-icon.svg'\nimport {ReactComponent as SearchIcon}  from '../../images/icons/search-icon.svg'\nimport { client } from '../../hooks/Client';\nimport { Link } from \"react-router-dom\";\nimport { useFirestoreNotifications, useFirestoreNewMessagesChatGroups } from '../../firebase/useFirestore';\nimport { db } from '../../firebase/config';\nimport { useHistory } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport { Auth } from '../../StateManagment/Auth';\nimport { MobileMenu } from '../../StateManagment/MobileMenu';\nimport Colors from \"../../hooks/Colors\";\n\nconst Iconbar = () => {\n    const [menu, setMenu] = useContext(MobileMenu)\n    const [authO] = useContext(Auth)\n\n    const colors = Colors()\n    let ID = \"\"\n\n    console.log(colors)\n\n    const changeMenuStatus = () => {\n        setMenu(\"none\")\n    }\n\n    if(typeof(authO) != \"string\" || authO.ID != undefined){\n        ID = authO.ID\n    }\n\n    const newMessages = useFirestoreNewMessagesChatGroups(ID)\n    const newNotifications = useFirestoreNotifications(\"Notifications\", ID)\n    const history = useHistory()\n\n    const notificationsArray = []\n\n    newNotifications && newNotifications.forEach(notification => {\n\n        if(notification.Read === false){\n            notificationsArray.push(notification)\n        }\n\n    })\n    \n    let notificationStatus = \"\"\n\n    if(notificationsArray.length === 0){\n        notificationStatus = \"notification-false\"\n    } else {\n        notificationStatus = \"notification-true\"\n    }\n\n    const newMessageArray = []\n\n    newMessages && newMessages.forEach(message => {\n\n        if(!message.Read.includes(ID)){\n            newMessageArray.push(message)\n        } \n    })\n    \n    let messageStatus = \"\"\n\n    if(newMessageArray.length === 0){\n        messageStatus = \"notification-false\"\n    } else {\n        messageStatus = \"notification-true\"\n    }\n\n    const showNotifications = () => {\n\n        if(newNotifications.length != 0){\n            newNotifications.forEach(notification => {\n\n                db.collection(\"Notifications\")\n                .doc(notification.docid)\n                .update({\n                    Read: true\n                })\n                .then(() => {\n                    history.push(`/${client}/Notifications/${notification.RecieverID}`) \n                    setMenu(\"none\")\n                })\n            })\n        } else if (newNotifications.length === 0) {\n            history.push(`/${client}/Notifications/${authO.ID}`) \n            setMenu(\"none\")\n        }  \n    }\n\n    const showMessages = () => {\n        history.push(`/${client}/ChatsGroups/${authO.ID}`) \n        setMenu(\"none\")\n    }\n\n    return (\n        <div className=\"icon-bar\">\n            <div className=\"icon-container\">\n                <p id={notificationStatus} className=\"notification-counter\" onClick={showNotifications} >{notificationsArray.length}</p>\n                <NotificationIcon \n                style={\n                    {\n                        width: '19px',\n                        height: '19px',\n                        fill: colors.TopBarIconsColor\n                    }\n                }  \n                onClick={showNotifications}/>\n            </div>\n            <div className=\"icon-container\">\n                <p id={messageStatus} className=\"notification-counter\" onClick={showMessages}>{newMessageArray.length}</p>\n                <ChatIcon \n                style={\n                    {\n                        width: '19px',\n                        height: '19px',\n                        margin: '10px',\n                        fill: colors.TopBarIconsColor\n                    }\n                }  \n                onClick={showMessages}/>\n            </div>\n            <Link to={`/${client}/Search`} style={{fill: colors.IconbarColor}} onClick={changeMenuStatus}>\n                <SearchIcon \n                style={\n                    {\n                        width: '19px',\n                        height: '19px',\n                        fill: colors.TopBarIconsColor,\n                        marginBottom: '-7px'\n                    }\n                }  />\n            </Link>\n        </div>\n    )\n}\n\nexport default Iconbar\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/topbar/ProfilePhoto.js",["1311"],"import { Link } from \"react-router-dom\";\nimport { client } from '../../hooks/Client';\nimport { useContext } from 'react';\nimport { Auth } from '../../StateManagment/Auth';\nimport { MobileMenu } from '../../StateManagment/MobileMenu';\n\n\nconst ProfilePhoto = () => {\n    const [authO] = useContext(Auth)\n    const [menu, setMenu] = useContext(MobileMenu)\n\n    const changeMenuStatus = () => {\n        setMenu(\"none\")\n    }\n\n    return (\n        <div className=\"profile-photo\">\n            <Link onClick={changeMenuStatus} to={`/${client}/Profile`}><img src={authO.Photo} alt=\"\" /></Link>\n        </div>\n    )\n}\n\nexport default ProfilePhoto\n\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/allActivity/AllActivity.js",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/MyIntroduction.jsx",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/LeftSideBarFullScreen.jsx",["1312","1313","1314","1315"],"import '../CSS/leftSideBar.css';\nimport { Link } from \"react-router-dom\";\nimport { client } from '../hooks/Client';\nimport { useFirestore } from '../firebase/useFirestore';\nimport { MobileMenu } from '../StateManagment/MobileMenu';\nimport { motion } from \"framer-motion\"\nimport { useState , useEffect, useContext} from 'react';\nimport { Auth } from '../StateManagment/Auth';\n\nconst LeftSideBarFullScreen = () => {\n    const [menu, setMenu] = useContext(MobileMenu)\n    const [authO] = useContext(Auth)\n\n    const [impacteer, setImpacteer] = useState('none')\n    const [projectManager, setprojectManager] = useState('none')\n    const [displayWelcome, setDisplayWelcome] = useState('')\n    const [displayImpact, setDisplayImpact] = useState('')\n    const [displayChannels, setDisplayChannels] = useState('')\n    const [displayGroups, setDisplayGroups] = useState('')\n    const [displayProjectManagement, setDisplayProjectManagement] = useState('')\n    const [displayMatches, setDisplayMatches] = useState('')\n\n    const groups = useFirestore(\"Groups\")\n    const channels = useFirestore(\"Channels\")\n    const impacteers = useFirestore('Impacteers')\n    const admins = useFirestore('Admins')\n    const compagny = useFirestore(\"CompagnyMeta\")\n    const projectManagers = useFirestore('ProjectManagers')\n\n    useEffect(() => {\n        compagny && compagny.forEach(comp => {\n            setDisplayWelcome(comp.Welcome)\n            setDisplayImpact(comp.Impact)\n            setDisplayChannels(comp.Channels)\n            setDisplayGroups(comp.Groups)\n            setDisplayProjectManagement(comp.ProjectManagement)\n            setDisplayMatches(comp.Matches)\n        })\n    },[compagny])\n\n    useEffect(() => {\n        projectManagers && projectManagers.forEach(manager => {\n            if(manager.UserID === authO.ID){\n                setprojectManager('block')\n            }\n        })\n    }, [impacteers])\n\n    useEffect(() => {\n        impacteers && impacteers.forEach(impacteer => {\n            if(impacteer.UserID === authO.ID){\n                setImpacteer('block')\n            }\n        })\n    }, [impacteers])\n\n    useEffect(() => {\n        admins && admins.forEach(admin => {\n            if(admin.UserID === authO.ID){\n                setImpacteer('block')\n            }\n        })\n    }, [admins])\n\n    const changeMenuStatus = () => {\n        setMenu(\"none\")\n    }\n\n    const showProjectManagement = () => {\n        if(displayProjectManagement === true  && projectManager === 'block'){\n            return 'block'\n        } else if (displayProjectManagement === false  && projectManager=== 'block') {\n            return 'none'\n        } else if (displayProjectManagement === false  && projectManager === 'none') {\n            return 'none'\n        }\n    }\n\n    const showImpact = () => {\n        if(displayImpact === true  && impacteer === 'block'){\n            return 'block'\n        } else if (displayImpact === false  && impacteer === 'block') {\n            return 'none'\n        } else if (displayImpact === false  && impacteer === 'none') {\n            return 'none'\n        }\n    }\n\n    const showWelcome = () => {\n        if(displayWelcome === true){\n            return 'block'\n        } else if (displayWelcome === false ) {\n            return 'none'\n        }\n    }\n\n    const showGroups = () => {\n        if(displayGroups === true){\n            return 'block'\n        } else if (displayGroups === false ) {\n            return 'none'\n        }\n    }\n\n    const showChannels = () => {\n        if(displayChannels === true){\n            return 'block'\n        } else if (displayChannels === false ) {\n            return 'none'\n        }\n    }\n\n    const showMatches = () => {\n        if(displayMatches === true){\n            return 'block'\n        } else if (displayMatches === false ) {\n            return 'none'\n        }\n    }\n\n    return (\n        <div \n        className=\"left-sidebar-container-mobile\" \n        style={{display: menu}}>\n            <div className=\"left-side-bar-full-screen\">\n                <div className=\"channel-div\" style={{display: showWelcome()}}>\n                    <h3>Welkom</h3>\n                    <div className=\"channel-inner-div\">\n                        <Link to={`/${client}/Start`} onClick={changeMenuStatus} >Start hier</Link>\n                        <Link to={`/${client}/Introductions`} onClick={changeMenuStatus} >Stel je voor</Link>\n                        <Link to={`/${client}/AllActivity`} onClick={changeMenuStatus} >Alle activiteit</Link>\n                    </div>\n                </div>\n                <div className=\"channel-div\" style={{display: showChannels()}}>\n                    <div className=\"nav-title-container\">\n                        <h3>Kanalen</h3>\n                    </div>\n                    {channels && channels.map(channel => (\n                        <div className=\"channel-inner-div\"  key={channel.ID}>\n                            <Link to={`/${client}/${channel.Link}/${channel.ID}`} onClick={changeMenuStatus}>{channel.Name}</Link>\n                        </div>\n                    ))}\n                </div>\n                <div className=\"channel-div\" style={{display: showGroups()}}>\n                    <div className=\"nav-title-container\">\n                        <h3>Groepen</h3>\n                    </div>\n                    {groups && groups.map(group => (\n                        <div className=\"channel-inner-div\" key={group.ID}>\n                            <Link to={`/${client}/GroupLanding/${group.ID}`} onClick={changeMenuStatus}>{group.Room}</Link>\n                        </div>\n                    ))}\n                </div>\n                <div className=\"channel-div\" style={{display: showProjectManagement()}}>\n                    <div className=\"nav-title-container\">\n                        <h3>Projectbeheer</h3>\n                    </div>\n                    <div className=\"channel-inner-div\">\n                        <Link to={`/${client}/Goals`} onClick={changeMenuStatus}>Doelen</Link>\n                    </div>\n                    <div className=\"channel-inner-div\">\n                        <Link to={`/${client}/Activities`} onClick={changeMenuStatus}>Activiteiten</Link>\n                    </div>\n                    <div className=\"channel-inner-div\">\n                        <Link to={`/${client}/Tasks/${authO.ID}`} onClick={changeMenuStatus}>Taken</Link>\n                    </div>\n                </div>\n                <div className=\"channel-div\" style={{display: showMatches()}}>\n                    <div className=\"nav-title-container\">\n                        <h3>Matching</h3>\n                    </div>\n                    <div className=\"channel-inner-div\">\n                        <Link activeClassName='active' to={`/${client}/MatchItems`} onClick={changeMenuStatus}>Match items</Link>\n                    </div>\n                    <div className=\"channel-inner-div\">\n                        <Link activeClassName='active' to={`/${client}/Matches`} onClick={changeMenuStatus}>Matches</Link>\n                    </div>\n                </div>\n                <div className=\"channel-div\" style={{display: showImpact()}}>\n                    <div className=\"nav-title-container\">\n                        <h3>Impact</h3>\n                    </div>\n                    <div className=\"channel-inner-div\">\n                        <Link activeClassName='active' to={`/${client}/ImpactProgress`} onClick={changeMenuStatus}>Dashboard</Link>\n                    </div>\n                    {/* <div className=\"channel-inner-div\">\n                        <Link activeClassName='active' to={`/${client}/Activities`}>Mijlpalen</Link>\n                    </div> */}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LeftSideBarFullScreen\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/MyMessages.jsx",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/UserRoles.jsx",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/MyGroups.jsx",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/MyContributions.jsx",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ProfileSettings.jsx",["1316","1317","1318","1319"],"import LeftSideBarAuthProfile from \"./LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \"./LeftSideBarAuthProfileFullScreen\";\nimport RightSideBar from \"./rightSideBar/RightSideBar\"\nimport MenuStatus from \"../hooks/MenuStatus\"\nimport plusIcon from '../images/icons/plus-icon.png'\nimport deleteIcon from '../images/icons/delete-icon.png'\nimport RegistrationField from '../images/Design/RegistrationFields/textfield.png'\nimport RegistrationArea from '../images/Design/RegistrationFields/textarea.png'\nimport RegistrationRadio from '../images/Design/RegistrationFields/radio.png'\nimport RegistrationDropdown from '../images/Design/RegistrationFields/dropdown.png'\nimport { useFirestoreAboutMe, useFirestoreProfileFields } from \"../firebase/useFirestore\";\nimport { db, timestamp } from \"../firebase/config\";\nimport uuid from 'react-uuid';\nimport { client } from \"../hooks/Client\";\nimport { useState, useEffect } from \"react\";\n\nconst ProfileSettings = () => {\n    const [title, setTitle] = useState(\"\")\n    const [position, setPosition] = useState(0)\n    const [type, setType] = useState('')\n    const [html, setHTML] = useState('')\n    const [classType, setClassType] = useState('')\n\n    const profileFields = useFirestoreProfileFields()\n    const menuState = MenuStatus()\n    const id = uuid()\n\n    // Determine position of profilefields\n\n    useEffect(() => {\n        const positionArry = []\n\n        profileFields && profileFields.forEach(field => {\n\n            positionArry.push(field.Position)\n\n            setPosition(positionArry.length + 1)\n                \n        })\n\n    }, [profileFields])\n\n    const deleteField = (e) => {\n\n        const id = e.target.dataset.id\n        const title = e.target.dataset.title\n\n        db.collection(\"ProfileFields\")\n        .doc(id)\n        .delete()\n        .then(() => {\n            db.collection(\"AboutMe\")\n            .where(\"Title\", \"==\", title)\n            .get()\n            .then(querySnapshot => {\n                querySnapshot.forEach(doc => {\n\n                    db.collection(\"AboutMe\")\n                    .doc(doc.id)\n                    .delete()\n                })\n            })\n        })\n    }\n\n    const addField = (e) => {\n\n        db.collection(\"ProfileFields\")\n        .doc()\n        .set({\n            Timestamp: timestamp,\n            ID: id,\n            Compagny: client,\n            HTML: html,\n            Type: type,\n            Class: classType,\n            Title: title,\n            Position: position,\n            Template: true,\n            Button: `<button class=\"button-simple button-about-me\" >Opslaan</button>`\n        })\n    }\n\n    const titleHandler = (e) => {\n        const title = e.target.value\n\n        setTitle(title)\n    }\n\n    const textFieldHTML = () => {\n        const html = \n        `<div>\n            <h3>${title}</h3>\n            <input type=\"text\"/>\n        </div>`\n\n        return html\n    }\n\n    const textAreaHTML = () => {\n        const html = \n        `<div>\n            <h3>${title}</h3>\n            <textarea type=\"text\"></textarea>\n        </div>`\n\n        return html\n    }\n\n    const typeHandler = (e) => {\n        const type = e.target.dataset.type\n        const html = e.target.dataset.html\n        const classType = e.target.dataset.classtype\n\n        setType(type)\n        setHTML(html)\n        setClassType(classType)\n    }\n\n    return (\n        <div className=\"main\">\n            <LeftSideBarAuthProfile />\n            <LeftSideBarAuthProfileFullScreen/>\n            <div className=\"profile profile-auth-profile\" style={{display: menuState}}>\n                <div className=\"settings-inner-container\">\n                    <div className=\"card-header\">\n                        <h1>Profielen</h1>\n                        <p>Beheer de instellingen van de gebruikersprofielen</p>\n                    </div>\n                    <div className=\"divider\">\n                        <h2>Profielvelden</h2>\n                        {profileFields && profileFields.map(field => (\n                            <div className={field.Class}>\n                                <div>\n                                    <h3>{field.Title}</h3>\n                                    <p>{field.Type}</p>\n                                </div>\n                                <img onClick={deleteField} data-title={field.Title} data-id={field.docid} className=\"profile-settings-delete-icon\" src={deleteIcon} alt=\"\" />\n                            </div>\n                        ))}\n                    </div>\n                    <div className=\"divider\">\n                        <h2>Veld toevoegen</h2>\n                        <h3>Geef het profielveld een titel</h3>\n                        <input onChange={titleHandler} type=\"text\" placeholder=\"Geef je profielveld een titel\" />\n                        <h3>Kies een veldsoort</h3>\n                        <form>\n                            <div className='select-profiel-field-container'>\n                                <input type=\"radio\" id='input' name='add-profile-field' data-classtype='field-input-container' data-html={textFieldHTML()} data-type={'Tekstveld'} onChange={typeHandler}/>\n                                <label htmlFor=\"input\">\n                                    <div className=\"add-registration-field-container\">\n                                        <p>Textveld</p>\n                                        <img src={RegistrationField} alt=\"\" />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className='select-profiel-field-container'>\n                                <input type=\"radio\" id='textarea' name='add-profile-field' data-classtype='field-textarea-container' data-html={textAreaHTML()} data-type={'Tekstvak'} onChange={typeHandler} />\n                                <label htmlFor=\"textarea\">\n                                    <div className=\"add-registration-field-container\">\n                                        <p data-type={\"textArea\"}>Textvak</p>\n                                        <img data-type={\"textArea\"} src={RegistrationArea} alt=\"\" />\n                                    </div>\n                                </label>\n                            </div>\n                        </form>\n                        \n                        \n                        {/* <div className=\"add-registration-field-container\" data-type={\"Radio\"} >\n                            <img className=\"drag-icon\" src={plusIcon} alt=\"\" />\n                            <p data-type={\"radio\"}>Meerkeuze knoppen</p>\n                            <img data-type={\"radio\"} src={RegistrationRadio} alt=\"\" />\n                        </div> */}\n                       <button className='button-simple' onClick={addField}>Toevoegen</button>\n                    </div>\n                </div>\n            </div>\n            <RightSideBar />\n        </div>\n    )\n}\n\nexport default ProfileSettings\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/AboutMe.jsx",["1320","1321","1322"],"import LeftSideBarAuthProfile from \"./LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \"./LeftSideBarAuthProfileFullScreen\";\nimport RightSideBar from \"./rightSideBar/RightSideBar\"\nimport MenuStatus from \"../hooks/MenuStatus\";\nimport Location from \"../hooks/Location\"\nimport { useFirestoreAboutMe, useFirestoreProfileFields, useFirestoreIntroductions } from \"../firebase/useFirestore\";\nimport { useState, useContext, useRef, useEffect } from \"react\";\nimport { db } from \"../firebase/config\";\nimport { Auth } from '../StateManagment/Auth';\nimport firebase from \"firebase\";\nimport { client } from \"../hooks/Client\";\nimport uuid from 'react-uuid';\n\nconst AboutMe = () => {\n    const [authO] = useContext(Auth)\n\n    const [introduction, setIntroduction] = useState(\"\")\n\n    const route = Location()[3]\n    const menuState = MenuStatus()\n    const profileFields = useFirestoreProfileFields()\n    const introductions = useFirestoreIntroductions(\"Introductions\", route)\n    const aboutMe = useFirestoreAboutMe(route)\n    const id = uuid()\n\n    const saveField = (e) => {\n        const value = e.target.parentElement.previousSibling.firstElementChild.firstElementChild.nextElementSibling.value\n        const title = e.target.parentElement.dataset.title\n\n        db.collection(\"AboutMe\")\n        .where(\"Compagny\", \"==\", client)\n        .where(\"UserID\", \"==\", route)\n        .where(\"Title\", \"==\", title)\n        .get()\n        .then(querySnapshot => {\n            if(querySnapshot.empty === false){\n                console.log(\"Bestaat\")\n                querySnapshot.forEach(doc => {\n                    db.collection(\"AboutMe\")\n                    .doc(doc.id)\n                    .update({\n                        Value: value\n                    })\n                })\n            } else if (querySnapshot.empty === true){\n                console.log(\"Bestaat niet\")\n                db.collection(\"AboutMe\")\n                .doc()\n                .set({\n                    Compagny: client,\n                    Title: title,\n                    Value: value,\n                    UserID: authO.ID,\n                    ID: id\n                })\n            }\n        })\n    }\n\n    const introductionHandler = (e) => {\n        const message = e.target.value \n\n        setIntroduction(message)\n    }\n\n    const saveIntrdoduction = (e) => {\n        const id = e.target.dataset.id \n\n        db.collection('Introductions')\n        .doc(id)\n        .update({\n            Message: introduction\n        })\n    }\n\n    return (\n        <div className=\"main\">\n             <LeftSideBarAuthProfile />\n            <LeftSideBarAuthProfileFullScreen/>\n             <div className=\"profile profile-auth-profile\" style={{display: menuState}}>\n                <div className=\"settings-inner-container\">\n                    <h1>Over mij</h1>\n                    <div className=\"divider about-me-user-text\">\n                        <h2>Mijn antwoorden</h2>\n                        <div>\n                            <h3>Introductie</h3>\n                            {introductions && introductions.map(introduction => (\n                                <p>{introduction.Message}</p>\n                            ))}\n                            {aboutMe && aboutMe.map(about => (\n                                <div key={about.ID}>\n                                    <h3>{about.Title}</h3>\n                                    <p>{about.Value}</p>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <div className=\"divider\">\n                        <h2>Antwoorden aanpassen</h2>\n                        <div>\n                            <h3>Introductie</h3>\n                            {introductions && introductions.map(introduction => (\n                                <div>\n                                    <textarea placeholder={introduction.Message} id=\"\" cols=\"30\" rows=\"10\" onChange={introductionHandler}></textarea>\n                                    <button className='button-simple' data-id={introduction.docid} onClick={saveIntrdoduction}>Opslaan</button>\n                                </div>\n                            ))}\n                            {profileFields && profileFields.map(field => (\n                                <div key={field.ID}>\n                                    <div dangerouslySetInnerHTML={{ __html: field.HTML }}></div>\n                                    <div data-title={field.Title} dangerouslySetInnerHTML={{ __html: field.Button }} onClick={saveField}></div>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                 </div>\n             </div>\n             <RightSideBar />\n        </div>\n    )\n}\n\nexport default AboutMe\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/MyEvents.jsx",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Subscriptions.jsx",["1323","1324","1325","1326","1327"],"import LeftSideBarAuthProfile from \"./LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \"./LeftSideBarAuthProfileFullScreen\";\nimport RightSideBar from \"./rightSideBar/RightSideBar\"\nimport MenuStatus from \"../hooks/MenuStatus\";\nimport Location from \"../hooks/Location\"\nimport { useState, useEffect } from 'react'\nimport { db } from \"../firebase/config\";\nimport { useFirestoreChatsGroups, useFirestoreSubscriptions } from \"../firebase/useFirestore\";\n\nconst Subscriptions = () => {\n    const [channelMembers, setChannelMembers] = useState('')\n    const [groupMemberList, setGroupMemberList] = useState('')\n    const [channels, setChannels] = useState('')\n    const [groups, setGroups] = useState('')\n\n    const route = Location()[3]\n    const menuState = MenuStatus()\n\n    const subscriptions = useFirestoreSubscriptions(route)\n\n    useEffect(() => {\n\n        const groupArray = []\n        const channelArray = []\n\n        subscriptions && subscriptions.forEach(sub => {\n            if(sub.Type === 'Group'){\n                groupArray.push(sub)\n            }\n\n            if(sub.Type === 'Channel'){\n                channelArray.push(sub)\n            }\n        })\n\n        setGroups(groupArray)\n        setChannels(channelArray)\n\n    }, [subscriptions])\n\n    const unSub = (e) => {\n\n        const id = e.target.dataset.id\n\n        db.collection('Subscriptions')\n        .doc(id)\n        .delete()\n\n    }\n\n\n\n    return (\n        <div className=\"main\">\n            <LeftSideBarAuthProfile />\n            <LeftSideBarAuthProfileFullScreen/>\n             <div className=\"profile profile-auth-profile\" style={{display: menuState}}>\n                <div className=\"settings-inner-container\">\n                    <h1>Lidmaatschappen</h1>\n                </div>\n                <div className='divider'>\n                    <h2>Kanalen</h2>\n                    {channels && channels.map(channel => (\n                        <div className='subscription-container channel-container' key={channel.ID}>\n                            <h3>{channel.SubName}</h3>\n                            <p data-id={channel.docid} onClick={unSub}>Verlaten</p>\n                        </div>\n                    ))}\n                </div>\n                <div className='divider'>\n                    <h2>Groepen</h2>\n                    {groups && groups.map(group => (\n                        <div className='subscription-container channel-container' key={group.ID}>\n                            <h3>{group.SubName}</h3>\n                            <p data-id={group.docid} onClick={unSub}>Verlaten</p>\n                        </div>\n                    ))}\n                </div>\n             </div>\n             <RightSideBar />\n        </div>\n    )\n}\n\nexport default Subscriptions\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/MyChannels.jsx",["1328","1329"],"import LeftSideBarAuthProfile from \"./LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \"./LeftSideBarAuthProfileFullScreen\";\nimport RightSideBar from \"./rightSideBar/RightSideBar\"\nimport Location from \"../hooks/Location\"\nimport { client } from \"../hooks/Client\";\nimport { useHistory } from \"react-router-dom\";\nimport MenuStatus from \"../hooks/MenuStatus\";\nimport { useState, useContext, useEffect } from 'react'\nimport { db } from \"../firebase/config\";\n\n\nconst MyChannels = () => {\n    const [channels, setChannels] = useState('')\n\n    const route = Location()[3]\n    const history = useHistory()\n    const menuState = MenuStatus()\n\n    const authChannels = async () => {\n\n        const channelArray = []\n\n        await db.collection('Channels')\n        .where('Compagny', '==', client)\n        .where('Members', 'array-contains', route)\n        .get()\n        .then(querySnapshot => {\n            querySnapshot.forEach(doc => {\n                channelArray.push(doc.data())\n            })  \n        })\n\n        return channelArray\n    }\n\n    useEffect(() => {\n        authChannels().then((channels) => {\n            setChannels(channels)\n        })\n    }, [])\n\n    const linkToChannel = (e) => {\n\n        const link = e.target.dataset.link\n        const id = e.target.dataset.id\n\n        console.log(link)\n\n        history.push(`/${client}/${link}/${id}`)\n\n    }\n\n    return (\n        <div className=\"main\">\n        <LeftSideBarAuthProfile />\n        <LeftSideBarAuthProfileFullScreen/>\n        <div className=\"card-overview\" style={{display: menuState}}>\n            <div className=\"page-header\">\n                <h1>Mijn kanalen</h1>\n            </div>\n            {channels && channels.map(channel => (\n                <div className=\"list introductions-list my-message\" data-id={channel.ID} data-link={channel.Link} onClick={linkToChannel}>\n                    <h2>{channel.Name}</h2>\n                    <p>Aantal leden: {channel.Members.length}</p>\n                </div>\n            ))}\n            \n        </div>\n            <RightSideBar />\n        </div>\n    )\n}\n\nexport default MyChannels\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Registrations.jsx",["1330"],"import RightSideBar from \"./rightSideBar/RightSideBar\"\nimport LeftSideBarAuthProfile from \"./LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \"./LeftSideBarAuthProfileFullScreen\";\nimport { useFirestoreNotApproved, useFirestoreSubscriptionsNotApproved, useFirestoreTimestamp } from \"../firebase/useFirestore\";\nimport { db, timestamp } from \"../firebase/config\";\nimport { client } from \"../hooks/Client\";\nimport { useFirestore } from \"../firebase/useFirestore\";\nimport firebase from \"firebase\";\nimport MenuStatus from \"../hooks/MenuStatus\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\"\nimport GetYearMonth from '../hooks/GetYearMonth'\nimport uuid from 'react-uuid';\n\nconst Registrations = () => {\n    const [verificationMethode, setVerificationMethode] = useState(\"\")\n    const [headerPhoto, setHeaderPhoto] = useState('')\n    const [communityNameDB, setCommunityNameDB] = useState(\"\")\n    const [logoDB, setLogoDB] = useState(\"\")\n\n    const notApprovedUsers = useFirestoreNotApproved()\n    const notApprovedGroups = useFirestoreSubscriptionsNotApproved('Subscriptions')\n    const compagny = useFirestore(\"CompagnyMeta\")\n    const banners = useFirestore('Banners')\n    const events = useFirestoreTimestamp(\"Events\")\n\n    const menuState = MenuStatus()\n    const history = useHistory()\n    const getYearMonth = GetYearMonth()\n    const id = uuid()\n\n    useEffect(() => {\n        compagny && compagny.forEach(comp => {\n            setCommunityNameDB(comp.CommunityName)\n            setLogoDB(comp.Logo)\n        })\n    }, [compagny])\n\n    useEffect(() => {\n        banners && banners.forEach(banner => {\n            const header = banner.NewMember\n            setHeaderPhoto(header)\n        })\n    }, [banners])\n\n    let docid = null\n    let verificationAdmin = null\n    let verificationEmail = null\n\n    compagny && compagny.forEach(comp => {\n        docid = comp.docid\n        const verificationMethode = comp.VerificationMethode\n\n        if(verificationMethode === \"Admin\"){\n            verificationAdmin = \"checked\"\n        } else if(verificationMethode === \"Email\"){\n            verificationEmail = \"checked\"\n        }\n    })\n\n    const approveAdmin = (e) => {\n        const id = e.target.dataset.id\n        const forname = e.target.dataset.forname\n        const surname = e.target.dataset.surname \n        const photo = e.target.dataset.photo\n        const userID = e.target.dataset.userid\n        const email = e.target.dataset.email\n\n        db.collection(\"Users\")\n        .doc(id)\n        .update({\n            Approved: true\n        })\n        .then(() => {\n            db.collection(\"AllActivity\")\n            .doc()\n            .set({\n                Title: `Welkom ${forname}!`,\n                Type: \"NewMember\",\n                Compagny: client,\n                ButtonText: \"Bekijk profiel\",\n                Timestamp: timestamp,\n                ID: id,\n                Banner: headerPhoto,\n                Description: 'is lid geworden van de community',\n                Link: `/${client}/PublicProfile/${userID}`,\n                User: `${forname} ${surname}`,\n                UserID: userID,\n                UserPhoto: photo,\n            }) \n        })\n        .then(() => {\n            db.collection(\"Search\")\n            .doc()\n            .set({\n                Name: `${forname} ${surname}`,\n                Type: 'Gebruiker',\n                Compagny: client,\n                Link: `PublicProfile/${userID}`\n            })\n        })\n        .then(() => {\n            db.collection(\"Email\").doc().set({\n                to: email,\n                cc: \"info@Deccos.nl\",\n                message: {\n                subject: `Je account is goedgekeurd voor ${communityNameDB}`,\n                html: `\n                    Beste ${forname} ${surname}, <br><br>\n    \n                    Je aanmelding voor ${communityNameDB} is goedgekeurd door een beheerder. <br><br>\n    \n                    Je kunt vanaf nu <a href='https://deccos.co/${client}'>hier</a> inloggen.<br><br>\n    \n                    Vriendelijke groet, </br></br>\n                    ${communityNameDB} </br></br>\n                    <img src=\"${logoDB}\" width=\"100px\">\n                    \n                    `,\n                Gebruikersnaam: `${forname} ${surname}`,\n                Emailadres: email,\n                Type: \"Verification mail email\"\n                  }     \n              });\n        })\n        .then(() => {\n            db.collection(\"MemberGraph\")\n            .where(\"Compagny\", \"==\", client)\n            .where('Month', '==', getYearMonth)\n            .get()\n            .then(querySnapshot => {\n\n                if(querySnapshot.empty === false){\n\n                    querySnapshot.forEach(doc => {\n\n                        db.collection(\"MemberGraph\")\n                        .doc(doc.id)\n                        .update({\n                            Contributions: firebase.firestore.FieldValue.increment(1)\n                        })\n                    })\n                } else if(querySnapshot.empty === true){\n\n                    db.collection(\"MemberGraph\")\n                    .doc()\n                    .set({\n                        Month: getYearMonth,\n                        Contributions: 1,\n                        Compagny: client,\n                        LastActive: timestamp,\n                        ID: uuid()\n                    })\n                }\n            })\n        })\n    }\n\n    const approveGroupMember = (e) => {\n        const id = e.target.dataset.id\n        const email = e.target.dataset.email\n        const name = e.target.dataset.name\n        const memberID = e.target.dataset.memberid\n        const groupName = e.target.dataset.groupname \n        const groupID = e.target.dataset.groupid\n        const docid = e.target.dataset.docid\n\n        db.collection('Subscriptions')\n        .doc(id)\n        .update({\n            Approved: true\n        })\n        .then(() => {\n            db.collection('Groups')\n            .doc(docid)\n            .update({\n                Members: firebase.firestore.FieldValue.arrayUnion(memberID)\n            })\n\n        })\n        .then(() => {\n            db.collection(\"Email\").doc().set({\n                to: email,\n                cc: \"info@Deccos.nl\",\n                message: {\n                subject: `Je aanvraag voor groep ${groupName} is goedgekeurd op ${communityNameDB}`,\n                html: `\n                    Beste ${name}, <br><br>\n    \n                    Je aanvraag voor groep ${groupName} is goedgekeurd op ${communityNameDB}. <br><br>\n    \n                    Bekijk de groep <a href='https://deccos.co/${client}/GroupLanding/${groupID}'>hier</a>.<br><br>\n    \n                    Vriendelijke groet, </br></br>\n                    ${communityNameDB} </br></br>\n                    <img src=\"${logoDB}\" width=\"100px\">\n                    \n                    `,\n                Gebruikersnaam: `${name}`,\n                Emailadres: email,\n                Type: \"Verification mail email\"\n                  }     \n              });\n        })\n    }\n\n    const verificationMethhodeHandler = (e) => {\n        const methode = e.target.id \n\n        setVerificationMethode(methode)\n    }\n\n    const saveVerificationMethode = (e) => {\n\n        db.collection(\"CompagnyMeta\")\n            .doc(docid)\n            .update({\n                VerificationMethode: verificationMethode\n            })\n            .then(() => {\n                e.target.innerText = \"Opgeslagen\"\n            })\n    }\n\n    const linkToUser = (e) => {\n        const id = e.target.dataset.userid\n\n        history.push(`/${client}/PublicProfile/${id}`)\n    }\n\n    const linkToGroup = (e) => {\n        const id = e.target.dataset.groupid\n\n        history.push(`/${client}/GroupLanding/${id}`)\n    }\n\n    const linkEventSignups = (e) => {\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/EventSignups/${id}`)\n    }\n\n    const eventLink = (e) => {\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/EventDetail/${id}`)\n    }\n\n\n\n    return (\n        <div className=\"main\">\n            <LeftSideBarAuthProfile />\n            <LeftSideBarAuthProfileFullScreen/>\n            <div className=\"profile profile-auth-profile\" style={{display: menuState}}>\n                <div className=\"settings-inner-container\">\n                    <div className=\"card-header\">\n                        <h1>Aanmelden</h1>\n                        <p>Beheer de instellingen van het aanmeldproces</p>\n                    </div>\n                    <div className='divider'>\n                        <div className=\"verification-methode-container\">\n                            <h3>Verificatie methode voor online omgeving</h3>\n                            <p>Selecteer de verificatiemethode voor nieuwe leden</p>\n                            <div className=\"radio-input-container\">\n                                <input type=\"radio\" name=\"verification-methode\" id=\"Email\" checked={verificationEmail} onChange={verificationMethhodeHandler} />\n                                <label htmlFor=\"verifcation-methode\">Verificatie via email</label>\n                            </div>\n                            <div className=\"radio-input-container\">\n                                <input type=\"radio\" name=\"verification-methode\" id=\"Admin\" checked={verificationAdmin} onChange={verificationMethhodeHandler}/>\n                                <label htmlFor=\"verifcation-methode\">Verificatie door admin</label>\n                            </div>\n                            <button className=\"button-simple button-verification\" onClick={saveVerificationMethode}>Opslaan</button>\n                        </div>\n                    </div>\n                    <div className=\"divider\">\n                        <h3>Aanmeldingen voor online omgeving</h3>\n                        {notApprovedUsers && notApprovedUsers.map(user => (\n                            <div className=\"userrole-users-container\" key={user.ID}>\n                                <img className='pointer' src={user.Photo} alt=\"\" data-userid={user.ID} onClick={linkToUser} />\n                                <p className='pointer' data-userid={user.ID} onClick={linkToUser}>{user.UserName}</p>\n                                <p \n                                className=\"userrole-users-approve-button\" \n                                data-id={user.Docid}\n                                data-userid={user.ID}\n                                data-forname={user.ForName} \n                                data-surname={user.SurName}\n                                data-photo={user.Photo}\n                                data-email={user.Email}\n                                onClick={approveAdmin}>\n                                Goedkeuren\n                                </p>\n                            </div>\n                        ))}\n                    </div> \n                    <div className='divider'>\n                        <h3>Aanmeldingen voor groepen</h3>\n                        {notApprovedGroups && notApprovedGroups.map(group=> (\n                             <div className=\"userrole-users-container\" key={group.ID}>\n                                <img className='pointer' src={group.UserPhoto} alt=\"\" data-userid={group.UserID} onClick={linkToUser} />\n                                <p className='pointer' onClick={linkToUser} data-userid={group.UserID}>{group.UserName}</p>\n                                <p>&nbsp;wil lid worden van&nbsp;</p>\n                                <p className='pointer' onClick={linkToGroup}><u data-groupid={group.SubID}>{group.SubName}</u></p>\n                                <p \n                                className=\"userrole-users-approve-button\" \n                                data-id={group.docid}\n                                data-email={group.UserEmail}\n                                data-memberid={group.UserID}\n                                data-name={group.UserName}\n                                data-groupname={group.SubName}\n                                data-groupid={group.SubID}\n                                data-docid={group.SubDocid}\n                                onClick={approveGroupMember}>\n                                Goedkeuren\n                                </p>\n                            </div>\n                        ))}\n\n                    </div>\n                    <div className='divider'>\n                        <h3>Aanmeldingen voor events</h3>\n                        {events && events.map(vnt => (\n                            <div className=\"events-signups-container\">\n                                <p data-id={vnt.ID} onClick={eventLink}>{vnt.Title}</p>\n                                <button className='button-simple' data-id={vnt.ID} onClick={linkEventSignups}>Bekijk</button>\n                            </div>\n                        ))}\n\n                    </div>\n                </div>   \n            </div>\n            <RightSideBar/>\n        </div>\n    )\n}\n\nexport default Registrations\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ActivityDetail.jsx",["1331","1332"],"import LeftSideBar from \"./LeftSideBar\";\nimport LeftSideBarFullScreen from \"./LeftSideBarFullScreen\"\nimport RightSideBar from \"./rightSideBar/RightSideBar\"\nimport MenuStatus from \"../hooks/MenuStatus\";\nimport { useFirestoreID, useFirestoreTasks, useFirestoreTasksComplete } from \"../firebase/useFirestore\"\nimport Location from \"../hooks/Location\"\nimport { useState, useEffect } from 'react'\nimport completeIcon from '../images/icons/complete-icon.png'\nimport clockIcon from '../images/icons/clock-icon.png'\nimport hourglassIcon from '../images/icons/hourglass-icon.png'\nimport deleteTaskIcon from '../images/icons/delete-task-icon.png'\nimport { useHistory } from \"react-router-dom\";\nimport { client } from \"../hooks/Client\"\nimport { db } from \"../firebase/config\";\n\nconst ActivityDetail = () => {\n    const [activity, setActivity] = useState(null)\n    const [activityDocid, setActivityDocid] = useState('')\n    const [effectShort, setEffectShort] = useState('')\n    const [effectLong, setEffectLong] = useState('')\n    const [progression, setProgression] = useState(0)\n\n    const menuState = MenuStatus()\n    const route = Location()[3]\n    const history = useHistory();\n\n    const tasks = useFirestoreTasks(route)\n    const completedTasks = useFirestoreTasksComplete(route)\n    const activities = useFirestoreID('Activities', route)\n\n    useEffect(() => {\n\n        activities && activities.forEach(activity => {\n            setActivity(activity.Activity)\n            setActivityDocid(activity.docid)\n            setEffectShort(activity.EffectShort)\n            setEffectLong(activity.EffectLong)\n        })\n    }, [activities])\n\n    useEffect(() => {\n            const progress = 100/tasks.length*completedTasks.length\n            setProgression(progress) \n    }, [completedTasks])\n\n    console.log(progression)\n\n    const updateProgressActivity = () => {\n        if(activityDocid != ''){\n            db.collection('Activities')\n            .doc(activityDocid)\n            .update({\n                Progression: progression\n            })\n        }\n    } \n       \n    const taskCompleted = (e) => {\n\n        const docid = e.target.dataset.docid \n        const completed = e.target.dataset.completed\n\n        if(completed === 'false'){\n            db.collection('Tasks')\n            .doc(docid)\n            .update({\n                Completed: true,\n                BackgroundColor: '#b2d7bb',\n                Icon: deleteTaskIcon\n            })\n            .then(() => {\n                setTimeout(() => {\n                    updateProgressActivity()\n                }, 1000) \n            })\n        } else if (completed === 'true'){\n            db.collection('Tasks')\n            .doc(docid)\n            .update({\n                Completed: false,\n                BackgroundColor: 'white',\n                Icon: completeIcon\n            })\n            .then(() => {\n                setTimeout(() => {\n                    updateProgressActivity()\n                }, 1000) \n            })\n        }   \n    }\n\n    const taskLink = (e) => {\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/TaskDetail/${id}`)\n\n    }\n\n    const ProgressionBar = () => {\n        return(\n        <div className='progression-container'>\n            <p>Voortgang {Math.trunc(progression)}%</p>\n            <div className='progressionbar-outer-bar'>\n                <div className='progressionbar-completed' style={{width: `${progression}%`}}></div>\n            </div>\n        </div>\n        )\n    }\n\n    return (\n        <div className=\"main\">\n        <LeftSideBar />\n        <LeftSideBarFullScreen/>\n        <div className=\"main-container\" style={{display: menuState}}>\n            <div className='page-header page-container-activities'>\n                <h1>{activity}</h1>\n                <div className='activity-detail-effects-container'>\n                    <div className='effect-title-container'>\n                        <img src={clockIcon} alt=\"\"/>\n                        <h3>Kortetermijn effect</h3>\n                    </div>\n                    <p>{effectShort}</p>\n                    <div className='effect-title-container'>\n                        <img src={hourglassIcon} alt=\"\"/>\n                        <h3>Lange termijn effect</h3>\n                    </div>        \n                    <p>{effectLong}</p>\n                </div>\n                \n            </div>\n            <ProgressionBar/>\n            <h2>Taken</h2>\n            {tasks && tasks.map(task => (\n                <div className='task-outer-container' key={task.ID}>\n                    <div className='task-container' style={{backgroundColor: task.BackgroundColor}}>\n                        <div className='task-inner-container'>\n                            <img src={task.Icon} data-docid={task.docid} data-completed={task.Completed} onClick={taskCompleted} alt=\"\"/>\n                            <p>{task.Task}</p>\n                            <button className='button-simple button-activity-detail' data-id={task.ID} onClick={taskLink}>Details</button>\n                        </div>\n                    </div>\n                </div>\n            ))}\n            \n        </div>\n        <RightSideBar />\n        </div>\n    )\n}\n\nexport default ActivityDetail\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ActivitySettings.jsx",["1333","1334"],"import RightSideBar from \"./rightSideBar/RightSideBar\"\nimport LeftSideBarAuthProfile from \"./LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \"./LeftSideBarAuthProfileFullScreen\";\nimport MenuStatus from \"../hooks/MenuStatus\";\nimport {useFirestore} from \"../firebase/useFirestore\"\nimport { useState, useEffect, useContext } from 'react'\nimport { Auth } from '../StateManagment/Auth';\nimport uuid from 'react-uuid';\nimport { db, timestamp } from \"../firebase/config.js\"\nimport { client } from \"../hooks/Client\"\nimport deleteIcon from '../images/icons/delete-icon.png'\n\nconst ActivitySettings = () => {\n    const [authO] = useContext(Auth)\n\n    const [goalTitle, setGoalTitle] = useState('')\n    const [goalID, setGoalID] = useState('')\n    const [activityTitle, setActivityTitle] = useState('')\n    const [effectShort, setEffectShort] = useState('')\n    const [effectMiddle, setEffectMiddle] = useState('')\n    const [effectLong, setEffectLong] = useState('')\n    const [ingredients, setIngredients] = useState('')\n\n    const menuState = MenuStatus()\n\n    const activities = useFirestore(\"Activities\")\n    const goals = useFirestore(\"Goals\")\n\n    const goalHandler = (e) => {\n        const goalTitle = e.target.options[e.target.selectedIndex].dataset.title\n        const goalID = e.target.options[e.target.selectedIndex].dataset.id\n\n        setGoalTitle(goalTitle)\n        setGoalID(goalID)\n    }\n\n    const activityHandler = (e) => {\n\n        const title = e.target.value \n\n        setActivityTitle(title)\n\n    }\n\n    const effectShortHandler = (e) => {\n        const effect = e.target.value\n\n        setEffectShort(effect)\n    }\n\n    const effectMiddleHandler = (e) => {\n        const effect = e.target.value\n\n        setEffectMiddle(effect)\n    }\n\n    const effectLongHandler = (e) => {\n        const effect = e.target.value\n\n        setEffectLong(effect)\n    }\n\n    const ingriendentsHandler = (e) => {\n\n        const ingredients = e.target.value\n\n        setIngredients(ingredients)\n        \n    }\n\n    const saveActivity = (e) => {\n\n        e.target.innerText = 'Opgeslagen'\n        \n        db.collection('Activities')\n        .doc()\n        .set({\n            Activity: activityTitle,\n            ID: uuid(),\n            Compagny: client,\n            Timestamp: timestamp,\n            User: authO.UserName,\n            UserPhoto: authO.Photo,\n            UserID: authO.ID,\n            EffectShort: effectShort,\n            EffectMiddle: effectMiddle,\n            EffectLong: effectLong,\n            Ingredients: ingredients,\n            Goal: goalTitle,\n            GoalID: goalID,\n            Progression: 0\n        })\n    }\n\n    const deleteActivity = (e) => {\n        const docid = e.target.dataset.docid\n\n        db.collection('Activities')\n        .doc(docid)\n        .delete()\n    }\n\n\n    return (\n        <div className=\"main\">\n        <LeftSideBarAuthProfile />\n        <LeftSideBarAuthProfileFullScreen/>\n        <div className=\"profile profile-auth-profile\" style={{display: menuState}}>\n            <div className=\"settings-inner-container\">\n                <div className=\"divider card-header\">\n                    <h1>Activiteiten</h1>\n                    <p>Pas de instellingen aan de activiteiten aan</p>\n                </div>\n                <div className='divider'>\n                    <h3>Community activiteiten</h3>\n                    {activities && activities.map(activity => (\n                        <div className='channel-container'>\n                            <p>{activity.Activity}</p>\n                            <img src={deleteIcon} alt=\"\" className=\"userrole-users-delete-button\" data-docid={activity.docid} onClick={deleteActivity}/>\n                        </div>\n                    ))}\n                </div>\n                <div className='divider'>\n                        <h3>Activiteit toevoegen</h3>\n                        <h4>Selecteer een doel</h4>\n                        <select name=\"\" id=\"\" onChange={goalHandler}>\n                            <option value=\"\">-- Selecteer een doel --</option>\n                            {goals && goals.map(goal => (\n                                <option value=\"\" key={goal.ID} data-id={goal.ID} data-title={goal.Title}>{goal.Title}</option>\n                            ))}\n                        </select>\n                        <h4>Beschrijf activiteit</h4>\n                        <input type=\"text\" placeholder='Beschrijf hier je activiteit' onChange={activityHandler}/>\n                        <h4>Wat is het effect van deze activiteit op de korte termijn (0 - 1,5 jaar)</h4>\n                        <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\" onChange={effectShortHandler}></textarea>\n                        <h4>Wat is het effect van deze activiteit op de lange termijn (vanaf 1,5 jaar)</h4>\n                        <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\" onChange={effectLongHandler}></textarea>\n                        <h4>Onder welke randvoorwaarden kunnen jullie de effecten waarmaken?</h4>\n                        <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\" onChange={ingriendentsHandler}></textarea>\n                        <button className='button-simple' onClick={saveActivity}>Opslaan</button>\n                </div>\n            \n            </div>\n        </div>\n        <RightSideBar />\n        </div>\n    )\n}\n\nexport default ActivitySettings\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Activities.jsx",["1335","1336","1337"],"import LeftSideBar from \"./LeftSideBar\";\nimport LeftSideBarFullScreen from \"./LeftSideBarFullScreen\"\nimport RightSideBar from \"./rightSideBar/RightSideBar\"\nimport MenuStatus from \"../hooks/MenuStatus\";\nimport {useFirestore} from \"../firebase/useFirestore\"\nimport { client } from \"../hooks/Client\"\nimport { useHistory } from \"react-router-dom\";\nimport { useState, useEffect } from 'react'\n\nconst Activities = () => {\n    const [progression, setProgression] = useState(0)\n\n    const menuState = MenuStatus()\n    const history = useHistory();\n\n    const activities = useFirestore(\"Activities\")    \n\n    const activityLink = (e) => {\n\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/ActivityDetail/${id}`)\n\n    }\n\n    return (\n        <div className=\"main\">\n        <LeftSideBar />\n        <LeftSideBarFullScreen/>\n        <div className=\"main-container\" style={{display: menuState}}>\n            <div className='page-header'>\n                <h1>Activiteiten</h1>\n            </div>\n            {activities && activities.map(activity => (\n                <div className='activity-container' key={activity.ID}>\n                    <div className='activity-inner-container'>\n                        <h3>{activity.Activity}</h3>\n                        <div className='progression-container-activity-detail'>\n                            <p>Voortgang {Math.trunc(activity.Progression)}%</p>\n                            <div className='progressionbar-outer-bar'>\n                                <div className='progressionbar-completed' style={{width: `${activity.Progression}%`}}></div>\n                            </div>\n                        </div>\n                        \n                        <button className='button-simple' data-id={activity.ID} onClick={activityLink}>Details</button>\n                    </div>\n                </div>\n            ))}\n\n        </div>\n        <RightSideBar />\n        </div>\n    )\n}\n\nexport default Activities\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ActivityGoal.jsx",["1338","1339"],"import LeftSideBar from \"./LeftSideBar\";\nimport LeftSideBarFullScreen from \"./LeftSideBarFullScreen\"\nimport RightSideBar from \"./rightSideBar/RightSideBar\"\nimport MenuStatus from \"../hooks/MenuStatus\";\nimport { useFirestoreActivities, useFirestoreID } from \"../firebase/useFirestore\"\nimport { client } from \"../hooks/Client\"\nimport { useHistory } from \"react-router-dom\";\nimport { useState, useEffect } from 'react'\nimport Location from \"../hooks/Location\"\nimport ArrowLeftIcon from '../images/icons/arrow-left-icon.png'\n\nconst ActivitieGoal = () => {\n    const [progression, setProgression] = useState(0)\n    const [goal, setGoal] = useState('')\n\n    const menuState = MenuStatus()\n    const history = useHistory();\n    const route = Location()[3]\n\n    const activities = useFirestoreActivities(route)  \n    const goals = useFirestoreID('Goals', route) \n    \n    useEffect(() => {\n        goals && goals.forEach(goal => {\n            const goalTitle = goal.Title\n            setGoal(goalTitle)\n        })\n    }, [goals])\n\n    const activityLink = (e) => {\n\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/ActivityDetail/${id}`)\n\n    }\n\n    const backToGoal = (e) => {\n        history.push(`/${client}/GoalDetail/${route}`)\n    }\n\n\n    return (\n        <div className=\"main\">\n        <LeftSideBar />\n        <LeftSideBarFullScreen/>\n        <div className=\"main-container\" style={{display: menuState}}>\n            <div className=\"previous-message-container\" onClick={backToGoal}>\n                <img src={ArrowLeftIcon} alt=\"\" />\n                <p>Doel</p>\n            </div>\n            <div className='page-header goal-activity-header'>\n                <h1>Activiteiten</h1>\n                <p>{goal}</p>\n            </div>\n            {activities && activities.map(activity => (\n                <div className='activity-container' key={activity.ID}>\n                    <div className='activity-inner-container'>\n                        <h3>{activity.Activity}</h3>\n                        <div className='progression-container-activity-detail'>\n                            <p>Voortgang {Math.trunc(activity.Progression)}%</p>\n                            <div className='progressionbar-outer-bar'>\n                                <div className='progressionbar-completed' style={{width: `${activity.Progression}%`}}></div>\n                            </div>\n                        </div>\n                        <button className='button-simple' data-id={activity.ID} onClick={activityLink}>Details</button>\n                    </div>\n                </div>\n            ))}\n\n        </div>\n        <RightSideBar />\n        </div>\n    )\n}\n\nexport default ActivitieGoal\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Matching/Roadmap.jsx",["1340"],"import RightSideBar from \".././rightSideBar/RightSideBar\"\nimport LeftSideBarAuthProfile from \".././LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \".././LeftSideBarAuthProfileFullScreen\";\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { Colors } from \"../../StateManagment/Colors\";\nimport { db, timestamp } from \"../../firebase/config\";\nimport uuid from 'react-uuid';\nimport { client } from \"../../hooks/Client\"\nimport {useFirestoreMatchRoadmaps} from \"../../firebase/useFirestore\"\nimport deleteIcon from '../../images/icons/delete-icon.png'\nimport completeIcon from '../../images/icons/complete-icon.png'\n\nconst RoadMap = () => {\n    const [colors] = useContext(Colors)\n\n    const [title, setTitle] = useState('')\n    const [position, setPosition] = useState('')\n\n    const menuState = MenuStatus()\n\n    const matchRoadmaps = useFirestoreMatchRoadmaps()\n\n\n    const titleHandler = (e) => {\n        const title = e.target.value\n\n        setTitle(title)\n    }\n\n    const positionHandler = (e) => {\n        const position = e.target.value\n\n        setPosition(position)\n    }\n\n    const saveStep = () => {\n\n        db.collection('MatchRoadmaps')\n        .doc()\n        .set({\n            Title: title,\n            Position: position,\n            ID: uuid(),\n            Compagny: client,\n            Timestamp: timestamp,\n            Completed: false,\n            Icon: completeIcon,\n        })\n    }\n\n    const deleteStep = (e) => {\n        const id = e.target.dataset.id \n\n        db.collection('MatchRoadmaps')\n        .doc(id)\n        .delete()\n\n    }\n\n    return (\n        <div className=\"main\" style={{backgroundColor:colors.Background}}>\n            <LeftSideBarAuthProfile />\n            <LeftSideBarAuthProfileFullScreen/>\n            <div className=\"profile profile-auth-profile\" style={{display: menuState}}>\n                <div className=\"card-header\">\n                    <h1>Stappenplan</h1>\n                    <p>Voeg een stappenplan toe aan de matches</p>\n                </div>\n                <div className='divider'>\n                    <h4>Stappen</h4>\n                    {matchRoadmaps && matchRoadmaps.map(map => (\n                    <div className='roadmap-container' key={map.ID}>\n                        <div id='roadmap-inner-container'>\n                            <p>{map.Position}</p>\n                            <p className='categorie-title'>{map.Title}</p>\n                            <img src={deleteIcon} alt=\"\" data-id={map.docid} onClick={deleteStep} />\n                        </div>\n                    </div>\n                    ))}\n                </div>\n                <div className='divider'>\n                    <h4>Voeg een stap toe</h4>\n                    <p>Titel</p>\n                    <input type=\"text\" placeholder='Geef je stap een titel' onChange={titleHandler} />\n                    <p>Positie</p>\n                    <input type=\"number\" placeholder='Geef je stap een positie' onChange={positionHandler}/>\n                    <div>\n                        <button className='button-simple' onClick={saveStep}>Opslaan</button>\n                    </div>\n                </div>\n            </div>\n            <RightSideBar />\n        </div>\n    )\n}\n\nexport default RoadMap\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Matching/MatchDetail.jsx",["1341","1342","1343","1344","1345"],"import { useFirestoreID, useFirestoreMessages, useFirestoreMatchRoadmaps, useFirestoreMatchTagsType } from \"../../firebase/useFirestore\"\nimport { motion } from \"framer-motion\"\nimport MessageBar from \"../Community/MessageBar\"\nimport LeftSideBar from \"../LeftSideBar\"\nimport LeftSideBarFullScreen from \"../LeftSideBarFullScreen\"\nimport RightSideBar from \"../rightSideBar/RightSideBar\"\nimport { useHistory } from \"react-router-dom\"\nimport { client } from \"../../hooks/Client\"\nimport { useContext, useState, useEffect } from 'react';\nimport { Auth } from '../../StateManagment/Auth';\nimport Location from \"../../hooks/Location\"\nimport Reaction from \"../Community/Reaction\"\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport { db, timestamp } from \"../../firebase/config\"\nimport completeIcon from '../../images/icons/complete-icon.png'\nimport userIcon from '../../images/icons/user-icon.png'\nimport deleteTaskIcon from '../../images/icons/delete-task-icon.png'\n\nconst MatchDetail = () => {\n    const [authO] = useContext(Auth)\n\n    const [matchesOverview, setMatchesOverview] = useState('')\n    const [docid, setDocid] = useState('')\n    const [status, setStatus] = useState('')\n    const [rating, setRating] = useState(0);\n\n    const route = Location()[3]\n    const menuState = MenuStatus()\n    const history = useHistory()\n\n    const messages  = useFirestoreMessages(\"Messages\", route )\n    const matches = useFirestoreID(\"Matches\", route)\n    const matchRoadmaps = useFirestoreMatchRoadmaps()\n    const mainTags = useFirestoreMatchTagsType('Main')\n\n    // Set default rating in state\n\n    useEffect(() => {\n        matches && matches.forEach(match => {\n            const rating = match.Rating\n\n            setRating(rating)\n        })\n    }, [matches])\n\n    // set docid of match in state\n\n    useEffect(() => {\n        matches && matches.forEach(match => {\n            const docid = match.docid \n\n            setDocid(docid)\n        })\n    }, [matches])\n\n    //Set status of match in state\n\n    useEffect(() => {\n        matches && matches.forEach(match => {\n            const status = match.Status\n\n            setStatus(status)\n        })\n    }, [matches])\n\n    // Find match items\n\n    const items = async (id) => {\n\n        const matchDuo = []\n\n        await db.collection('MatchItems')\n            .where('ID', '==', id)\n            .get()\n            .then(querySnapshot => {\n                querySnapshot.forEach(doc => {\n                    const title = doc.data().Title\n                    const banner = doc.data().Banner\n                    const timestamp = doc.data().Timestamp\n                    const id = doc.data().ID\n                    const tags = doc.data().Tags\n\n                    const matchObject = {\n                        Title: title,\n                        Banner: banner,\n                        Timestamp: timestamp,\n                        ID: id,\n                        Tags: tags\n                    }\n\n                    matchDuo.push(matchObject)\n\n                })\n            })\n\n            return matchDuo\n    }\n\n    const matchArray = async () => {\n\n        const matchesArray = []\n\n        for(const match of matches){\n\n            const matchList = []\n\n            matchList.ID = match.ID\n            matchList.Matches = match.Matches\n\n            for(const id of match.Match){\n\n                const itemList = await items(id)\n\n                matchList.push(itemList)\n\n            }\n\n            matchesArray.push(matchList)\n        }\n\n        return matchesArray\n    }\n\n    useEffect(() => {\n        matchArray().then(match => {\n            setMatchesOverview(match)\n        })\n    }, [matches])\n\n    const statusHandler = (e) => {\n\n        const status = e.target.options[e.target.selectedIndex].value \n\n        console.log(status)\n\n        saveStatus(status)\n    }\n\n    const saveStatus = (status) => {\n\n        db.collection('Matches')\n        .doc(docid)\n        .update({\n            Status: status\n        })\n    }\n\n    const Status = () => {\n\n        if(status === 'Active'){\n            return <div id=\"status-active\"></div>\n        } else if(status === 'Inactive'){\n            return <div id=\"status-inactive\"></div>\n        } else if(status === 'Deleted'){\n            return <div id=\"status-deleted\"></div>\n        } \n    }\n\n    const matchResemblance = (matches) => {\n\n        const matchesArray = matches.split(',')\n\n        return matchesArray\n    }\n\n    const matchItemDetailLink = (e) => {\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/MatchItemDetail/${id}`)\n    }\n\n    const StarRating = () => {\n        const [hover, setHover] = useState(0);\n\n        console.log(rating, hover)\n\n        return (\n          <div className=\"star-rating\">\n            {[...Array(5)].map((star, index) => {\n              index += 1;\n              return (\n                <button\n                  type=\"button\"\n                  id='star-item'\n                  key={index}\n                  className={index <= (hover || rating) ? \"on\" : \"off\"}\n                  onClick={() => saveRating(index) }\n                  onMouseEnter={() => setHover(index)}\n                  onMouseLeave={() => setHover(rating)}\n                >\n                  <span className=\"star\">&#9733;</span>\n                </button>\n              );\n            })}\n          </div>\n        );\n      };\n\n      const saveRating = (index) => {\n          db.collection('Matches')\n          .doc(docid)\n          .update({\n              Rating: index\n          })\n      }\n\n    const typeColor = (item) => {\n\n        let color = ''\n\n        console.log(item)\n\n        mainTags && mainTags.forEach(tag => {\n            const tagMain = tag.Tag\n\n            if(item.Tags.includes(tagMain)){\n                color = tag.Color\n            }\n        })\n\n        return color\n\n    }\n\n    const taskCompleted = (e) => {\n        const docid = e.target.dataset.docid \n        const completed = e.target.dataset.completed\n\n        if(completed === 'false'){\n            db.collection('MatchRoadmaps')\n            .doc(docid)\n            .update({\n                Completed: true,\n                BackgroundColor: '#b2d7bb',\n                Icon: deleteTaskIcon,\n                User: authO.UserName,\n                UserPhoto: authO.Photo,\n                UserID: authO.ID,\n            })\n        } else if (completed === 'true'){\n            db.collection('MatchRoadmaps')\n            .doc(docid)\n            .update({\n                Completed: false,\n                BackgroundColor: 'white',\n                Icon: completeIcon,\n                User: authO.UserName,\n                UserPhoto: authO.Photo,\n                UserID: authO.ID,\n            })\n        }  \n    }\n\n    const stepUserLink = (e) => {\n        const id = e.target.dataset.id \n\n        history.push(`/${client}/PublicProfile/${id}`)\n    }\n\n    const showStepUserPhoto = (step) => {\n        if(step.Completed === false){\n            return 'hidden'\n        }\n    }\n\n    return (\n        <div className=\"main\">\n            <LeftSideBar />\n            <LeftSideBarFullScreen/>\n            <div className=\"card-overview goal-detail-container\" style={{display: menuState}}>\n                <div className=\"article-container\">\n                    {matchesOverview && matchesOverview.map(matches => (\n                        <div id='match-detail-outer-container' className='article'>\n                            <div id='match-detail-container'>\n                                {matches.map(match => (\n                                <>\n                                    {match.map(item => (\n                                        <div id='match-item-detail-container'>\n                                            <div id='match-detail-banner-container'>\n                                                <img src={item.Banner} alt=\"\" data-id={item.ID} onClick={matchItemDetailLink} style={{border: `3px solid ${typeColor(item)}`}}/>\n                                                <h3 data-id={item.ID} onClick={matchItemDetailLink}>{item.Title}</h3>\n                                            </div>\n                                        </div>\n                                    ))}\n                                </>\n                                ))}\n                            </div>\n                            <div id='status-container'>\n                                <div id='status-display-container'>\n                                    <h3>Status</h3>\n                                    <Status/>\n                                </div>\n                                <select name=\"\" id=\"\" onChange={statusHandler}>\n                                    <option value=\"Active\">Actief</option>\n                                    <option value=\"Inactive\">Inactief</option>\n                                    <option value=\"Deleted\">Verwijderd</option>\n                                </select>\n                            </div> \n                            <div id='matches-container'>\n                                <h3>Overeenkomsten</h3>\n                                <div id='match-detail-resemblance-container'>\n                                    {matchResemblance(matches.Matches) && matchResemblance(matches.Matches).map(match => (\n                                        <div id='match-item-detail-inner-categorie-tag-container'>\n                                            <p>{match}</p>\n                                        </div>\n                                    ))}\n                                 </div>\n                            </div>\n                            <div id='step-outer-container'>\n                                <h3>Stappenplan</h3>\n                                {matchRoadmaps && matchRoadmaps.map(step => (\n                                    <div id='step-container'>\n                                        <p id='step-position-roadmap'>{step.Position}</p>\n                                        <div id='step-inner-container' style={{backgroundColor: step.BackgroundColor}}>\n                                            <img src={step.Icon} id='check-icon-roadmap' data-docid={step.docid} data-completed={step.Completed} onClick={taskCompleted}/>\n                                            <p id='step-title-roadmap'>{step.Title}</p>\n                                        </div>\n                                        <div id='step-user-container' style={{visibility: showStepUserPhoto(step)}}>\n                                            <img src={step.UserPhoto} data-id={step.UserID} alt=\"\" onClick={stepUserLink} />\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>  \n                            <div id='quality-container'>\n                                <h3>Kwaliteit</h3>\n                                <StarRating/>      \n                            </div>        \n                        </div>\n                    ))}\n                    <h2>Berichten</h2>\n                    <MessageBar/>\n                    <div className=\"reaction-area\">\n                    {messages && messages.map(message => ( \n                    <Reaction message={message}/>\n                    ))}\n                    </div>\n                </div>    \n            </div>\n            <RightSideBar />\n        </div>\n    )\n}\n\nexport default MatchDetail\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Matching/MatchProfileFields.jsx",["1346"],"import RightSideBar from \".././rightSideBar/RightSideBar\"\nimport LeftSideBarAuthProfile from \".././LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \".././LeftSideBarAuthProfileFullScreen\";\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport RegistrationField from '../../images/Design/RegistrationFields/textfield.png'\nimport RegistrationArea from '../../images/Design/RegistrationFields/textarea.png'\nimport { useState, useEffect, useContext } from \"react\";\nimport { Colors } from \"../../StateManagment/Colors\";\nimport { db, timestamp } from \"../../firebase/config\";\nimport uuid from 'react-uuid';\nimport { client } from \"../../hooks/Client\"\nimport {useFirestore } from \"../../firebase/useFirestore\"\nimport deleteIcon from '../../images/icons/delete-icon.png'\n\nconst MatchProfileFields = () => {\n    const [colors] = useContext(Colors)\n    const [title, setTitle] = useState(\"\")\n    const [type, setType] = useState('')\n    const [classType, setClassType] = useState('')\n\n    const menuState = MenuStatus()\n\n    const profileFields = useFirestore('MatchProfileFields')\n\n    const titleHandler = (e) => {\n        const title = e.target.value\n\n        setTitle(title)\n    }\n\n    const typeHandler = (e) => {\n        const type = e.target.dataset.type\n        const classType = e.target.dataset.classtype\n\n        setType(type)\n        setClassType(classType)\n    }\n\n    const addField = (e) => {\n\n        db.collection(\"MatchProfileFields\")\n        .doc()\n        .set({\n            Timestamp: timestamp,\n            ID: uuid(),\n            Compagny: client,\n            Type: type,\n            Title: title,\n            Class: classType,\n        })\n    }\n\n    const deleteField = (e) => {\n\n        const id = e.target.dataset.id\n\n        db.collection(\"MatchProfileFields\")\n        .doc(id)\n        .delete()\n    }\n\n\n    return (\n        <div className=\"main\" style={{backgroundColor:colors.Background}}>\n        <LeftSideBarAuthProfile />\n        <LeftSideBarAuthProfileFullScreen/>\n        <div className=\"profile profile-auth-profile\" style={{display: menuState}}>\n            <div className=\"card-header\">\n                <h1>Profielvelden</h1>\n                <p>Beheer de profielvelden van je match items</p>\n            </div>\n            <div className=\"divider\">\n                <h2>Profielvelden</h2>\n                {profileFields && profileFields.map(field => (\n                    <div className={field.Class}>\n                        <div>\n                            <h3>{field.Title}</h3>\n                            <p>{field.Type}</p>\n                        </div>\n                        <img onClick={deleteField} data-title={field.Title} data-id={field.docid} className=\"profile-settings-delete-icon\" src={deleteIcon} alt=\"\" />\n                    </div>\n                ))}\n            </div>\n            <div className='divider'>\n                <h2>Veld toevoegen</h2>\n                <h3>Geef het profielveld een titel</h3>\n                <input onChange={titleHandler} type=\"text\" placeholder=\"Geef je profielveld een titel\" />\n                <h3>Kies een veldsoort</h3>\n                <form>\n                    <div className='select-profiel-field-container'>\n                        <input type=\"radio\" id='input' name='add-profile-field' data-classtype='field-input-container' data-type={'Textfield'} onChange={typeHandler}/>\n                        <label htmlFor=\"input\">\n                            <div className=\"add-registration-field-container\">\n                                <p>Textveld</p>\n                                <img src={RegistrationField} alt=\"\" />\n                            </div>\n                        </label>\n                    </div>\n                    <div className='select-profiel-field-container'>\n                        <input type=\"radio\" id='textarea' name='add-profile-field' data-classtype='field-textarea-container' data-type={'Textarea'} onChange={typeHandler} />\n                        <label htmlFor=\"textarea\">\n                            <div className=\"add-registration-field-container\">\n                                <p data-type={\"textArea\"}>Textvak</p>\n                                <img data-type={\"textArea\"} src={RegistrationArea} alt=\"\" />\n                            </div>\n                        </label>\n                    </div>\n                </form>\n                {/* <div className=\"add-registration-field-container\" data-type={\"Radio\"} >\n                    <img className=\"drag-icon\" src={plusIcon} alt=\"\" />\n                    <p data-type={\"radio\"}>Meerkeuze knoppen</p>\n                    <img data-type={\"radio\"} src={RegistrationRadio} alt=\"\" />\n                </div> */}\n                <button className='button-simple' onClick={addField}>Toevoegen</button>  \n            </div>\n        </div>\n        <RightSideBar />\n    </div>\n    )\n}\n\nexport default MatchProfileFields\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Matching/MatchItemDetail.jsx",["1347","1348","1349","1350"],"import { useFirestoreID, useFirestoreMessages, useFirestore, useFirestoreMatches, useFirestoreMatchTagsType } from \"../../firebase/useFirestore\"\nimport { motion } from \"framer-motion\"\nimport MessageBar from \"../Community/MessageBar\"\nimport LeftSideBar from \"../LeftSideBar\"\nimport LeftSideBarFullScreen from \"../LeftSideBarFullScreen\"\nimport RightSideBar from \"../rightSideBar/RightSideBar\"\nimport { useHistory } from \"react-router-dom\"\nimport { client } from \"../../hooks/Client\"\nimport { useContext, useState, useEffect } from 'react';\nimport { Auth } from '../../StateManagment/Auth';\nimport Location from \"../../hooks/Location\"\nimport Reaction from \"../Community/Reaction\"\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport { db, timestamp } from \"../../firebase/config\"\nimport uuid from \"react-uuid\"\n\nconst MatchItemDetail = () => {\n    const [matchesOverview, setMatchesOverview] = useState('')\n\n    const route = Location()[3]\n    const menuState = MenuStatus()\n    const history = useHistory()\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n\n    const messages  = useFirestoreMessages(\"Messages\", route )\n    const matchItems = useFirestoreID('MatchItems', route)\n    const allItems = useFirestore('MatchItems')\n    const tags = useFirestore('MatchTags')\n    const matches = useFirestoreMatches(route)\n    const mainTags = useFirestoreMatchTagsType('Main')\n\n    // Display tags and categories\n\n    const ItemArray = []\n\n    matchItems && matchItems.forEach(item => {\n\n        const categorieArray = []\n\n        const tagArray = []\n\n        tags && tags.forEach(tag => {\n            const categorie = tag.Categorie\n\n            if(item.Tags.includes(tag.Tag)){\n\n                const tags = [\n                    categorie,\n                    tag.Tag\n                ]\n\n                tagArray.push(tags) \n            }\n        })\n\n        categorieArray.push(tagArray)\n\n        const ItemObject = {\n            Title: item.Title,\n            Banner: item.Banner,\n            Timestamp: item.Timestamp,\n            Categories: categorieArray,\n            ID: item.ID,\n            Fields: item.ProfileFields,\n            Tags: item.Tags\n        }\n\n        ItemArray.push(ItemObject)\n    })\n\n    // Display possible matches\n\n    const matchArray = []\n\n    allItems && allItems.forEach(item => {\n\n        if(item.ID !== route){\n\n            const matches = []\n\n            const itemObject = {\n                Title: item.Title,\n                Banner: item.Banner,\n                Timestamp: item.Timestamp,\n                Matches: matches,\n                ID: item.ID,\n                Tags: item.Tags\n            }\n\n            // Check for resemblance\n            matchItems && matchItems.forEach(matchItem => {\n\n                matchItem.Tags.forEach(matchItemTag => {\n                    if(item.Tags.includes(matchItemTag)){\n                        matches.push(matchItemTag)\n                    }\n                })\n                \n            })\n\n            if(matches.length > 0){\n                matchArray.push(itemObject)\n            }\n\n        }\n    })\n\n    const resemblance = (length) => {\n        if(length > 1){\n            return 'Overeenkomsten'\n        } else {\n            return 'Overeenkomst'\n        }\n    }\n\n    const itemLink = (e) => {\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/MatchItemDetail/${id}`)\n    }\n\n    const createMatch = (e) => {\n\n        e.target.innerText = 'Match is gecreeerd'\n        e.target.style.color = 'gray'\n\n        const matchID = e.target.dataset.id \n        const matches = e.target.dataset.matches\n\n        db.collection('Matches')\n        .doc()\n        .set({\n            ID: uuid(),\n            Compagny: client,\n            Timestamp: timestamp,\n            Matches: matches,\n            Status: 'Active',\n            Rating: 0,\n            Match: [\n                matchID,\n                route\n                ],\n        })\n\n    }\n\n    // Display matches\n\n    const matchedItems = async (id) => {\n\n        const matchArray = []\n\n        await db.collection('MatchItems')\n        .where('ID', '==', id)\n        .get()\n        .then(querySnapshot => {\n            querySnapshot.forEach(doc => {\n                const title = doc.data().Title\n                const banner = doc.data().Banner\n                const timestamp = doc.data().Timestamp\n                const id = doc.data().ID\n                const tags = doc.data().Tags\n\n                const matchObject = {\n                    Title: title,\n                    Banner: banner,\n                    Timestamp: timestamp,\n                    ID: id,\n                    Tags: tags\n                }\n\n                matchArray.push(matchObject)\n\n            })\n        })\n\n        return matchArray\n    }\n\n    const displayMatches = async () => {\n\n        let items = {}\n\n        for(const match of matches){\n\n            for(const id of match.Match){\n                if(id !== route){\n                    items.Match = await matchedItems(id) \n\n                    items.ID = match.ID\n                    items.Status = match.Status\n                    items.Rating = match.Rating\n                    items.Tags = match.Tags\n                }\n            }\n        }\n\n        return items\n\n    }\n\n    useEffect(() => {\n        displayMatches().then( match => {\n\n                setMatchesOverview(match)\n            \n        })\n    }, [matches])\n\n\n    const matchLink = (e) => {\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/MatchDetail/${id}`)\n    }\n\n    const Status = ({status}) => {\n\n        if(status === 'Active'){\n            return <div id=\"status-active\" className='match-detail-status-image'></div>\n        } else if(status === 'Inactive'){\n            return <div id=\"status-inactive\" className='match-detail-status-image'></div>\n        } else if(status === 'Deleted'){\n            return <div id=\"status-deleted\" className='match-detail-status-image'></div>\n        } \n    }\n\n    const StarRating = ({rating}) => {\n\n        const quality = rating -1\n\n        return (\n          <div className=\"star-rating\">\n            {[...Array(5)].map((star, index) => {\n              return (\n                <button\n                  type=\"button\"\n                  id='star-item'\n                  key={index}\n                  className={index <= (quality) ? \"on\" : \"off\"}\n                >\n                  <span className=\"star\">&#9733;</span>\n                </button>\n              );\n            })}\n          </div>\n        );\n      };\n      \n      const typeColor = (item) => {\n\n        let color = ''\n\n        console.log(item)\n\n        mainTags && mainTags.forEach(tag => {\n            const tagMain = tag.Tag\n\n            if(item.Tags.includes(tagMain)){\n                color = tag.Color\n            }\n        })\n\n        return color\n\n    }\n    \n    return (\n        <div className=\"main\">\n            <LeftSideBar />\n            <LeftSideBarFullScreen/>\n            <div className=\"card-overview goal-detail-container\" style={{display: menuState}}>\n                <div className=\"article-container\">\n                    {ItemArray && ItemArray.map(item => (\n                        <div className=\"article\">\n                            <h1>{item.Title}</h1>\n                            <img className=\"match-item-detail-banner\" src={item.Banner} alt=\"\" style={{border: `3px solid ${typeColor(item)}`}} />\n                            <div id='profile-fields-container'>\n                                <h3>Over mij</h3>\n                                {item.Fields.map(field => (\n                                    <div className='profile-field-inner-container'>\n                                        <p id='title-field'>{field.Title}</p>\n                                        <p>{field.Input}</p>\n                                    </div>\n                                ))}\n\n                            </div>\n                            <div id='tags-container'>\n                                <h3>Tags</h3>\n                                {item.Categories.map(tags => (\n                                    <div id=\"match-item-detail-categorie-tag-container\">\n                                    {tags && tags.map(tag => (\n                                        <div id=\"match-item-detail-inner-categorie-tag-container\">\n                                            <h5>{tag[0]}</h5>\n                                            <p>{tag[1]}</p>\n                                        </div>             \n                                    ))}\n                                    </div>    \n                                ))}\n                            </div>\n                            <div className='matches-container'>\n                                <h3>Mogelijke matches</h3>\n                                {matchArray && matchArray.map(match => (\n                                    <div className='match-detail-container'>\n                                        <img src={match.Banner} alt=\"\" data-id={match.ID} onClick={itemLink} style={{border: `3px solid ${typeColor(match)}`}}/>\n                                        <p id='match-detail-item-title' data-id={match.ID} onClick={itemLink}>{match.Title}</p>\n                                        <p>{match.Matches.length} {resemblance(match.Matches.length)}</p>\n                                        {match.Matches.map(m => (\n                                            <p><i>{m}</i></p>\n                                        ))}\n                                        <button className='button-simple' data-matches={match.Matches} data-id={match.ID} onClick={createMatch}>Creeer match</button>\n                                        \n                                    </div>\n                                ))}\n                            </div>\n                            <div className='matches-container'>\n                                <h3>Matches</h3>\n                                {matchesOverview.Match && matchesOverview.Match.map(match => (\n                                    <div className='match-detail-container'>\n                                        <img src={match.Banner} alt=\"\" data-id={matchesOverview.ID} onClick={matchLink} style={{border: `3px solid ${typeColor(match)}`}}/>\n                                        <p id='match-detail-item-title' data-id={matchesOverview.ID} onClick={matchLink}>{match.Title}</p>\n                                        <StarRating rating={matchesOverview.Rating}/> \n                                        <Status status={matchesOverview.Status}/>\n                                    </div>\n                                ))}\n\n                            </div>\n                            <div>\n                                <p>Aangemeld op <b>{item.Timestamp.toDate().toLocaleDateString(\"nl-NL\", options)}</b></p>\n                            </div>\n                        </div>\n                    ))}\n                    <h2>Berichten</h2>\n                    <MessageBar/>\n                    <div className=\"reaction-area\">\n                    {messages && messages.map(message => ( \n                    <Reaction message={message}/>\n                    ))}\n                    </div>\n                </div>\n            </div>\n            <RightSideBar />\n        </div>\n    )\n}\n\nexport default MatchItemDetail\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Matching/Matches.jsx",["1351","1352","1353"],"import {useFirestoreTimestamp, useFirestore, useFirestoreMatchTagsType} from \"../../firebase/useFirestore\"\nimport LeftSideBar from \"../LeftSideBar\"\nimport LeftSideBarFullScreen from \"../LeftSideBarFullScreen\"\nimport RightSideBar from \"../rightSideBar/RightSideBar\";\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport { client } from '../../hooks/Client';\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect, useState } from 'react'\nimport { db, timestamp } from \"../../firebase/config.js\"\nimport uuid from 'react-uuid';\n\nconst Matches = () => {\n\n    const [matchesOverview, setMatchesOverview] = useState('')\n\n    const menuState = MenuStatus()\n    const history = useHistory()\n\n    const matches = useFirestore('Matches')\n    const mainTags = useFirestoreMatchTagsType('Main')\n\n    const items = async (id) => {\n\n        const matchDuo = []\n\n        await db.collection('MatchItems')\n            .where('ID', '==', id)\n            .get()\n            .then(querySnapshot => {\n                querySnapshot.forEach(doc => {\n                    const title = doc.data().Title\n                    const banner = doc.data().Banner\n                    const timestamp = doc.data().Timestamp\n                    const id = doc.data().ID\n                    const tags = doc.data().Tags\n\n                    const matchObject = {\n                        Title: title,\n                        Banner: banner,\n                        Timestamp: timestamp,\n                        ID: id,\n                        Tags: tags\n                    }\n\n                    matchDuo.push(matchObject)\n\n                })\n            })\n\n            return matchDuo\n    }\n\n    const matchArray = async () => {\n\n        const matchesArray = []\n\n        for(const match of matches){\n\n            const matchList = []\n\n            matchList.ID = match.ID\n            matchList.Status = match.Status\n            matchList.Rating = match.Rating\n\n            for(const id of match.Match){\n\n                const itemList = await items(id)\n\n                matchList.push(itemList)\n\n            }\n\n            matchesArray.push(matchList)\n        }\n\n        return matchesArray\n    }\n\n    useEffect(() => {\n        matchArray().then(match => {\n            setMatchesOverview(match)\n        })\n    }, [matches])\n\n    const matchDetailLink = (e) => {\n\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/MatchDetail/${id}`)\n\n    }\n\n    const Status = ({status}) => {\n\n        if(status === 'Active'){\n            return <div id=\"status-active\"></div>\n        } else if(status === 'Inactive'){\n            return <div id=\"status-inactive\"></div>\n        } else if(status === 'Deleted'){\n            return <div id=\"status-deleted\"></div>\n        } \n    }\n\n    const StarRating = ({rating}) => {\n\n        const quality = rating -1 \n\n        return (\n          <div className=\"star-rating\">\n            {[...Array(5)].map((star, index) => {\n              return (\n                <button\n                  type=\"button\"\n                  id='star-item'\n                  key={index}\n                  className={index <= (quality) ? \"on\" : \"off\"}\n                >\n                  <span className=\"star\">&#9733;</span>\n                </button>\n              );\n            })}\n          </div>\n        );\n      };\n\n    const typeColor = (item) => {\n\n        let color = ''\n\n        console.log(item)\n\n        mainTags && mainTags.forEach(tag => {\n            const tagMain = tag.Tag\n\n            if(item.Tags.includes(tagMain)){\n                color = tag.Color\n            }\n        })\n\n        return color\n\n    }\n\n    return (\n        <div className=\"main\">\n            <LeftSideBar />\n            <LeftSideBarFullScreen/>\n            <div className=\"card-overview goal-detail-container\" style={{display: menuState}}>\n                <div className=\"page-header\">\n                    <h1>Matches</h1>\n                </div>\n                <div className=\"card-container\">\n                    {matchesOverview && matchesOverview.map(matches => (\n                        <div className=\"goal-list card\" key={uuid()}>\n                             <div id='matches-status-container'>\n                                <Status status={matches.Status}/>\n                            </div>\n                            {matches.map(match => (\n                                <>\n                                {match.map(item => (\n                                    <div className='matches-inner-container'>\n                                        <img className=\"match-card-banner\" src={item.Banner} alt=\"\" style={{border: `3px solid ${typeColor(item)}`}}/>\n                                        <div className=\"goalcard-body-div\">\n                                            <h2>{item.Title}</h2>\n                                        </div>\n                                    </div>\n                                ))}\n                                </>\n                            ))}\n                            <div id='matches-rating-container'>\n                                <StarRating rating={matches.Rating}/>\n                            </div>\n                            <div className=\"button-container\">\n                                <button className=\"goal-card-button\" data-id={matches.ID} onClick={matchDetailLink} >Bekijk</button>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <RightSideBar />\n        </div>\n    )\n}\n\nexport default Matches\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Matching/MatchItems.jsx",["1354","1355","1356","1357"],"import {useFirestoreTimestamp, useFirestore, useFirestoreMatchTagsType} from \"../../firebase/useFirestore\"\nimport LeftSideBar from \"../LeftSideBar\"\nimport LeftSideBarFullScreen from \"../LeftSideBarFullScreen\"\nimport RightSideBar from \"../rightSideBar/RightSideBar\";\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport { client } from '../../hooks/Client';\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect, useState } from 'react'\nimport { db, timestamp } from \"../../firebase/config.js\"\n\nconst MatchItems = () => {\n    const [filterTags, setFilterTags] = useState(null)\n    const [filter, setFilter] = useState([])\n    const [filteredItems, setFilteredItems] = useState([])\n    const [filteredTags, setFilteredTags] = useState([])\n    const [items, setItems] = useState()\n\n    const menuState = MenuStatus()\n    const history = useHistory()\n\n    const matchItems = useFirestoreTimestamp('MatchItems')\n    const categories = useFirestore('MatchCategories')\n    const tags = useFirestore('MatchTags')\n    const mainTags = useFirestoreMatchTagsType('Main')\n\n    const matchItemDetailLink = (e) => {\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/MatchItemDetail/${id}`)\n    }\n\n    // Get all items\n    const allItems = () => {\n\n        const filterArray = []\n\n        matchItems && matchItems.forEach(item => {\n\n            const filterObject = {\n                Title: item.Title,\n                Banner: item.Banner,\n                Categories: item.Categories,\n                ID: item.ID,\n                Tags: item.Tags,\n            }\n\n            filterArray.push(filterObject)\n\n        })\n\n        return filterArray\n\n    }\n\n    // Set all items to filtered array in state\n    useEffect(() => {\n\n        const filterArray = []\n\n        matchItems && matchItems.forEach(item => {\n\n            const filterObject = {\n                Title: item.Title,\n                Banner: item.Banner,\n                Categories: item.Categories,\n                ID: item.ID,\n                Tags: item.Tags,\n            }\n\n            filterArray.push(filterObject)\n\n        })\n\n        setItems(filterArray)\n\n    },[matchItems])\n\n    // Get user filter inputs\n    const filterTagHandler = (e) => {\n        const option = e.target.options\n\n        const tagSelected = option[option.selectedIndex].value\n        const categorie = e.target.dataset.categorie\n\n        if(tagSelected !== 'All'){\n            setFilteredTags([...filteredTags, tagSelected])\n            handleNewOptionInCategorie(categorie, tagSelected)\n        } else if(tagSelected === 'All'){\n            handleAllOption(categorie)\n        }\n    }\n\n    const handleNewOptionInCategorie = (categorie, tagSelected) => {\n        filterTags && filterTags[categorie].forEach((tag) => {\n            if(filteredTags.includes(tag.Tag) && tag.Tag !== tagSelected){\n                const index = filteredTags.indexOf(tag.Tag)\n                filteredTags.splice(index, 1)\n                setFilteredTags([...filteredTags, tagSelected])\n            }\n        })\n    }\n\n    const handleAllOption = (categorie) => {\n\n        filterTags && filterTags[categorie].forEach((tag) => {\n            const index = filteredTags.indexOf(tag.Tag)\n            if(index > -1){\n                filteredTags.splice(index, 1)\n                setFilteredTags([...filteredTags])\n            }\n        })\n    }\n\n    const filterButton = () => {\n        const newArray = []\n\n        allItems() && allItems().forEach(item => {\n           \n            if(filteredTags.every(tag => item.Tags.includes(tag))){\n                newArray.push(item)\n            }\n        })\n\n        setItems(newArray)\n    }\n    \n    // Set all tags in state\n    useEffect(() => {\n\n        // Get all tags and categories in an array\n        const tagArray = tags && tags.map(tag => {\n            return {Categorie: tag.Categorie,\n                    Tag: tag.Tag}\n        })\n\n        // Group the array by categorie\n        if (tagArray){\n            const groupBy = (tagArray, property) => {\n                return tagArray.reduce((acc, obj) => {\n                  let key = obj[property]\n                  if (!acc[key]) {\n                    acc[key] = []\n                  }\n                  acc[key].push(obj)\n                  return acc\n                }, {})\n              }\n\n            // Create array of grouped tags\n            const arrayOfSelectedTags = groupBy(tagArray, 'Categorie')\n\n            // Set state with filtertags\n            setFilterTags(arrayOfSelectedTags)\n        } \n\n    }, [tags])\n\n    // Create filter tags\n    const findTags = async (categorie) => {\n\n        const tags = []\n\n        await db.collection('MatchTags')\n        .where('Categorie', '==', categorie)\n        .get()\n        .then(querySnapshot => {\n            querySnapshot.forEach( async doc => {\n                const tag = doc.data().Tag\n\n                tags.push(tag)\n            })\n        })\n\n        return tags\n\n    }\n\n    const filters = async () => {\n\n        const categorieList = []\n\n        for(const categorie of categories){\n\n            const tagList = await findTags(categorie.Categorie)\n\n            const categorieObject = {\n                Categorie: categorie.Categorie,\n                Tags: tagList,\n                ID: categorie.ID\n            }\n\n            categorieList.push(categorieObject)\n        }\n        \n        return categorieList\n    }\n\n    useEffect(() => {\n        filters().then(filter => {\n            setFilter(filter)\n        })\n    }, [categories])\n\n    const typeColor = (item) => {\n\n        let color = ''\n\n        mainTags && mainTags.forEach(tag => {\n            const tagMain = tag.Tag\n\n            if(item.Tags && item.Tags.includes(tagMain)){\n                color = tag.Color\n            }\n        })\n\n        return color\n\n    }\n\n    return (\n        <div className=\"main\">\n            <LeftSideBar />\n            <LeftSideBarFullScreen/>\n            <div className=\"card-overview goal-detail-container\" style={{display: menuState}}>\n                <div className=\"page-header\">\n                    <h1>Match items</h1>\n                </div>\n                <div id='match-items-filter-container'>\n                    <div id=\"filter-select-container\">\n                       {filter && filter.map(filter => (\n                           <div id=\"filter-inner-container\" key={filter.ID}>\n                               <h3>{filter.Categorie}</h3>\n                               <select name=\"\" id=\"\" data-categorie={filter.Categorie} onChange={filterTagHandler}>\n                                   <option value=\"All\">-- Alle --</option>\n                                   {filter.Tags.map(tag => (\n                                       <option value={tag}>{tag}</option>\n                                   ))}\n                               </select>\n                           </div>\n                       ))}\n                       <button onClick={filterButton}>Filter</button>\n                    </div>\n                </div>\n                <div className=\"card-container\">\n                    {items && items.map(item => (\n                        <div className=\"goal-list card\" key={item.ID}>\n                            <img className=\"match-card-banner\" src={item.Banner && item.Banner} alt=\"\" style={{border: `3px solid ${typeColor(item)}`}} />\n                            <div className=\"goalcard-body-div\">\n                                <h2>{item.Title}</h2>\n                            </div>\n                            <div className=\"button-container\">\n                                <button className=\"goal-card-button\" data-id={item.ID} onClick={matchItemDetailLink} >Bekijk</button>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            \n            </div>\n            <RightSideBar />\n        </div>\n    )\n}\n\nexport default MatchItems\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Matching/AddMatchItem.jsx",["1358","1359","1360"],"import RightSideBar from \".././rightSideBar/RightSideBar\"\nimport LeftSideBarAuthProfile from \".././LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \".././LeftSideBarAuthProfileFullScreen\";\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { Colors } from \"../../StateManagment/Colors\";\nimport { db, timestamp } from \"../../firebase/config\";\nimport uuid from 'react-uuid';\nimport { client } from \"../../hooks/Client\"\nimport {useFirestore, useFirestoreMatchTagsType } from \"../../firebase/useFirestore\"\nimport deleteIcon from '../../images/icons/delete-icon.png'\nimport spinnerRipple from '../../images/spinner-ripple.svg'\nimport firebase from 'firebase'\nimport { bucket } from '../../firebase/config';\nimport { useHistory } from \"react-router-dom\";\n\nconst MatchCategories = () => {\n    const [colors] = useContext(Colors)\n    const [title, setTitle] = useState('')\n    const [bannerPhoto, setBannerPhoto] = useState(\"\")\n    const [loader, setLoader] = useState(\"\")\n    const [categorieSummary, setCategorieSummary] = useState([])\n    const [showBannerContainer, setShowBannerContainer] = useState('none')\n\n    const menuState = MenuStatus()\n    const history = useHistory()\n\n    const matchItems = useFirestore('MatchItems')\n    const matchProfileFields = useFirestore('MatchProfileFields')\n    const mainTags = useFirestoreMatchTagsType('Main')\n\n    const deleteMatchItem  = (e) => {\n\n        const id = e.target.dataset.id \n\n        db.collection('MatchItems')\n        .doc(id)\n        .delete()\n\n    }\n\n    const titleHandler = (e) => {\n        const title = e.target.value \n\n        setTitle(title)\n    }\n\n    const bannerHandler = (e) => {\n        setLoader(spinnerRipple)\n\n        const photo = e.target.files[0]\n\n        const storageRef = bucket.ref(\"/ProfilePhotos/\" + photo.name);\n        const uploadTask = storageRef.put(photo)\n\n        uploadTask.then(() => {\n          \n            uploadTask.on('state_changed', snapshot => {\n            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            switch (snapshot.state) {\n            case firebase.storage.TaskState.PAUSED:\n                console.log('Upload is paused');\n                break;\n            case firebase.storage.TaskState.RUNNING:\n                console.log('Upload is running');\n                break;\n            }\n            }, (err) => {\n                alert(err)\n            }, () => {\n            uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n            console.log('File available at', downloadURL);\n\n            setShowBannerContainer(true)\n            setBannerPhoto(downloadURL)\n            setLoader(downloadURL)\n\n                })\n            })\n        })\n    }\n\n    // Display categories and tags in relationship\n\n    const categories = useFirestore('MatchCategories')\n\n    const tags = async (categorieID) => {\n\n        const tagArray = []\n\n        await db.collection('MatchTags')\n        .where('CategorieID', '==', categorieID)\n        .get()\n        .then(querySnapshot => {\n            querySnapshot.forEach((doc) => {\n\n                const tag = doc.data().Tag\n                const categorie = doc.data().Categorie\n                const id = doc.id\n\n                const tagObject = {\n                    Name: tag,\n                    ID: id,\n                    Categorie: categorie\n                }\n\n                tagArray.push(tagObject)\n               \n                })\n            })\n\n        return tagArray\n\n    }\n\n    const categorieOverview = async () => {\n\n        const categorieList = []\n\n        for(const categorie of categories){\n\n            const categorieDetail = []\n\n            categorieDetail.push(categorie.Categorie)\n            categorieDetail.push(categorie.ID)\n\n            const tagList = await tags(categorie.ID)\n\n            categorieDetail.push(tagList)\n\n            categorieList.push(categorieDetail)\n\n        }\n\n        return categorieList\n\n    }\n\n    useEffect(() => {\n        categorieOverview().then((categorieList) => {\n            setCategorieSummary(categorieList)\n        })\n        \n    }, [categories])\n\n    // Select tags\n\n    const tagArray = []\n\n    const tagHandler = (e) => {\n\n        const tag = e.target.value\n\n        tagArray.push(tag)\n\n        findCorrespondingCategorie(tag)\n\n    }\n\n    // Get categories\n\n    const categorieArray = []\n\n    const findCorrespondingCategorie = (tag) => {\n\n        db.collection('MatchTags')\n        .where('Tag', '==', tag)\n        .get()\n        .then(querySnapshot => {\n            querySnapshot.forEach(doc => {\n                const categorie = doc.data().Categorie\n\n                // Check for doubles\n\n                if(categorieArray.includes(categorie)){\n                    return\n                } else {\n                    // Push to array\n                    categorieArray.push(categorie)\n                }\n\n            })\n        })\n    }\n\n    // Collect profilefield inputs\n\n    const fieldArray = []\n\n    const profileFieldHandler = (e) => {\n\n        const input = e.target.value \n        const title = e.target.dataset.title\n        const type = e.target.dataset.type\n\n        fieldArray.push({\n            Title: title,\n            Input: input,\n            Type: type\n        })\n    }\n\n    // Save new match item\n\n    const saveItem = (e) => {\n\n        e.target.style.color = 'lightgray'\n        e.target.innerText = 'Opgeslagen'\n\n        setTimeout(() => {\n            e.target.style.color = '#008000'\n            e.target.innerText = 'Opslaan'\n        }, 3000);\n\n        const id = uuid()\n\n        // Create seperate objects from titles in profile fields\n\n        function groupBy(objectArray, property) {\n            return objectArray.reduce((acc, obj) => {\n              let key = obj[property]\n              if (!acc[key]) {\n                acc[key] = []\n              }\n              acc[key].push(obj)\n              return acc\n            }, {})\n          }\n\n        // Create array from object\n\n        const array = Object.entries(groupBy(fieldArray, 'Title')) \n\n        // Find longest input in newly created array and pust in new array\n\n        const filteredArray = []\n\n        array.forEach(arr => {\n            const inputs = arr[1]\n            \n                const longest = inputs.reduce(\n                    (a, b) => {\n                        return a.length > b.length ? a : b\n                    }\n                );\n\n                filteredArray.push(longest)\n            })\n        \n        // Save new match item\n\n        db.collection('MatchItems')\n        .doc()\n        .set({\n            Title: title,\n            Timestamp: timestamp,\n            ID: id,\n            Banner: bannerPhoto,\n            Tags: tagArray,\n            Categories: categorieArray,\n            Compagny: client,\n            ProfileFields: filteredArray\n\n        })\n        .then(() => {\n            db.collection(\"Search\")\n            .doc()\n            .set({\n                Name: title,\n                Compagny: client,\n                Type: 'MatchItem',\n                Link: `MatchItemDetail/${id}`,\n                Tags: tagArray,\n                Categories: categorieArray,\n                Description: filteredArray\n            })\n        })\n        .then(() => {\n            window.location.reload(false);\n        })\n        \n    }\n\n    const matchItemDetailLink = (e) => {\n\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/MatchItemDetail/${id}`)\n\n    }\n\n    const MatchProfileFields = ({field}) => {\n\n            if(field.Type === 'Textfield'){\n                return (\n                    <div>\n                        <p>{field.Title}</p>\n                        <input type=\"text\" placeholder={field.Title} data-title={field.Title} data-type={field.Type} onChange={profileFieldHandler} />\n                    </div>\n                )\n            } else if(field.Type === 'Textarea'){\n                return (\n                    <div>\n                        <p>{field.Title}</p>\n                        <textarea placeholder={field.Title} data-title={field.Title} data-type={field.Type} onChange={profileFieldHandler}/>\n                    </div>\n                )\n            } else {\n                return null\n            }\n    }\n\n    const typeColor = (item) => {\n\n        let color = ''\n\n        mainTags && mainTags.forEach(tag => {\n            const tagMain = tag.Tag\n\n            if(item.Tags.includes(tagMain)){\n                color = tag.Color\n            }\n        })\n\n        return color\n\n    }\n    \n    return (\n        <div className=\"main\" style={{backgroundColor: colors.Background}}>\n            <LeftSideBarAuthProfile />\n            <LeftSideBarAuthProfileFullScreen/>\n            <div className=\"profile profile-auth-profile\" style={{display: menuState}}>\n                <div className=\"card-header\">\n                    <h1>Match items</h1>\n                    <p>Beheer de match items</p>\n                </div>\n                <div className='divider'>\n                    <h4>Match Items</h4>\n                    {matchItems && matchItems.map(item=> (\n                    <div className='categorie-container' key={item.ID}>\n                        <div className='match-item-inner-container'>\n                            <div className='match-item-inner-inner-container'>\n                                <img className='match-item-banner' src={item.Banner} alt=\"\" style={{border: `3px solid ${typeColor(item)}`}} />\n                                <p className='categorie-title'>{item.Title}</p>\n                            </div>\n                            <div className='match-item-inner-inner-container'>\n                                <button className='button-simple' data-id={item.ID} onClick={matchItemDetailLink}>Bekijk</button>\n                                <img src={deleteIcon} alt=\"\" data-id={item.docid} onClick={deleteMatchItem} />\n                            </div>\n                        </div>\n                    </div>\n                    ))}\n                </div>\n                <div className='divider'>\n                    <h4>Voeg een match item toe</h4>\n                    <p>Titel</p>\n                    <input type=\"text\" placeholder='Geef je matchitem een titel' onChange={titleHandler} />\n                    <p>Upload een banner</p>\n                    <input type=\"file\" onChange={bannerHandler}/>\n                    <div className=\"spinner-container\" style={{display:showBannerContainer}}>\n                        <img id='add-match-item-banner-preview' src={loader} alt=\"\" />\n                    </div> \n                    {matchProfileFields && matchProfileFields.map(field => (\n                        <MatchProfileFields field={field}/>\n                    ))}\n                    <p>Selecteer categorien en tags</p>\n                    {categorieSummary && categorieSummary.map(summary => (\n                    <div className='categorie-container'>\n                        <h4>{summary[0]}</h4>\n                        <div className='tag-container'>\n                            {summary[2] && summary[2].map(tag => (\n                                <div className='add-match-item-categorie-inner-container' key={tag.ID}>\n                                    <input className='add-match-item-categorie-input' type=\"checkbox\" data-categorie={tag.Categorie} id={tag.Name} value={tag.Name} onChange={tagHandler}/>\n                                    <label htmlFor={tag.Name}>{tag.Name}</label>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    ))}\n                    <div className='button-userrole-container'>\n                        <button className='button-simple' onClick={saveItem}>Opslaan</button>\n                    </div>\n                </div>\n            </div>\n            <RightSideBar />\n        </div>\n    )\n}\n\nexport default MatchCategories\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/hooks/Location.js",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/hooks/GetYearMonth.jsx",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Matching/MatchCategories.jsx",["1361","1362"],"import RightSideBar from \".././rightSideBar/RightSideBar\"\nimport LeftSideBarAuthProfile from \".././LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \".././LeftSideBarAuthProfileFullScreen\";\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { Colors } from \"../../StateManagment/Colors\";\nimport { db, timestamp } from \"../../firebase/config\";\nimport uuid from 'react-uuid';\nimport { client } from \"../../hooks/Client\"\nimport {useFirestore } from \"../../firebase/useFirestore\"\nimport deleteIcon from '../../images/icons/delete-icon.png'\n\nconst MatchCategories = () => {\n    const [colors] = useContext(Colors)\n    const [categorie, setCategorie] = useState('')\n    const [tag, setTag] = useState('')\n    const [categorieSummary, setCategorieSummary] = useState([])\n    const [type, setType] = useState('')\n\n    const menuState = MenuStatus()\n\n    const categories = useFirestore('MatchCategories')\n    const matchTags = useFirestore('MatchTags')\n\n    const tags = async (categorieID) => {\n\n        const tagArray = []\n\n        await db.collection('MatchTags')\n        .where('CategorieID', '==', categorieID)\n        .get()\n        .then(querySnapshot => {\n            querySnapshot.forEach((doc) => {\n\n                const tag = doc.data().Tag\n                const ID = doc.data().ID\n                const docid = doc.id\n                const color = doc.data().Color\n\n                const tagObject = {\n                    Name: tag,\n                    Docid: docid,\n                    ID: ID,\n                    Color: color\n                }\n\n                tagArray.push(tagObject)\n               \n                })\n            })\n\n        return tagArray\n\n    }\n\n    const categorieOverview = async () => {\n\n        const categorieList = []\n\n        for(const categorie of categories){\n\n            const categorieDetail = []\n\n            const tagList = await tags(categorie.ID)\n\n            const detailsObject = {\n                Categorie: categorie.Categorie,\n                ID: categorie.ID,\n                Docid: categorie.docid,\n                Tags: tagList,\n                Type: categorie.Type\n            }\n\n            categorieDetail.push(detailsObject)\n\n            categorieList.push(detailsObject)\n\n        }\n\n        return categorieList\n\n    }\n\n    useEffect(() => {\n        categorieOverview().then((categorieList) => {\n            setCategorieSummary(categorieList)\n        })\n        \n    }, [categories, matchTags])\n\n\n    const categorieHandler = (e) => {\n        const categorie = e.target.value\n\n        setCategorie(categorie)\n    }\n\n    const tagHandler = (e) => {\n        const tag = e.target.value\n\n        setTag(tag)\n    }\n\n    const saveCategorie = () => {\n\n        db.collection('MatchCategories')\n        .doc()\n        .set({\n            Categorie: categorie,\n            Timestamp: timestamp,\n            ID: uuid(),\n            Compagny: client,\n            Type: type\n        })\n    }\n\n    const saveTag = (e) => {\n\n        const categorie = e.target.dataset.categorie\n        const categorieID = e.target.dataset.categorieid\n        const type = e.target.dataset.type\n\n        db.collection('MatchTags')\n        .doc()\n        .set({\n            Tag: tag,\n            Categorie: categorie,\n            CategorieID: categorieID,\n            Timestamp: timestamp,\n            ID: uuid(),\n            Compagny: client,\n            Color: '#ffffff',\n            Type: type\n        })\n\n    }\n\n    const deleteCategorie = (e) => {\n        const id = e.target.dataset.id \n\n        console.log(id)\n\n        db.collection('MatchCategories')\n        .doc(id)\n        .delete()\n    }\n\n    const deleteTag = (e) => {\n        const id = e.target.dataset.id \n\n        db.collection('MatchTags')\n        .doc(id)\n        .delete()\n\n    }\n\n    const typeHandler = (e) => {\n        const option = e.target.options\n\n        const categorie = option[option.selectedIndex].value\n\n        setType(categorie)\n    }\n\n    \n    const ColorTagSelect = ({tag, summary}) => {\n        const [tagColor, setTagColor] = useState('')\n\n        useEffect(() => {\n            db.collection('MatchTags')\n            .doc(tag.Docid)\n            .get()\n            .then(doc => {\n                    const color = doc.data() && doc.data().Color \n\n                    setTagColor(color)\n            })\n        },[])\n\n        const tagColorHandler = (e) => {\n            const color = e.target.value \n    \n            setTagColor(color)\n        }\n\n        const saveTagColor = (e) => {\n\n            const docid = e.target.dataset.id \n    \n            console.log(docid)\n            console.log(tagColor)\n    \n            db.collection('MatchTags')\n            .doc(docid)\n            .update({\n                Color: tagColor\n            })\n        }\n\n        return (\n            <div className='select-tag-color-container' style={{display: summary.Type === 'Main' ? 'flex' : 'none'}}>\n                <p>Selecteer kleur</p>\n                <input type=\"color\" data-id={tag.Docid} defaultValue={tag.Color} value={tagColor}  className='main-categorie-tag-color' onChange={tagColorHandler} />\n                <button className='button-simple' data-id={tag.Docid} onClick={saveTagColor}>Opslaan</button>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"main\" style={{backgroundColor:colors.Background}}>\n            <LeftSideBarAuthProfile />\n            <LeftSideBarAuthProfileFullScreen/>\n            <div className=\"profile profile-auth-profile\" style={{display: menuState}}>\n                <div className=\"card-header\">\n                    <h1>Categorien en tags</h1>\n                    <p>Voeg categorien en tags toe om matches te maken</p>\n                </div>\n                <div className='divider'>\n                    <h4>Categorien</h4>\n                    {categorieSummary && categorieSummary.map(summary => (\n                    <div className={`categorie-container ${summary.Type}`} key={summary.ID}>\n                        <div className='categorie-inner-container'>\n                            <p className='categorie-title'>{summary.Categorie}</p>\n                            <img src={deleteIcon} alt=\"\" data-id={summary.Docid} onClick={deleteCategorie} />\n                        </div>\n                        <div className='tag-container'>\n                            <h4>Tags</h4>\n                            {summary.Tags && summary.Tags.map(tag => (\n                                <div className='categorie-inner-container' key={tag.ID} style={{borderLeft: `5px solid ${tag.Color}` }}>\n                                    <p>{tag.Name}</p>\n                                    <ColorTagSelect tag={tag} summary={summary}/>\n                                    <img src={deleteIcon} data-id={tag.Docid} alt=\"\" onClick={deleteTag} />\n                                </div>\n                            ))}\n                            <input type=\"text\" placeholder='Voeg tag toe' onChange={tagHandler} />\n                            <button className='button-simple' data-categorieid={summary.ID} data-categorie={summary.Categorie} data-type={summary.Type} onClick={saveTag}>Opslaan</button>\n                        </div>\n                    </div>\n                    ))}\n                </div>\n                <div className='divider'>\n                    <h4>Voeg een categorie toe</h4>\n                    <p>Categorie</p>\n                    <input type=\"text\" placeholder='Geef je categorie een naam' onChange={categorieHandler} />\n                    <p>Selecteer categorie type</p>\n                    <select name=\"\" id=\"\" onChange={typeHandler}>\n                        <option value=\"Filter\">Filter categorie</option>\n                        <option value=\"Main\">Hoofd categorie</option>\n                    </select>\n                    <div>\n                        <button className='button-simple' onClick={saveCategorie}>Opslaan</button>\n                    </div>\n                </div>\n            </div>\n            <RightSideBar />\n        </div>\n    )\n}\n\nexport default MatchCategories\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/rightSideBar/RightSideBar.js",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/LeftSideBarAuthProfileFullScreen.js",["1363","1364","1365","1366","1367","1368","1369","1370","1371","1372","1373","1374"],"import '../CSS/leftSideBar.css';\nimport { Link } from \"react-router-dom\";\nimport { client } from '../hooks/Client';\nimport ArrowLeftIcon from '../images/icons/arrow-left-icon.png'\nimport { Auth } from '../StateManagment/Auth';\nimport { useState , useEffect, useContext} from 'react';\nimport { db } from '../firebase/config';\nimport { MobileMenu } from '../StateManagment/MobileMenu';\nimport { useFirestore, useFirestoreSubscriptionsNotApproved } from \"../firebase/useFirestore\"\n\nconst LeftSideBarAuthProfile = () => {\n    const [authO] = useContext(Auth)\n    const [showNotification, setShowNotification] = useState(\"\")\n    const [menu, setMenu] = useContext(MobileMenu)\n    const [admin, setAdmin] = useState(false)\n    const [communityManager, setCommunityManager] = useState(false)\n    const [author, setAuthor] = useState(false)\n    const [impacteer, setImpacteer] = useState(false)\n    const [projectManager, setprojectManager] = useState(false)\n    const [matcher, setMatcher] = useState(false)\n    const [superAdmin, setSuperAdmin] = useState(false)\n    const [notificationsUsers, setNotificationsUsers] = useState(0)\n    const [notificationsGroups, setNotificationsGroups] = useState(0)\n    const [displayWelcome, setDisplayWelcome] = useState('')\n    const [displayImpact, setDisplayImpact] = useState('')\n    const [displayChannels, setDisplayChannels] = useState('')\n    const [displayGroups, setDisplayGroups] = useState('')\n    const [displayProjectManagement, setDisplayProjectManagement] = useState('')\n    const [displayMatches, setDisplayMatches] = useState('')\n\n    const admins = useFirestore('Admins')\n    const authors = useFirestore('Authors')\n    const impacteers = useFirestore('Impacteers')\n    const channels = useFirestore(\"Channels\")\n    const groupChannels = useFirestore(\"GroupChannels\")\n    const compagny = useFirestore(\"CompagnyMeta\")\n    const projectManagers = useFirestore('ProjectManagers')\n    const communityManagers = useFirestore('CommunityManagers')\n    const matchers = useFirestore('Matchers')\n    \n\n    useEffect(() => {\n        compagny && compagny.forEach(comp => {\n            setDisplayWelcome(comp.Welcome)\n            setDisplayImpact(comp.Impact)\n            setDisplayChannels(comp.Channels)\n            setDisplayGroups(comp.Groups)\n            setDisplayMatches(comp.Matches)\n            setDisplayProjectManagement(comp.ProjectManagement)\n        })\n    },[compagny])   \n\n    useEffect(() => {\n        admins && admins.forEach(admin => {\n            if(admin.UserID === authO.ID){\n                setAdmin(true)\n            }\n        })\n    }, [admins])\n\n    useEffect(() => {\n        communityManagers && communityManagers.forEach(communityManager => {\n            if(communityManager.UserID === authO.ID){\n                setCommunityManager(true)\n            }\n        })\n    }, [communityManagers])\n\n    useEffect(() => {\n        authors && authors.forEach(author => {\n            if(author.UserID === authO.ID){\n                setAuthor(true)\n            }\n        })\n    }, [authors])\n\n    useEffect(() => {\n        projectManagers && projectManagers.forEach(manager => {\n            if(manager.UserID === authO.ID){\n                setprojectManager('block')\n            }\n        })\n    }, [projectManagers])\n\n    useEffect(() => {\n        impacteers && impacteers.forEach(impacteer => {\n            if(impacteer.UserID === authO.ID){\n                setImpacteer(true)\n            }\n        })\n    }, [impacteers])\n\n    useEffect(() => {\n            if(authO.ID === '6a8bf-08c3-a1ad-d04d-231ebe51dc60'){\n                setSuperAdmin(true)\n            }\n    }, [admins])\n\n    useEffect(() => {\n        matchers && matchers.forEach(matcher => {\n            if(matcher.UserID === authO.ID){\n                setMatcher(true)\n            }\n        })\n    }, [matchers])\n\n    const Superadmin = () => {\n        if(superAdmin){\n            return <div>\n                        <h3>Super Admin</h3>\n                        <div className=\"channel-inner-div\">\n                            <Link to={`/${client}/NewClient`} onClick={changeMenuStatus}>Nieuwe klant</Link>\n                        </div>\n                    </div>\n        } else {\n            return null\n        }\n    }\n\n    const notificationsTotal = notificationsUsers + notificationsGroups\n\n    useEffect(() => {\n        const toggleNotofication = () => {\n            if(notificationsTotal > 0){\n                console.log('block')\n                setShowNotification(\"block\")\n            } else if (notificationsTotal === 0){\n                setShowNotification(\"none\")\n            }\n        }\n        toggleNotofication()\n    }, [])\n\n\n    const numberOfNotificationsUsers = async () => {\n\n        let notifications = null\n\n        await db.collection(\"Users\")\n        .where(\"Compagny\", \"array-contains\", client)\n        .where(\"Approved\", \"==\", false)\n        .get()\n        .then(querySnapshot => {\n            notifications = querySnapshot.docs.length\n        })\n\n        return notifications\n    }\n\n    useEffect(() => {\n        numberOfNotificationsUsers().then((number) => {\n            setNotificationsUsers(number)\n        })\n    }, [])\n\n    const numberOfNotificationsGroups = async () => {\n\n        let notifications = null\n\n        await db.collection(\"Subscriptions\")\n        .where(\"Compagny\", \"==\", client)\n        .where(\"Approved\", \"==\", false)\n        .get()\n        .then(querySnapshot => {\n            notifications = querySnapshot.docs.length\n        })\n\n        return notifications\n    }\n\n    useEffect(() => {\n        numberOfNotificationsGroups().then((number) => {\n            setNotificationsGroups(number)\n        })\n    }, [])\n\n    const changeMenuStatus = () => {\n        setMenu(\"none\")\n    }\n\n    const showImpact = () => {\n        if(displayImpact === true && admin === true && impacteer === true){\n            return 'block'\n        } else if (displayImpact === true && admin === true && impacteer === false){\n            return 'block'\n        } else if (displayImpact === true && admin === false && impacteer === false){\n            return 'none'\n        } else if (displayImpact === false && admin === false && impacteer === false){\n            return 'none'\n        } else if (displayImpact === false && admin === true && impacteer === true){\n            return 'none'\n        } else if (displayImpact === false && admin === true && impacteer === false){\n            return 'none'\n        } else if (displayImpact === false && admin === false && impacteer === true){\n            return 'none'\n        }\n    }\n\n    const showGroups = () => {\n        if(displayGroups === true){\n            return 'block'\n        } else if (displayGroups === false){\n            return 'none'\n        }\n    }\n\n    const showMatching = () => {\n        if(displayMatches === true){\n            return 'block'\n        } else if (displayMatches === false){\n            return 'none'\n        }\n    }\n\n    const showChannels = () => {\n        if(displayChannels === true){\n            return 'block'\n        } else if (displayChannels === false){\n            return 'none'\n        }\n    }\n\n    const showWelcome = () => {\n        if(displayWelcome === true){\n            return 'block'\n        } else if (displayWelcome === false){\n            return 'none'\n        }\n    }\n\n    const showCommunity = () => {\n        if(displayWelcome === true || displayChannels === true || displayGroups === true){\n            return 'block'\n        } else if (displayWelcome === false  && displayChannels === false && displayGroups === false){\n            return 'none'\n        }\n    }\n\n    const showProjectManagement = () => {\n        if(displayProjectManagement === true  && projectManager === 'block'){\n            return 'block'\n        } else if (displayProjectManagement === false  && projectManager=== 'block') {\n            return 'none'\n        } else if (displayProjectManagement === false  && projectManager === 'none') {\n            return 'none'\n        } else if (displayProjectManagement === false  && projectManager === false) {\n            return 'none'\n        }\n    }\n\n    const Admin = () => {\n        if(admin){\n            return <div>\n                        <h3>Admin</h3>\n                        <div className=\"channel-inner-div\">\n                            <Link to={`/${client}/Settings`} onClick={changeMenuStatus}>Algemeen</Link>\n                            <Link to={`/${client}/Analytics`} onClick={changeMenuStatus}>Analytics</Link>\n                            <Link to={`/${client}/ProfileSettings`} onClick={changeMenuStatus}>Profielen</Link>\n                            <Link to={`/${client}/Members`} onClick={changeMenuStatus}>Leden</Link>\n                            <Link to={`/${client}/UserRoles`} onClick={changeMenuStatus}>Gebruikersrollen</Link>\n                            <div className=\"notification-sidebar-container\">\n                                <Link to={`/${client}/Registrations`} onClick={changeMenuStatus}>Aanmeldingen</Link>\n                                <p style={{display: showNotification}} className=\"notification-counter-small\">{notificationsTotal}</p>\n                            </div>\n                            <Link to={`/${client}/ChannelSettings`} onClick={changeMenuStatus} style={{display: showChannels()}}>Kanalen</Link>\n                            <Link to={`/${client}/GroupSettings`} onClick={changeMenuStatus} style={{display: showGroups()}}>Groepen</Link>\n                            <Link to={`/${client}/WelcomeSettings`} onClick={changeMenuStatus} style={{display: showWelcome()}}>Welkom</Link>\n                        </div>\n                    </div>\n        } else {\n            return null\n        }\n    }\n\n    const CommunityManagers = () => {\n        if(communityManager || admin){\n            return <div>\n                        <h3 style={{display: showCommunity()}}>Community</h3>\n                        <div className=\"channel-inner-div\">\n                            <Link activeClassName='active' to={`/${client}/ChannelSettings`} style={{display: showChannels()}}>Kanalen</Link>\n                            <Link activeClassName='active' to={`/${client}/GroupSettings`} style={{display: showGroups()}}>Groepen</Link>\n                            <Link activeClassName='active' to={`/${client}/WelcomeSettings`} style={{display: showWelcome()}}>Welkom</Link>\n                        </div>\n                    </div>\n            } else {\n                return null\n            }\n        }\n\n    const Projectmanagement = () => {\n        if(projectManager || admin){\n            return <div style={{display: showProjectManagement()}}>\n                    <h3>Projectbeheer</h3>\n                    <div className=\"channel-inner-div\">\n                        <Link activeClassName='active' to={`/${client}/GoalSettings`} onClick={changeMenuStatus}>Doelen</Link>\n                        <Link activeClassName='active' to={`/${client}/ActivitySettings`} onClick={changeMenuStatus}>Activiteiten</Link>\n                        <Link activeClassName='active' to={`/${client}/TaskSettings`} onClick={changeMenuStatus}>Taken</Link>\n                    </div>\n                </div>\n        } else {\n            return null\n        }\n        \n    }\n\n    const Matching = () => {\n        if(matcher || admin){\n            return <div style={{display: showMatching()}}>\n                        <h3>Matching</h3>\n                        <div className=\"channel-inner-div\">\n                            <Link activeClassName='active' to={`/${client}/AddMatchItem`} onClick={changeMenuStatus}>Match items</Link>\n                            <Link activeClassName='active' to={`/${client}/MatchCategories`} onClick={changeMenuStatus}>Categorien en tags</Link>\n                            <Link activeClassName='active' to={`/${client}/MatchProfileFields`} onClick={changeMenuStatus}>Profielvelden</Link>\n                            <Link activeClassName='active' to={`/${client}/RoadMap`} onClick={changeMenuStatus}>Stappenplan</Link>\n                        </div>\n                    </div>\n        } else {\n            return null\n        }\n    }\n\n    const Impact = () => {\n        if(impacteer || admin){\n            return <div style={{display: showImpact()}}>\n                    <h3>Impact</h3>\n                    <div className=\"channel-inner-div\">\n                        <Link activeClassName='active' to={`/${client}/ImpactIndicators`} onClick={changeMenuStatus}>Meetinstrumenten</Link>\n                        <Link activeClassName='active' to={`/${client}/QuestionnaireSettings`} onClick={changeMenuStatus}>Vragenlijsten</Link>\n                        <Link activeClassName='active' to={`/${client}/Stakeholders`} onClick={changeMenuStatus}>Stakeholders</Link>\n                    </div>\n                </div>\n        } else {\n            return null\n        }\n        \n    }\n\n    const MyActivity = () => {\n        return  <div>\n                    <h3>Mijn activiteiten</h3>\n                    <div className=\"channel-inner-div\">\n                        <Link activeClassName='active' to={`/${client}/MyMessages/${authO.ID}`} onClick={changeMenuStatus}>Mijn berichten</Link>\n                        <Link activeClassName='active' to={`/${client}/Likes/${authO.ID}`} onClick={changeMenuStatus} style={{display: showCommunity()}}>Mijn likes</Link>\n                        <Link activeClassName='active' to={`/${client}/MyEvents/${authO.ID}`} onClick={changeMenuStatus} style={{display: showChannels()}}>Mijn events</Link>\n                    </div>\n                </div>\n    }\n\n    return (\n        <div className=\"left-sidebar-container-mobile\" style={{display: menu}}>\n            <div className=\"left-side-bar-full-screen\">\n                <div className=\"channel-div\">\n                    <Link to={`/${client}/AllActivity`} onClick={changeMenuStatus}>\n                        <div className=\"back-to-community-container\">\n                            <img src={ArrowLeftIcon} alt=\"\" />\n                            <p>Home</p>\n                        </div>\n                    </Link>\n                <Superadmin/>\n                    <Admin/>\n                    <CommunityManagers/>\n                    <Projectmanagement/>\n                    <Matching/>\n                    <Impact/>\n                    <h3>Mijn account</h3>\n                    <div className=\"channel-inner-div\">\n                        <Link to={`/${client}/Profile`} onClick={changeMenuStatus}>Account instellingen</Link>\n                        <Link to={`/${client}/AboutMe/${authO.ID}`} onClick={changeMenuStatus}>Over mij</Link>\n                        <Link to={`/${client}/Subscriptions/${authO.ID}`} onClick={changeMenuStatus} style={{display: showCommunity()}}>Lidmaatschappen en abonnementen</Link>\n                        <Link to={`/${client}/PublicProfile/${authO.ID}`} onClick={changeMenuStatus}>Openbaar profiel</Link>\n                    </div>\n                    <MyActivity/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LeftSideBarAuthProfile\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/LeftSideBarAuthProfile.js",["1375","1376","1377","1378","1379","1380","1381","1382","1383","1384","1385","1386"],"import '../CSS/leftSideBar.css';\nimport { NavLink } from \"react-router-dom\";\nimport { client } from '../hooks/Client';\nimport ArrowLeftIcon from '../images/icons/arrow-left-icon.png'\nimport { useContext, useEffect } from 'react';\nimport { Auth } from '../StateManagment/Auth';\nimport { useState } from 'react';\nimport { db } from '../firebase/config';\nimport {useFirestore} from \"../firebase/useFirestore\"\n\n\nconst LeftSideBarAuthProfile = () => {\n    const [authO] = useContext(Auth)\n    const [showNotification, setShowNotification] = useState(\"\")\n    const [admin, setAdmin] = useState(false)\n    const [author, setAuthor] = useState(false)\n    const [impacteer, setImpacteer] = useState(false)\n    const [projectManager, setprojectManager] = useState(false)\n    const [communityManager, setCommunityManager] = useState(false)\n    const [matcher, setMatcher] = useState(false)\n    const [superAdmin, setSuperAdmin] = useState(false)\n    const [notificationsUsers, setNotificationsUsers] = useState(0)\n    const [notificationsGroups, setNotificationsGroups] = useState(0)\n    const [displayWelcome, setDisplayWelcome] = useState('')\n    const [displayImpact, setDisplayImpact] = useState('')\n    const [displayChannels, setDisplayChannels] = useState('')\n    const [displayGroups, setDisplayGroups] = useState('')\n    const [displayMatches, setDisplayMatches] = useState('')\n    const [displayProjectManagement, setDisplayProjectManagement] = useState('')\n\n    const admins = useFirestore('Admins')\n    const authors = useFirestore('Authors')\n    const impacteers = useFirestore('Impacteers')\n    const channels = useFirestore(\"Channels\")\n    const groupChannels = useFirestore(\"GroupChannels\")\n    const compagny = useFirestore(\"CompagnyMeta\")\n    const projectManagers = useFirestore('ProjectManagers')\n    const communityManagers = useFirestore('CommunityManagers')\n    const matchers = useFirestore('Matchers')\n\n    useEffect(() => {\n        compagny && compagny.forEach(comp => {\n            setDisplayWelcome(comp.Welcome)\n            setDisplayImpact(comp.Impact)\n            setDisplayChannels(comp.Channels)\n            setDisplayGroups(comp.Groups)\n            setDisplayMatches(comp.Matches)\n            setDisplayProjectManagement(comp.ProjectManagement)\n        })\n    },[compagny])\n\n    useEffect(() => {\n        admins && admins.forEach(admin => {\n            if(admin.UserID === authO.ID){\n                setAdmin(true)\n            }\n        })\n    }, [admins])\n\n    useEffect(() => {\n        authors && authors.forEach(author => {\n            if(author.UserID === authO.ID){\n                setAuthor(true)\n            }\n        })\n    }, [authors])\n\n    useEffect(() => {\n        communityManagers && communityManagers.forEach(communityManager => {\n            if(communityManager.UserID === authO.ID){\n                setCommunityManager(true)\n            }\n        })\n    }, [communityManagers])\n\n    useEffect(() => {\n        projectManagers && projectManagers.forEach(manager => {\n            if(manager.UserID === authO.ID){\n                setprojectManager('block')\n            }\n        })\n    }, [projectManagers])\n\n    useEffect(() => {\n        impacteers && impacteers.forEach(impacteer => {\n            if(impacteer.UserID === authO.ID){\n                setImpacteer(true)\n            }\n        })\n    }, [impacteers])\n\n    useEffect(() => {\n        matchers && matchers.forEach(matcher => {\n            if(matcher.UserID === authO.ID){\n                console.log('true')\n                setMatcher(true)\n            }\n        })\n    }, [matchers])\n\n    useEffect(() => {\n            if(authO.ID === '6a8bf-08c3-a1ad-d04d-231ebe51dc60'){\n                setSuperAdmin(true)\n            }\n    }, [admins])\n\n    const showImpact = () => {\n        if(displayImpact === true && admin === true && impacteer === true){\n            return 'block'\n        } else if (displayImpact === true && admin === true && impacteer === false){\n            return 'block'\n        } else if (displayImpact === true && admin === false && impacteer === false){\n            return 'none'\n        } else if (displayImpact === false && admin === false && impacteer === false){\n            return 'none'\n        } else if (displayImpact === false && admin === true && impacteer === true){\n            return 'none'\n        } else if (displayImpact === false && admin === true && impacteer === false){\n            return 'none'\n        } else if (displayImpact === false && admin === false && impacteer === true){\n            return 'none'\n        }\n    }\n\n    const showGroups = () => {\n        if(displayGroups === true){\n            return 'block'\n        } else if (displayGroups === false){\n            return 'none'\n        }\n    }\n\n    const showChannels = () => {\n        if(displayChannels === true){\n            return 'block'\n        } else if (displayChannels === false){\n            return 'none'\n        }\n    }\n\n    const showWelcome = () => {\n        if(displayWelcome === true){\n            return 'block'\n        } else if (displayWelcome === false){\n            return 'none'\n        }\n    }\n\n    const showCommunity = () => {\n        if(displayWelcome === true || displayChannels === true || displayGroups === true){\n            return 'block'\n        } else if (displayWelcome === false  && displayChannels === false && displayGroups === false){\n            return 'none'\n        }\n    }\n\n    const showProjectManagement = () => {\n        if(displayProjectManagement === true  && projectManager === 'block'){\n            return 'block'\n        } else if (displayProjectManagement === false  && projectManager=== 'block') {\n            return 'none'\n        } else if (displayProjectManagement === false  && projectManager === 'none') {\n            return 'none'\n        } else if (displayProjectManagement === false  && projectManager === false) {\n            return 'none'\n        }\n    }\n\n    const showMatching = () => {\n        if(displayMatches === true){\n            return 'block'\n        } else if (displayMatches === false){\n            return 'none'\n        }\n    }\n\n    const Superadmin = () => {\n        if(superAdmin){\n            return <div>\n                        <h3>Super Admin</h3>\n                        <div className=\"channel-inner-div\">\n                            <NavLink to={`/${client}/NewClient`}>Nieuwe klant</NavLink>\n                        </div>\n                    </div>\n        } else {\n            return null\n        }\n    }\n\n    let notificationsTotal = notificationsUsers + notificationsGroups\n\n    useEffect(() => {\n        const toggleNotofication = () => {\n            if(notificationsTotal > 0){\n                setShowNotification(\"flex\")\n            } else if (notificationsTotal === 0){\n                setShowNotification(\"none\")\n            }\n        }\n        toggleNotofication()\n    }, [])\n\n    const numberOfNotificationsUsers = async () => {\n\n        let notifications = null\n\n        await db.collection(\"Users\")\n        .where(\"Compagny\", \"array-contains\", client)\n        .where(\"Approved\", \"==\", false)\n        .get()\n        .then(querySnapshot => {\n            notifications = querySnapshot.docs.length\n        })\n\n        return notifications\n    }\n\n    useEffect(() => {\n        numberOfNotificationsUsers().then((number) => {\n            setNotificationsUsers(number)\n        })\n    }, [])\n\n    const numberOfNotificationsGroups = async () => {\n\n        let notifications = null\n\n        await db.collection(\"Subscriptions\")\n        .where(\"Compagny\", \"==\", client)\n        .where(\"Approved\", \"==\", false)\n        .get()\n        .then(querySnapshot => {\n            notifications = querySnapshot.docs.length\n        })\n\n        return notifications\n    }\n\n    useEffect(() => {\n        numberOfNotificationsGroups().then((number) => {\n            // setNotificationsUsers(notificationsUsers + number)\n        })\n    }, [])\n\n    const Admin = () => {\n        if(admin){\n            return <div>\n                        <h3>Admin</h3>\n                        <div className=\"channel-inner-div\">\n                            <NavLink activeClassName='active' to={`/${client}/Settings`}>Algemeen</NavLink>\n                            <NavLink activeClassName='active' to={`/${client}/Analytics`}>Analytics</NavLink>\n                            <NavLink activeClassName='active' to={`/${client}/ProfileSettings`}>Profielen</NavLink>\n                            <NavLink activeClassName='active' to={`/${client}/Members`}>Leden</NavLink>\n                            <NavLink activeClassName='active' to={`/${client}/UserRoles`}>Gebruikersrollen</NavLink>\n                            <div className=\"notification-sidebar-container\">\n                                <NavLink activeClassName='active' to={`/${client}/Registrations`}>Aanmeldingen</NavLink>\n                                <p style={{display: showNotification}} className=\"notification-counter-small\">{notificationsUsers}</p>\n                            </div>\n                        </div>\n                    </div>\n        } else {\n            return null\n        }\n    }\n\n    const CommunityManagers = () => {\n        if(communityManager || admin){\n            return <div>\n                        <h3 style={{display: showCommunity()}}>Community</h3>\n                        <div className=\"channel-inner-div\">\n                            <NavLink activeClassName='active' to={`/${client}/ChannelSettings`} style={{display: showChannels()}}>Kanalen</NavLink>\n                            <NavLink activeClassName='active' to={`/${client}/GroupSettings`} style={{display: showGroups()}}>Groepen</NavLink>\n                            <NavLink activeClassName='active' to={`/${client}/WelcomeSettings`} style={{display: showWelcome()}}>Welkom</NavLink>\n                        </div>\n                    </div>\n            } else {\n            return null\n            }\n        }\n\n    const Projectmanagement = () => {\n        if(projectManager || admin){\n            return <div style={{display: showProjectManagement()}}>\n                        <h3>Projectbeheer</h3>\n                        <div className=\"channel-inner-div\">\n                            <NavLink activeClassName='active' to={`/${client}/GoalSettings`}>Doelen</NavLink>\n                            <NavLink activeClassName='active' to={`/${client}/ActivitySettings`}>Activiteiten</NavLink>\n                            <NavLink activeClassName='active' to={`/${client}/TaskSettings`}>Taken</NavLink>\n                        </div>\n                    </div>\n        } else {\n            return null\n        }  \n    }\n\n    const Matching = () => {\n        if(matcher || admin){\n            return <div style={{display: showMatching()}}>\n                        <h3>Matching</h3>\n                        <div className=\"channel-inner-div\">\n                            <NavLink activeClassName='active' to={`/${client}/AddMatchItem`}>Match items</NavLink>\n                            <NavLink activeClassName='active' to={`/${client}/MatchCategories`}>Categorien en tags</NavLink>\n                            <NavLink activeClassName='active' to={`/${client}/MatchProfileFields`}>Profielvelden</NavLink>\n                            <NavLink activeClassName='active' to={`/${client}/RoadMap`}>Stappenplan</NavLink>\n                        </div>\n                    </div>\n        } else {\n            return null\n        }\n    }\n\n    const Impact = () => {\n        if(impacteer || admin){\n            return <div style={{display: showImpact()}}>\n                    <h3>Impact</h3>\n                    <div className=\"channel-inner-div\">\n                        <NavLink activeClassName='active' to={`/${client}/ImpactIndicators`}>Meetinstrumenten</NavLink>\n                        <NavLink activeClassName='active' to={`/${client}/QuestionnaireSettings`}>Vragenlijsten</NavLink>\n                        <NavLink activeClassName='active' to={`/${client}/Stakeholders`}>Stakeholders</NavLink>\n                    </div>\n                </div>\n        } else {\n            return null\n        } \n    }\n\n    const MyActivity = () => {\n        return  <div>\n                    <h3>Mijn activiteiten</h3>\n                    <div className=\"channel-inner-div\">\n                        <NavLink activeClassName='active' to={`/${client}/MyMessages/${authO.ID}`}>Mijn berichten</NavLink>\n                        <NavLink activeClassName='active' to={`/${client}/Likes/${authO.ID}`}>Mijn likes</NavLink>\n                        <NavLink activeClassName='active' to={`/${client}/MyEvents/${authO.ID}`}>Mijn events</NavLink>\n                    </div>\n                </div>\n    }\n\n    return (\n        <div className=\"left-side-bar-container\">\n            <div className=\"left-side-bar\">\n                <div className=\"channel-div\">\n                    <NavLink activeClassName='active' to={`/${client}/AllActivity`}>\n                        <div className=\"back-to-community-container\">\n                            <img src={ArrowLeftIcon} alt=\"\" />\n                            <p>Home</p>\n                        </div>\n                    </NavLink>\n                <Superadmin/>\n                    <Admin/>\n                    <CommunityManagers/>\n                    <Projectmanagement/>\n                    <Matching/>\n                    <Impact/>\n                    <h3>Mijn account</h3>\n                    <div className=\"channel-inner-div\">\n                        <NavLink activeClassName='active' to={`/${client}/Profile`}>Account instellingen</NavLink>\n                        <NavLink activeClassName='active' to={`/${client}/AboutMe/${authO.ID}`}>Over mij</NavLink>\n                        <NavLink activeClassName='active' to={`/${client}/Subscriptions/${authO.ID}`}>Lidmaatschappen en abonnementen</NavLink>\n                        <NavLink activeClassName='active' to={`/${client}/PublicProfile/${authO.ID}`}>Openbaar profiel</NavLink>\n                    </div>\n                    <MyActivity/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LeftSideBarAuthProfile\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/hooks/MenuStatus.jsx",["1387"],"import { MobileMenu } from '../StateManagment/MobileMenu';\nimport { useContext } from 'react';\n\nconst MenuStatus = () => {\n    const [menu, setMenu] = useContext(MobileMenu)\n\n    if(menu === \"flex\"){\n        return \"none\"\n    } else if (menu === \"none\"){\n        return \"flex\"\n    }\n}\n\nexport default MenuStatus\n\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/hooks/ButtonClicked.jsx",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Calender.jsx",["1388"],"import dayjs from 'dayjs'\nimport { useState, useEffect } from 'react'\nimport rightArrow from '../images/icons/right-arrow-icon.png'\nimport leftArrow from '../images/icons/left-arrow-icon.png'\nimport { useHistory } from \"react-router-dom\"\nimport { client } from '../hooks/Client';\n\nconst Calendar = ({events}) => {\n\n    const [monthIndex, setMonthIndex] = useState(dayjs().month())\n\n    const history = useHistory()\n    const locale = {\n        name: 'nl',\n        weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n        weekdaysShort: 'zo_ma_di_wo_do_vr_za'.split('_'),\n        weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n        months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n        monthsShort: 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        ordinal: n => `${n}.`,\n        weekStart: 1,\n        yearStart: 4,\n        formats: {\n          LT: 'HH:mm',\n          LTS: 'HH:mm:ss',\n          L: 'DD-MM-YYYY',\n          LL: 'D MMMM YYYY',\n          LLL: 'D MMMM YYYY HH:mm',\n          LLLL: 'dddd D MMMM YYYY HH:mm'\n        },\n        relativeTime: {\n          future: 'over %s',\n          past: '%s geleden',\n          s: 'een paar seconden',\n          m: 'een minuut',\n          mm: '%d minuten',\n          h: 'een uur',\n          hh: '%d uur',\n          d: 'een dag',\n          dd: '%d dagen',\n          M: 'een maand',\n          MM: '%d maanden',\n          y: 'een jaar',\n          yy: '%d jaar'\n        }\n      }\n\n     const getMonth = () => {\n        const year = dayjs().year()\n        const firstDayofTheMonth = dayjs(new Date(year, monthIndex, 0)).day()\n        let currentDayCount = 0 - firstDayofTheMonth\n        const daysMatrix = new Array(5).fill([]).map(() => {\n            return new Array(7).fill(null).map(() => {\n                currentDayCount++\n                return dayjs(new Date(year, monthIndex, currentDayCount))\n            })\n        })\n        return daysMatrix\n    }\n\n    const [currentMonth, setCurrentMonth] = useState(getMonth())\n\n    useEffect(() => {\n        setCurrentMonth(getMonth())\n    }, [monthIndex])\n\n\n    const currentDayClass = (day) => {\n        return day.format('DD-MM-YY') === dayjs().format('DD-MM-YY') ? 'current-day' : ''\n\n    }\n\n    const currentMonthHandler = () => {\n        setMonthIndex(dayjs().month())\n    }\n\n    const prevMonthHandler = () => {\n        setMonthIndex(monthIndex -1)\n    }\n\n    const nextMonthHandler = () => {\n        setMonthIndex(monthIndex +1)\n    }\n\n    const eventLink = (e) => {\n        const id = e.target.dataset.id\n        const type = e.target.dataset.type \n\n        if(type === 'Event'){\n            history.push(`/${client}/EventDetail/${id}`)\n        } else if (type === 'Task'){\n            history.push(`/${client}/TaskDetail/${id}`)\n        }\n\n    }\n\n        const event = (day, vnt) => {\n\n                if(day.format('YYYY-MM-DD') === vnt.Date){\n                    return(\n                    <div key={vnt.ID}>\n                        <p className='calendar-event-container' data-id={vnt.ID} data-type={vnt.Type} onClick={eventLink}>{vnt.Title}</p>\n                    </div>\n                    )\n                } else {\n                    return <div></div>\n                }\n        }\n\n    return (\n        <div className='calender-container'>\n           <>\n            <div className='calendar-navigation-container'>\n                <button onClick={currentMonthHandler}>Vandaag</button>\n                <h3>{dayjs(new Date(dayjs().year(), monthIndex)).format('MMMM YYYY')}</h3>\n                <div className='calendar-navigation-next-prev-container'>\n                    <img src={leftArrow} alt=\"\" onClick={prevMonthHandler} />\n                    <img src={rightArrow} alt=\"\" onClick={nextMonthHandler}/>\n                </div>\n            </div>\n                {currentMonth.map((week, index) => (\n                    <div className='month-container' key={index}>\n                        {week.map((day, idx) => (\n                            <div className='day-container' key={idx}>\n                                {index === 0 && <p className='calendar-weekdays'>{day.locale(locale, null, true).format('ddd').toUpperCase()}</p>}\n                                <p className={`${currentDayClass(day)}`}>{day.format('DD')}</p>\n                                <div>\n                                {events && events.map(vnt => (\n                                    <div>\n                                        {event(day, vnt)}\n                                    </div>\n                                ))}\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                ))}\n            </>\n        </div>\n    )\n}\n\nexport default Calendar\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/LeftSideBar.js",["1389","1390","1391","1392"],"import '../CSS/leftSideBar.css';\nimport { NavLink, Link } from \"react-router-dom\";\nimport { client } from '../hooks/Client';\nimport { useFirestore } from '../firebase/useFirestore';\nimport { useState , useEffect, useContext} from 'react';\nimport { Auth } from '../StateManagment/Auth';\n\nconst LeftSideBar = () => {\n    const [authO] = useContext(Auth)\n\n    const [impacteer, setImpacteer] = useState('none')\n    const [projectManager, setprojectManager] = useState('none')\n    const [displayWelcome, setDisplayWelcome] = useState('')\n    const [displayProjectManagement, setDisplayProjectManagement] = useState('')\n    const [displayImpact, setDisplayImpact] = useState('')\n    const [displayChannels, setDisplayChannels] = useState('')\n    const [displayGroups, setDisplayGroups] = useState('')\n    const [displayMatches, setDisplayMatches] = useState('')\n\n    const groups = useFirestore(\"Groups\")\n    const channels = useFirestore(\"Channels\")\n    const impacteers = useFirestore('Impacteers')\n    const admins = useFirestore('Admins')\n    const projectManagers = useFirestore('ProjectManagers')\n    const compagny = useFirestore(\"CompagnyMeta\")\n\n    useEffect(() => {\n        compagny && compagny.forEach(comp => {\n            setDisplayWelcome(comp.Welcome)\n            setDisplayProjectManagement(comp.ProjectManagement)\n            setDisplayImpact(comp.Impact)\n            setDisplayChannels(comp.Channels)\n            setDisplayGroups(comp.Groups)\n            setDisplayMatches(comp.Matches)\n        })\n    },[compagny])\n\n    useEffect(() => {\n        impacteers && impacteers.forEach(impacteer => {\n            if(impacteer.UserID === authO.ID){\n                setImpacteer('block')\n            }\n        })\n    }, [impacteers])\n\n    useEffect(() => {\n        projectManagers && projectManagers.forEach(manager => {\n            if(manager.UserID === authO.ID){\n                setprojectManager('block')\n            }\n        })\n    }, [projectManagers])\n\n    useEffect(() => {\n        admins && admins.forEach(admin => {\n            if(admin.UserID === authO.ID){\n                setImpacteer('block')\n            }\n        })\n    }, [admins])\n\n    const showProjectManagement = () => {\n        if(displayProjectManagement === true  && projectManager === 'block'){\n            return 'block'\n        } else if (displayProjectManagement === false  && projectManager=== 'block') {\n            return 'none'\n        } else if (displayProjectManagement === false  && projectManager === 'none') {\n            return 'none'\n        }\n    }\n\n    const showImpact = () => {\n        if(displayImpact === true  && impacteer === 'block'){\n            return 'block'\n        } else if (displayImpact === false  && impacteer === 'block') {\n            return 'none'\n        } else if (displayImpact === false  && impacteer === 'none') {\n            return 'none'\n        }\n    }\n\n    const showWelcome = () => {\n        if(displayWelcome === true){\n            return 'block'\n        } else if (displayWelcome === false ) {\n            return 'none'\n        }\n    }\n\n    const showGroups = () => {\n        if(displayGroups === true){\n            return 'block'\n        } else if (displayGroups === false ) {\n            return 'none'\n        }\n    }\n\n    const showChannels = () => {\n        if(displayChannels === true){\n            return 'block'\n        } else if (displayChannels === false ) {\n            return 'none'\n        }\n    }\n\n    const showMatches = () => {\n        if(displayMatches === true){\n            return 'block'\n        } else if (displayMatches === false ) {\n            return 'none'\n        }\n    }\n\n    return (\n        <div className=\"left-sidebar-container\">\n            <div className=\"left-side-bar\">\n                <div className=\"channel-div\" style={{display: showWelcome()}}>\n                    <h3>Welkom</h3>\n                    <div className=\"channel-inner-div\">\n                        <NavLink activeClassName='active' to={`/${client}/Start`} >Start hier</NavLink>\n                        <NavLink activeClassName='active' to={`/${client}/Introductions`} >Stel je voor</NavLink>\n                        <NavLink activeClassName='active' to={`/${client}/AllActivity`} >Alle activiteit</NavLink>\n                    </div>\n                </div>\n                <div className=\"channel-div\" style={{display: showChannels()}}>\n                    <div className=\"nav-title-container\">\n                        <h3>Kanalen</h3>\n                    </div>\n                    {channels && channels.map(channel => (\n                        <div className=\"channel-inner-div\" key={channel.ID}>\n                            <NavLink activeClassName='active' to={`/${client}/${channel.Link}/${channel.ID}`}>{channel.Name}</NavLink>\n                        </div>\n                    ))}\n                </div>\n                <div className=\"channel-div\" style={{display: showGroups()}}>\n                    <div className=\"nav-title-container\">\n                        <h3>Groepen</h3>\n                    </div>\n                    {groups && groups.map(group => (\n                        <div className=\"channel-inner-div\" key={group.ID}>\n                            <NavLink activeClassName='active' to={`/${client}/GroupLanding/${group.ID}`}>{group.Room}</NavLink>\n                        </div>\n                    ))}\n                </div>\n                <div className=\"channel-div\" style={{display: showProjectManagement()}}>\n                    <div className=\"nav-title-container\">\n                        <h3>Projectbeheer</h3>\n                    </div>\n                    <div className=\"channel-inner-div\">\n                        <NavLink activeClassName='active' to={`/${client}/Goals`}>Doelen</NavLink>\n                    </div>\n                    <div className=\"channel-inner-div\">\n                        <NavLink activeClassName='active' to={`/${client}/Activities`}>Activiteiten</NavLink>\n                    </div>\n                    <div className=\"channel-inner-div\">\n                        <NavLink activeClassName='active' to={`/${client}/Tasks/${authO.ID}`}>Taken</NavLink>\n                    </div>\n                </div>\n                <div className=\"channel-div\" style={{display: showMatches()}}>\n                    <div className=\"nav-title-container\">\n                        <h3>Matching</h3>\n                    </div>\n                    <div className=\"channel-inner-div\">\n                        <NavLink activeClassName='active' to={`/${client}/MatchItems`}>Match items</NavLink>\n                    </div>\n                    <div className=\"channel-inner-div\">\n                        <NavLink activeClassName='active' to={`/${client}/Matches`}>Matches</NavLink>\n                    </div>\n                </div>\n                <div className=\"channel-div\" style={{display: showImpact()}}>\n                    <div className=\"nav-title-container\">\n                        <h3>Impact</h3>\n                    </div>\n                    <div className=\"channel-inner-div\">\n                        <NavLink activeClassName='active' to={`/${client}/ImpactProgress`}>Dashboard</NavLink>\n                    </div>\n                    {/* <div className=\"channel-inner-div\">\n                        <NavLink activeClassName='active' to={`/${client}/Activities`}>Mijlpalen</NavLink>\n                    </div> */}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LeftSideBar\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/allActivity/ActivityCard.js",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/rightSideBar/RightSideBarGroup.js",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/hooks/GetLink.jsx",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/rightSideBar/AllMembers.js",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Impact/QuestionnaireSettings.jsx",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Impact/SendQuestionnaire.jsx",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Impact/ImpactIndicators.jsx",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Impact/ImpactProgress.jsx",["1393","1394"],"import LeftSideBar from \"../LeftSideBar\";\nimport LeftSideBarFullScreen from \"../LeftSideBarFullScreen\"\nimport RightSideBar from \"../rightSideBar/RightSideBar\"\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport { useFirestore, useFirestoreActivities, useFirestoreUsersApproved } from \"../../firebase/useFirestore\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\"\nimport { client } from \"../../hooks/Client\"\n\nconst ImpactProgress = () => {\n    const [questionniare, setQuestionniare] = useState('')\n    const [goals, setGoals] = useState('')\n    const [matches, setMatches] = useState('')\n    const [members, setMembers] = useState('')\n    const [progression, setProgression] = useState(0)\n    const [goalID, setGoalID] = useState('')\n    const [goalName, setGoalName] = useState('')\n    const [memberCount, setMemberCount] = useState('')\n\n    const menuState = MenuStatus()\n    const history = useHistory()\n\n    const impact = useFirestore('Impact')\n    const goalsDB = useFirestore('Goals')\n    const matchesDB = useFirestore('Matches')\n    const questionnaireAnalysis = useFirestore('QuestionnaireAnalysis')\n    const activities = useFirestoreActivities(goalID)\n    const membersDB = useFirestoreUsersApproved(false, true)\n\n    useEffect(() => {\n        goalsDB && goalsDB.forEach(goal => {\n            setGoalID(goal.ID)\n            setGoalName(goal.Title)\n        })\n    }, [goalsDB])\n\n    // Get display or hide indicators from database\n\n    useEffect(() => {\n        impact&& impact.forEach(imp => {\n            setQuestionniare(imp.Questionnaires)\n            setGoals(imp.Goals)\n            setMatches(imp.Matches)\n            setMembers(imp.Members)\n        })\n    },[impact])\n\n    // Link to details\n\n    const goalLink = () => {\n        history.push(`/${client}/GoalDetail/${goalID}`)\n    }\n\n    const matchesLink = () => {\n        history.push(`/${client}/Matches`)\n    }\n\n    const memberLink = () => {\n        history.push(`/${client}/Members`)\n    }\n\n    // Number of members\n\n    useEffect(() => {\n        const membersArray = []\n        membersDB && membersDB.forEach(member => {\n            membersArray.push(member)\n        })\n        setMemberCount(membersArray.length)\n    }, [members])\n\n    // Display or hide indicators\n\n    const Goals = () => {\n        if(goals === true){\n            return(\n                <div className='divider'>\n                    <h2>Doelen en activiteiten</h2>\n                    <h4>{goalName}</h4>\n                    <p>Voortgang {Math.trunc(progression)}%</p>\n                    <div className='progressionbar-outer-bar'>\n                        <div className='progressionbar-completed' style={{width: `${progression}%`}}></div>\n                    </div>\n                    <button className='button-simple' onClick={goalLink}>Bekijk</button>\n                </div>\n            )\n        } else {\n            return null\n        }\n    }\n\n    const Questionnaire = () => {\n        if(questionniare === true){\n            return(\n                <div className='divider'>\n                    <h2>Vragenlijsten</h2>\n                    {questionnaireAnalysis && questionnaireAnalysis.map(analyse => (\n                        <div id='impact-progress-questionnaire-container'>\n                            <h3>{analyse.QuestionnaireTitle}</h3>\n                            {analyse.Analysis.map(question => (\n                                <div>\n                                    <h4>{question.Question}</h4>\n                                    <p>{question.Average && `Gemiddelde score ${question.Average}`}</p>\n                                    <p>{question.Word && `Analyse woord: ${question.Word}`}</p>\n                                    <p>{question.Count && `Aantal keer in responses: ${question.Count}`}</p>\n                                </div>\n                            ))}\n                        </div>\n                    ))}\n                </div>\n            )\n        } else {\n            return null\n        }\n    }\n\n    const Members = () => {\n        if(members === true){\n            return(\n                <div className='divider'>\n                    <h2>Leden</h2>\n                    <p>Aantal leden {memberCount}</p>\n                    <button className='button-simple' onClick={memberLink}>Bekijk</button>\n                </div>\n            )\n        } else {\n            return null\n        }\n    }\n\n    const Matches = () => {\n        if(matches === true){\n            return(\n                <div className='divider'>\n                    <h2>Matches</h2>\n                    <p>Aantal matches {matchesDB.length}</p>\n                    <button className='button-simple' onClick={matchesLink}>Bekijk</button>\n                </div>\n            )\n        } else {\n            return null\n        }\n    }\n\n    // Goal progression\n\n    const totalProgressionArray = []\n\n    useEffect(() => {\n        activities && activities.forEach(activity => {\n            const progression = activity.Progression \n\n            const maxProgression = activities.length\n\n            const fractualProgression = progression/maxProgression\n\n            totalProgressionArray.push(fractualProgression)\n\n            const totalProgression = totalProgressionArray.reduce((a, b) => a + b, 0)\n\n            setProgression(totalProgression)\n        })\n        \n    }, [activities])\n\n    return (\n        <div className=\"main\">\n            <LeftSideBar />\n            <LeftSideBarFullScreen/>\n            <div className=\"main-container\" style={{display: menuState}}>\n                <div className=\"page-header\">\n                    <h1>Impact dashboard</h1>  \n                </div>\n                <div className='profile profile-auth-profile'>\n                    <Goals/>\n                    <Questionnaire/>\n                    <Members/>\n                    <Matches/>\n                </div>\n            </div>\n            <RightSideBar />\n        </div>\n    )\n}\n\nexport default ImpactProgress\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Impact/Stakeholders.jsx",["1395"],"import LeftSideBarAuthProfile from \"../LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \"../LeftSideBarAuthProfileFullScreen\";\nimport RightSideBar from \"../rightSideBar/RightSideBar\"\nimport Location from \"../../hooks/Location\"\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport { useFirestore } from \"../../firebase/useFirestore\"\nimport { db, timestamp } from \"../../firebase/config.js\"\nimport uuid from 'react-uuid';\nimport { useState } from \"react\";\nimport { client } from \"../../hooks/Client\";\nimport deleteIcon from '../../images/icons/delete-icon.png'\n\nconst Stakeholders = () => {\n    const [email, setEmail] = useState('')\n    const [name, setName] = useState('')\n\n    const menuState = MenuStatus()\n    const route = Location()[3]\n\n    const stakeholders = useFirestore(\"Stakeholders\")\n\n    const nameHandler = (e) => {\n        const name = e.target.value\n\n        setName(name)\n    }\n\n    const emailHandler = (e) => {\n        const email = e.target.value\n\n        setEmail(email)\n    }\n\n    const addStakeholder = () => {\n\n        db.collection(\"Stakeholders\")\n        .doc()\n        .set({\n            Compagny: client,\n            Timestamp: timestamp,\n            ID: uuid(),\n            Name: name,\n            Email: email\n        })\n    }\n\n    const deleteStakeholders = (e) => {\n        const id = e.target.dataset.id \n\n        db.collection('Stakeholders')\n        .doc(id)\n        .delete()\n    }\n\n    return (\n        <div className=\"main\">\n        <LeftSideBarAuthProfile />\n        <LeftSideBarAuthProfileFullScreen/>\n        <div className=\"profile profile-auth-profile\" style={{display: menuState}}>\n            <div className=\"divider card-header\">\n                <h1>Stakeholders</h1>\n                <p>Pas de instellingen van je stakeholders aan</p>\n            </div>\n            <div className='divider'>\n                <h3>Stakeholders</h3>\n            {stakeholders && stakeholders.map(stakeholder => (\n                <div className='stakeholder-container'>\n                    <p>{stakeholder.Name}</p>\n                    <p>{stakeholder.Email}</p>\n                    <img src={deleteIcon} alt=\"\" className=\"userrole-users-delete-button\" data-id={stakeholder.docid} onClick={deleteStakeholders}/>\n                </div>\n            ))}\n            </div>\n            <div className='divider'>\n                        <h3>Voeg een stakeholder toe</h3>\n                        <p>Naam</p>\n                        <input type=\"text\" placeholder='Vul hier de naam van de stakeholder in' onChange={nameHandler}/>\n                        <p>Email</p>\n                        <input type=\"email\" placeholder='Vul hier het emailadres van de stakeholder in' onChange={emailHandler}/>\n                        <button className='button-simple' onClick={addStakeholder}>Toevoegen</button>\n                    </div>\n            \n        </div>\n        <RightSideBar />\n        </div>\n    )\n}\n\nexport default Stakeholders\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Impact/QuestionnaireAnalysis.jsx",["1396","1397","1398"],"import LeftSideBarAuthProfile from \"../LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \"../LeftSideBarAuthProfileFullScreen\";\nimport RightSideBar from \"../rightSideBar/RightSideBar\"\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport { client } from \"../../hooks/Client\"\nimport { useHistory } from \"react-router-dom\";\nimport uuid from 'react-uuid';\nimport { db, timestamp } from \"../../firebase/config.js\"\nimport { useFirestoreID, useFirestoreQuestionnairesResponses, useFirestoreQuestionnaireFields, useFirestoreQuestionnaireAnalysis } from \"../../firebase/useFirestore\"\nimport sendIcon from '../../images/icons/send-icon.png'\nimport editIcon from '../../images/icons/edit-icon.png'\nimport { useState, useEffect } from 'react';\nimport Location from \"../../hooks/Location\"\nimport ButtonClicked from \"../../hooks/ButtonClicked\";\n\nconst QuestionnaireAnalysis = () => {\n    const [questionnaireTitle, setQuestionnaireTitle] = useState('')\n\n    const menuState = MenuStatus()\n    const history = useHistory()\n    const id = uuid()\n    const route = Location()[3]\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n\n    const questionnaires = useFirestoreID('Questionnaires', route)\n    const responses = useFirestoreQuestionnairesResponses(route)\n    const questionnaireFields = useFirestoreQuestionnaireFields(route)\n    const analysis = useFirestoreQuestionnaireAnalysis(route)\n\n    useEffect(() => {\n      questionnaires && questionnaires.forEach(questionnaire => {\n          const title = questionnaire.Title\n\n          setQuestionnaireTitle(title)\n      })\n    }, [questionnaires]);\n    \n\n    const linkRespons = (e) => {\n        const id = e.target.dataset.id \n\n        history.push(`/${client}/QuestionnairesRespons/${id}`)\n    }\n\n    const analysisArray = []\n\n    const QuestionnaireFields = ({field}) => {\n        const [analyseWord, setAnalyseWord] = useState('')\n\n        if(field.Type === 'paragraph'){\n            return (\n                <div className='question-analyse-container'>\n                    <h3>{field.Question}</h3>\n                    <p>Analyseer deze vraag op basis van een analysewoord</p>\n                    <input type=\"text\" placeholder='Type hier een analysewoord' data-id={field.ID} onChange={(e) => setAnalyseWord(e.target.value)}/>\n                    <Analysis field={field} word={analyseWord}/>\n                </div>\n            )\n        } else if (field.Type === 'scale'){\n            return(\n                <div className='question-analyse-container'>\n                    <h3>{field.Question}</h3>\n                    <p>De gemiddelde score is: </p>\n                    <ScaleScore id={field.ID} question={field.Question}/>\n                </div>\n            )\n        }\n        else {\n            return null\n        }\n    }\n\n    const ScaleScore = ({id, question}) => {\n        const scoreArray = []\n\n        responses && responses.forEach(respons => {\n            respons.Input.forEach(input => {\n                if(input.ID === id){\n                    scoreArray.push(parseInt(input.Input))\n                }\n            })\n        })\n\n        const reducer = (previousValue, currentValue) => previousValue + currentValue;\n\n        const sum = scoreArray.reduce(reducer)\n\n        const average = sum/scoreArray.length\n\n         // Set to analysis rapport\n        const analysisObject = {\n            Question: question,\n            QuestionID: id,\n            Average: average\n        }\n\n        analysisArray.push(analysisObject)\n\n         return <p>{average}</p>\n    }\n\n    const Analysis = ({field, word}) => {\n        const [inputs, setInputs] = useState([])\n\n        const analyseButton = () => {\n            const inputArray = []\n            responses && responses.forEach(respons => {\n                respons.Input.forEach(input => {\n                    if(input.ID === field.ID){\n                        if(input.Input.includes(word)){\n                            inputArray.push(input)\n                        }\n                    }\n                })\n            })\n\n            // Set to analysis rapport\n            const analysisObject = {\n                Question: field.Question,\n                QuestionID: field.ID,\n                Word: word,\n                Count: inputArray.length\n            }\n\n            analysisArray.push(analysisObject)\n\n            setInputs(inputArray)\n        }\n\n        return (\n            <div>\n                <button className='button-simple' onClick={analyseButton}>Analyseer</button>\n                <p>Dit woord komt <b>{inputs.length}</b> keer voor in de responses op deze vraag</p>\n            </div>\n        )\n    }\n\n    const saveAnalyses = (e) => {\n\n        ButtonClicked(e, 'Opgeslagen')\n\n        db.collection('QuestionnaireAnalysis')\n        .doc()\n        .set({\n            Compagny: client,\n            Timestamp: timestamp,\n            QuestionnaireID: route,\n            QuestionnaireTitle: questionnaireTitle,\n            Analysis: analysisArray\n        })\n\n    }\n\n  return  <div className=\"main\">\n        <LeftSideBarAuthProfile />\n        <LeftSideBarAuthProfileFullScreen/>\n        <div className=\"profile profile-auth-profile\" style={{display: menuState}}>\n            <div className=\"settings-inner-container\">\n                <div className=\"divider card-header\">\n                    {questionnaires && questionnaires.map(questionnaire => (\n                        <div>\n                            <h1>Analyse van {questionnaire.Title}</h1>\n                            <p>Analyseer de responses van {questionnaire.Title}</p>\n                        </div>\n                    ))}\n                </div>\n                <div className='divider'>\n                    <h2>Analyseer responses</h2>\n                        {questionnaireFields && questionnaireFields.map(field => (\n                            <QuestionnaireFields field={field}/>\n                        ))}\n                        <div>\n                            <button onClick={saveAnalyses}>Analyse opslaan</button>\n                        </div>\n                </div>\n                <div className='divider'>\n                    <h2>{analysis && 'Analyses'}</h2>\n                    {analysis && analysis.map(analyse => (\n                        <div id='questionnaire-analysis-container'>\n                            {analyse.Analysis.map(question => (\n                                <div>\n                                    <h3>{question.Question}</h3>\n                                    <p>{question.Average && `Gemiddelde score ${question.Average}`}</p>\n                                    <p>{question.Word && `Analyse woord: ${question.Word}`}</p>\n                                    <p>{question.Count && `Aantal keer in responses: ${question.Count}`}</p>\n                                </div>\n                            ))}\n                        </div>\n                    ))}\n\n                </div>\n                <div className='divider'>\n                    <h2>Responses</h2>\n                    {responses && responses.map(respons => (\n                        <div id='respons-overview-container'>\n                            <p>{respons.Timestamp.toDate().toLocaleDateString(\"nl-NL\", options)}</p>\n                            <button className='button-simple' data-is={respons.ID} onClick={linkRespons}>Bekijk</button>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n        <RightSideBar />\n        </div>\n};\n\nexport default QuestionnaireAnalysis;\n","/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/index.js",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/App.js",["1399"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/reportWebVitals.js",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/LoginRegister.js",["1400"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/topbar/Topbar.js",["1401","1402"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/firebase/config.js",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Main.js",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/StateManagment/Auth.js",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/StateManagment/MobileMenu.js",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/hooks/Client.js",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/MultipleAccounts.jsx",["1403","1404","1405","1406","1407"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/BottomBar.jsx",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/StateManagment/Colors.jsx",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/NotApproved.jsx",["1408","1409","1410","1411","1412"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Register.js",["1413","1414"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/firebase/useFirestore.js",["1415","1416","1417","1418","1419"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/topbar/Iconbar.js",["1420","1421","1422"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Login.js",["1423"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/topbar/ProfilePhoto.js",["1424"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Search.js",["1425"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/NewClient.js",["1426","1427","1428"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Profile.js",["1429","1430","1431","1432"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Members.js",["1433","1434"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/PublicProfile.js",["1435","1436","1437","1438","1439","1440"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Analytics.js",["1441","1442","1443","1444","1445","1446"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Notifications.js",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Settings.js",["1447","1448","1449"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Measures.js",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Contributions.js",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/allActivity/AllActivity.js",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/LeftSideBarFullScreen.jsx",["1450","1451","1452","1453"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/MyMessages.jsx",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/MyIntroduction.jsx",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/MyGroups.jsx",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/MyEvents.jsx",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/MyContributions.jsx",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/AboutMe.jsx",["1454","1455","1456"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Registrations.jsx",["1457"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/UserRoles.jsx",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/ProfileSettings.jsx",["1458","1459","1460","1461"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Impact/ImpactIndicators.jsx",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Impact/QuestionnaireAnalysis.jsx",["1462","1463","1464","1465","1466","1467"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Impact/ImpactProgress.jsx",["1468","1469"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Matching/Roadmap.jsx",["1470"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Matching/MatchDetail.jsx",["1471","1472","1473","1474","1475"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Matching/Matches.jsx",["1476","1477","1478"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Matching/MatchProfileFields.jsx",["1479"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Matching/MatchItemDetail.jsx",["1480","1481","1482","1483"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Matching/MatchItems.jsx",["1484","1485"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Matching/AddMatchItem.jsx",["1486","1487","1488"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Impact/SendQuestionnaire.jsx",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Impact/Stakeholders.jsx",["1489"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/hooks/Location.js",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Matching/MatchCategories.jsx",["1490","1491"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Impact/QuestionnaireSettings.jsx",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/hooks/GetYearMonth.jsx",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/ActivityDetail.jsx",["1492","1493"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/ActivityGoal.jsx",["1494","1495"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Activities.jsx",["1496","1497","1498"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/rightSideBar/RightSideBar.js",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/LeftSideBar.js",["1499","1500","1501","1502"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/LeftSideBarAuthProfileFullScreen.js",["1503","1504","1505","1506","1507","1508","1509","1510","1511","1512","1513"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/LeftSideBarAuthProfile.js",["1514","1515","1516","1517","1518","1519","1520","1521","1522","1523","1524","1525"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/hooks/MenuStatus.jsx",["1526"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Calender.jsx",["1527"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/hooks/ButtonClicked.jsx",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/allActivity/ActivityCard.js",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/rightSideBar/RightSideBarGroup.js",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/hooks/GetLink.jsx",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/rightSideBar/AllMembers.js",[],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/ActivitySettings.jsx",["1528","1529"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/MyChannels.jsx",["1530","1531"],"/Volumes/GoogleDrive/mijn drive/deccos/deccos-webapp/src/components/Subscriptions.jsx",["1532","1533","1534","1535","1536"],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/hooks/Colors.js",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/MessageBar.js",["1537","1538","1539"],"import plusIcon from '../../images/icons/plus-icon.png'\nimport sendIcon from '../../images/icons/send-icon.png'\nimport { db, timestamp, bucket } from \"../../firebase/config.js\"\nimport { useState, useEffect, useContext } from 'react';\nimport firebase from \"firebase\"\nimport { client } from \"../../hooks/Client\"\nimport uuid from 'react-uuid';\nimport { useFirestore } from \"../../firebase/useFirestore\"\nimport { useLocation } from \"react-router-dom\"\nimport { Auth } from '../../StateManagment/Auth';\nimport Location from \"../../hooks/Location\";\nimport { useHistory } from \"react-router-dom\";\nimport GetYearMonth from '../../hooks/GetYearMonth'\n\nconst MessageBar = () => {\n    const [authO, setAuthO] = useContext(Auth)\n    const [message, setMessage] = useState(\"\")\n    const [fileDisplay, setFileDisplay] = useState(\"none\")\n    const [progressBar, setProgressBar] = useState(\"\")\n\n    const route = Location()[3]\n    const id = uuid()\n    const chats = useFirestore(\"Chats\", route)\n    const location = useLocation()\n    const history = useHistory()\n    const getYearMonth = GetYearMonth()\n\n    const MessageInput = (e) => {\n        const input = e.target.value\n\n        setMessage(input)\n    }\n\n    const submitMessage = () => {\n\n        setMessage(\"\")\n\n        db.collection(\"Messages\")\n        .doc()\n        .set({\n            Type: \"Message\",\n            Message: message,\n            Timestamp: timestamp,\n            ParentID: route,\n            PrevPath: location.pathname,\n            ID: id,\n            Likes: 0,\n            Compagny: client,\n            User: authO.UserName,\n            UserPhoto: authO.Photo,\n            UserDocID: authO.Docid,\n            Email: authO.Email,\n            Thread: [],\n            Read: [authO.ID],\n            UserID: authO.ID,\n            Contributions: [],\n            Public: true\n        })\n        .then(() => {\n            chats && chats.forEach(chat => {\n                db.collection(\"Chats\")\n                .doc(chat.docid)\n                .update({\n                    NewMessages: \"newMessages\"\n                })\n            })\n        })\n        .then(() => {\n            db.collection(\"Search\")\n            .doc()\n            .set({\n                Name: message,\n                Compagny: client,\n                Type: 'Reactie',\n                Link: `MessageDetail/${id}`\n            })\n        })\n        .then(() => {\n            db.collection(\"MessageGraph\")\n            .where(\"Compagny\", \"==\", client)\n            .where(\"Month\", \"==\", getYearMonth)\n            .get()\n            .then(querySnapshot => {\n                if(querySnapshot.empty === false){\n                    querySnapshot.forEach(doc => {\n\n                        console.log(\"bestaat\")\n\n                        db.collection(\"MessageGraph\")\n                        .doc(doc.id)\n                        .update({\n                            Contributions: firebase.firestore.FieldValue.increment(1)\n                        })\n                    })\n                } else if (querySnapshot.empty === true){\n                    console.log(\"bestaat niet\")\n                    db.collection(\"MessageGraph\")\n                    .doc()\n                    .set({\n                        Month: getYearMonth,\n                        Contributions: 1,\n                        Compagny: client,\n                        LastActive: timestamp,\n                        ID: uuid(),\n                    })\n                } \n            })\n        })\n\n        setMessage(\"\")\n    }\n\n    const toggleFile = () => {\n\n        if(fileDisplay === \"none\"){\n            setFileDisplay(\"block\")\n        } else {\n            setFileDisplay(\"none\")\n        }\n\n    }\n\n    const insertFile = (e) => {\n        const file = e.target.files[0]\n\n        const fileType = file.type.split(\"/\")\n\n        setProgressBar(\"Bezig..\")\n\n        const storageRef = bucket.ref(`/${client}_${authO.ID}/` + file.name);\n        const uploadTask = storageRef.put(file)\n\n        uploadTask.then(() => {\n          \n            uploadTask.on('state_changed', snapshot => {\n            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            console.log(progress)\n            switch (snapshot.state) {\n            case firebase.storage.TaskState.PAUSED:\n                console.log('Upload is paused');\n                break;\n            case firebase.storage.TaskState.RUNNING:\n                console.log('Upload is running');\n                break;\n            }\n            }, (err) => {\n                alert(err)\n            }, () => {\n            uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n                console.log('File available at', downloadURL);\n                setProgressBar(\"\")\n\n                if(fileType[0] === \"image\"){\n                    setMessage(\n                        `\n                        <img style=\"width:80%\" src=\"${downloadURL}\">\n                        `\n                        )\n                } else if(fileType[0] === \"video\"){\n                    setMessage(\n                        `\n                        <video width=\"90%\" height=\"90%\" controls autoplay muted>\n                            <source src=\"${downloadURL}\">\n                        </video>\n                        `\n                    )\n                } else if(fileType[0] === \"application\"){\n                    setMessage(\n                        `\n                        <embed src=\"${downloadURL}\" width=\"90% height=\"90%\"></embed>\n                        `\n                    )\n                } else {\n                    setMessage(downloadURL)\n                }\n\n                })\n            })\n        })\n    }\n\n    const profileLink = (e) => {\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/PublicProfile/${id}`)\n    }\n\n    return (\n        <div className=\"massage-container\">\n            <div>\n                <img className=\"user-image\" src={authO.Photo} alt=\"\" data-id={authO.ID} onClick={profileLink} />\n            </div>\n            <div className=\"messagebar-outer-cointainer\">\n                <div className=\"messagebar-container\">\n                    <img src={plusIcon} alt=\"\"  onClick={toggleFile} />\n                    <textarea \n                    type=\"text\" \n                    className=\"message-input\" \n                    placeholder=\"Schrijf hier je bericht\"\n                    value = {message}\n                    onChange={MessageInput}\n                    /> \n                    <img src={sendIcon} alt=\"\" onClick={submitMessage} /> \n                </div>\n                <div>\n                    <div>{progressBar}</div>\n                    <input onChange={insertFile} type=\"file\" style={{display: fileDisplay}} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MessageBar\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/Reaction.jsx",["1540","1541","1542","1543","1544"],"import LikeBar from \"./LikeBar\"\nimport ReactionBar from \"./ReactionBar\"\nimport { useHistory } from \"react-router-dom\"\nimport { client } from \"../../hooks/Client\"\nimport deleteIcon from '../../images/icons/delete-icon.png'\nimport settingsIcon from '../../images/icons/settings-icon.png'\nimport heartIcon from '../../images/icons/heart-icon.png'\nimport { useState, useContext, useEffect } from \"react\"\nimport { Auth } from '../../StateManagment/Auth';\nimport { db, timestamp } from \"../../firebase/config\"\nimport { useFirestore } from \"../../firebase/useFirestore\"\nimport firebase from \"firebase\"\nimport GetYearMonth from '../../hooks/GetYearMonth'\nimport uuid from 'react-uuid';\n\nconst Reaction = ({message}) => {\n    const [authO] = useContext(Auth)\n    const [showOptions, setShowOptions] = useState('none')\n    const [goalLikeDiplay, setGoalLikeDiplay] = useState('none')\n    const [communityName, setCommunityName] = useState('')\n    const [logo, setLogo] = useState('')\n    const [impacteer, setImpacteer] = useState('none')\n\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n    const history = useHistory()\n    const getYearMonth = GetYearMonth()\n    const id = uuid()\n\n    const compagny = useFirestore(\"CompagnyMeta\")\n    const impacteers = useFirestore('Impacteers')\n    const admins = useFirestore('Admins')\n\n    useEffect(() => {\n        compagny && compagny.forEach(comp => {\n            const communityName = comp.CommunityName \n            const logo = comp.Logo \n \n            setCommunityName(communityName)\n            setLogo(logo)\n \n        })\n     }, [compagny])\n\n     useEffect(() => {\n        impacteers && impacteers.forEach(impacteer => {\n            if(impacteer.UserID === authO.ID){\n                setImpacteer('flex')\n            }\n        })\n    }, [impacteers])\n\n    useEffect(() => {\n        admins && admins.forEach(admin => {\n            if(admin.UserID === authO.ID){\n                setImpacteer('flex')\n            }\n        })\n    }, [admins])\n\n    let numberOfReactions = \"\"\n\n        if(message.Thread.length === 0){\n            numberOfReactions = `Bekijk 0 reacties`\n        } else if (message.Thread.length === 1){\n            numberOfReactions = `Bekijk ${message.Thread.length} reactie`\n        } else {\n            numberOfReactions = `Bekijk ${message.Thread.length} reacties`\n        }\n\n    const updateRoute = () => {\n\n        history.push(`/${client}/MessageDetail/${message.ID}`)\n        \n    }\n\n    const profileLink = (e) => {\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/PublicProfile/${id}`)\n    }\n\n    const linkInText = (message) => {\n    \n        const urlRegex = /(((https?:\\/\\/)|(www\\.))[^\\s]+)/g;\n        const links = message.Message.match(urlRegex)\n    \n        if(links != null){\n    \n            const newText = message.Message.replace(links[0], `<a href=\"${links}\", target=\"_blank\">${links}</a>`)\n    \n            return newText\n    \n        } else {\n    \n            return message.Message\n        }\n    \n    }\n\n    const toggleOptions = () => {\n        if(showOptions === \"none\"){\n            setShowOptions(\"flex\")\n        } else if(showOptions === \"flex\"){\n            setShowOptions(\"none\")\n        }\n    }\n\n    const optionsClass = (message) => {\n        if(message.User === authO.UserName){\n            return \"reaction-options-container\"\n        } else if (message.User != authO.UserName)  {\n            return \"hide-message-options\"\n        }\n    }\n\n    const deleteMessage = (e) => {\n        const id = e.target.dataset.id \n\n        db.collection('Messages')\n        .doc(id)\n        .delete()\n    }\n\n    const toggleGoalLikeBar = () => {\n        if(goalLikeDiplay === 'none'){\n            setGoalLikeDiplay('flex')\n        } else if (goalLikeDiplay === 'flex'){\n            setGoalLikeDiplay('none')\n        }\n    }\n\n    const likeHandler = (e) => {\n\n        const userID = e.target.dataset.userid\n        const userDocID = e.target.dataset.userdocid\n        const userName = e.target.dataset.username\n        const userPhoto = e.target.dataset.userphoto\n        const messageID = e.target.dataset.messageid\n        const messageDocid = e.target.dataset.messagedocid\n        const message = e.target.dataset.message\n    \n        db.collection(\"Likes\")\n        .doc()\n        .set({\n            Timestamp: timestamp,\n            SenderID: authO.ID,\n            SenderName: authO.UserName,\n            SenderPhoto: authO.Photo,\n            RecieverID: userID,\n            RecieverName: userName,\n            RecieverPhoto: userPhoto,\n            MessageID: messageID,\n            MessageBody: message,\n            Read: false,\n            ID: id,\n            Compagny: client,\n        })\n        .then(() => {\n            db.collection(\"Notifications\")\n            .doc()\n            .set({\n                Timestamp: timestamp,\n                SenderID: authO.ID,\n                SenderName: authO.UserName,\n                SenderPhoto: authO.Photo,\n                RecieverID: userID,\n                MessageID: messageID,\n                MessageBody: message,\n                Read: false,\n                ID: id,\n                Header:`${authO.UserName} vindt jouw bericht`,\n                SubHeader:`leuk`,\n                Compagny: client,\n                Type: \"Like\"\n            })\n        })\n        .then(() => {\n            db.collection(\"Messages\")\n            .doc(messageDocid)\n            .update({\n                    Likes: firebase.firestore.FieldValue.increment(1)\n                })\n            })\n        .then(() => {\n            db.collection(\"Users\")\n            .doc(userDocID)\n            .update({\n                    Likes: firebase.firestore.FieldValue.increment(1)\n                })\n            })\n            .then(() => {\n\n                console.log(client, getYearMonth, userID)\n                \n                db.collection(\"LikeGraph\")\n                .where(\"Compagny\", \"==\", client)\n                .where(\"Month\", \"==\", getYearMonth)\n                .where('UserID', '==', userID )\n                .get()\n                .then(querySnapshot => {\n                    if(querySnapshot.empty === false){\n                        querySnapshot.forEach(doc => {\n\n                            console.log(\"bestaat\")\n\n                            db.collection(\"LikeGraph\")\n                            .doc(doc.id)\n                            .update({\n                                Contributions: firebase.firestore.FieldValue.increment(1)\n                            })\n                        })\n                    } else if (querySnapshot.empty === true){\n                        console.log(\"bestaat niet\")\n                        db.collection(\"LikeGraph\")\n                        .doc()\n                        .set({\n                            Month: getYearMonth,\n                            Contributions: 1,\n                            Compagny: client,\n                            LastActive: timestamp,\n                            ID: uuid(),\n                            UserName: userName,\n                            UserID: userID\n                        })\n                    } \n                })\n            })\n            .then (() => {\n                sendAsMail(userID)\n            })\n        \n    }\n\n    const sendAsMail = (userID) => {\n\n        db.collection(\"Email\").doc().set({\n            to: [message.Email],\n            cc: \"info@Deccos.nl\",\n            message: {\n            subject: `Je hebt een nieuwe like ontvangen in ${communityName}.`,\n            html: `Hallo ${message.User}, </br></br>\n\n                Je hebt een nieuwe like ontvangen in ${communityName}.</br></br>\n\n                Bekijk de like <a href=\"https://www.deccos.co/${client}/Likes/${userID}\"><u>hier</u></a>.<br><br>\n                \n                Vriendelijke groet, </br></br>\n                ${communityName} </br></br>\n                <img src=\"${logo}\" width=\"100px\">`,\n            Gebruikersnaam: `${message.User}`,\n            Emailadres: message.Email,\n            Type: \"Contribution\"\n              }     \n          }); \n    }\n\n    return (\n        <div className='reaction-container'>\n            <div className=\"reaction-inner-container\" key={message.ID}>\n                <div className=\"auth-photo-container\">\n                    <img src={message.UserPhoto} alt=\"\" data-id={message.UserID} onClick={profileLink}/>\n                </div>\n                <div className=\"message-outer-container\">\n                    <div className=\"auth-message-container\">\n                        <p className=\"auth-name\" data-id={message.UserID} onClick={profileLink}>{message.User}</p>\n                        <p className=\"message-card-timestamp\">{message.Timestamp.toDate().toLocaleDateString(\"nl-NL\", options)}</p>\n                    </div>\n                    <div className=\"message-container\">\n                        <div className=\"massage\" dangerouslySetInnerHTML={{__html:linkInText(message)}}></div>\n                    </div>\n                    <div className=\"like-container\">\n                        <div className='like-icon-container'>\n                            {/* <div className='like-icon-inner-container' style={{display: impacteer}}>\n                                <img src={worldIcon} alt=\"\" onClick={toggleGoalLikeBar}/>\n                                <p className='notification-counter-small'>{message.Contributions.length}</p>\n                            </div> */}\n                            <div className='like-icon-inner-container'>\n                                <img \n                                src={heartIcon} \n                                alt=\"\" \n                                data-message={message.Message}\n                                data-messageid={message.ID}\n                                data-messagedocid={message.docid}\n                                data-username={message.User}\n                                data-userphoto={message.UserPhoto}\n                                data-userid={message.UserID}\n                                data-userdocid={message.UserDocID}\n                                onClick={likeHandler}/>\n                                <p className='notification-counter-small'>{message.Likes}</p>\n                            </div>\n                        </div>\n                        <div style={{display: goalLikeDiplay}}>\n                            <LikeBar message={message} />\n                        </div>\n                    </div>\n                    < ReactionBar message={message} />\n                    <div className=\"button-container\">\n                        <button className=\"reaction-button\" onClick={updateRoute}>{numberOfReactions}</button>\n                    </div>\n                </div>\n            </div>\n            <div className={optionsClass(message)}>\n                <img className=\"notifications-icon-message\" onClick={toggleOptions} src={settingsIcon} alt=\"\"/>\n                <div style={{display: showOptions}}>\n                    <div className='delete-message-container'>\n                        <img className=\"notifications-icon-message\" data-id={message.docid} src={deleteIcon} onClick={deleteMessage} alt=\"\"/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Reaction\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/LikeBar.js",["1545","1546"],"import { useFirestore, useFirestoreID } from \"../../firebase/useFirestore\"\nimport { useState, useContext } from \"react\"\nimport { db, timestamp } from \"../../firebase/config\"\nimport firebase from \"firebase\"\nimport { client } from \"../../hooks/Client\"\nimport uuid from 'react-uuid';\nimport { Auth } from '../../StateManagment/Auth';\nimport GetYearMonth from '../../hooks/GetYearMonth'\n\nconst LikeBar = ({message}) => {\n    const [authO] = useContext(Auth)\n    const [goalID, setGoalID] = useState(\"\")\n\n    const allGoals = useFirestore(\"Goals\")\n    const compagny = useFirestore(\"CompagnyMeta\")\n\n    const id = uuid()\n    const getYearMonth = GetYearMonth()\n  \n    const goalHandler = (e) => {\n\n        const select = e.target\n\n        const option = select.options\n        const selected = option[option.selectedIndex].value\n\n        setGoalID(selected)\n\n    }\n\n    const goals = useFirestoreID(\"Goals\", goalID)\n\n    let userID = \"\"\n\n    if(message != undefined){\n\n    userID = message.UserID\n\n    }\n\n    const users = useFirestoreID(\"Users\", userID)\n\n    const sendGoalLike = (e) => {\n\n        e.target.innerHTML = \"Verstuurd\"\n\n        goals && goals.forEach(goal => {\n\n            db.collection(\"Contributions\")\n            .doc()\n            .set({\n                GoalID: goal.ID,\n                GoalTitle: goal.Title,\n                Timestamp: timestamp,\n                GoalName: goal.Title,\n                SenderID: authO.ID,\n                SenderName: authO.UserName,\n                SenderPhoto: authO.Photo,\n                RecieverID: message.UserID,\n                RecieverName: message.User,\n                RecieverPhoto: message.UserPhoto,\n                MessageID: message.ID,\n                MessageBody: message.Message,\n                Read: false,\n                ID: id,\n                Compagny: client,\n            })\n            .then(() => {\n                db.collection(\"Notifications\")\n                .doc()\n                .set({\n                    GoalID: goal.ID,\n                    GoalName: goal.Title,\n                    Timestamp: timestamp,\n                    SenderID: authO.ID,\n                    SenderName: authO.UserName,\n                    SenderPhoto: authO.Photo,\n                    RecieverID: message.UserID,\n                    MessageID: message.ID,\n                    MessageBody: message.Message,\n                    Read: false,\n                    ID: id,\n                    Header:`${authO.UserName} heeft aangegeven dat jouw bericht`,\n                    SubHeader:`een bijdrage is aan het doel`,\n                    Compagny: client,\n                    Type: \"Contribution\"\n                })\n            })\n            .then(() => {\n                    db.collection(\"Goals\")\n                    .doc(goal.docid)\n                    .update({\n                        Contributions: firebase.firestore.FieldValue.arrayUnion(id)\n                    })\n                })\n            .then(() => {\n                db.collection(\"Messages\")\n                .doc(message.docid)\n                .update({\n                        Contributions: firebase.firestore.FieldValue.arrayUnion(id)\n                    })\n                })\n            .then(() => {\n                users && users.forEach(user => {\n                    db.collection(\"Users\")\n                    .doc(user.docid)\n                    .update({\n                            Contributions: firebase.firestore.FieldValue.arrayUnion(id)\n                        })\n                    })\n                })\n                .then(() => {\n                    \n                    db.collection(\"ContributionGraph\")\n                    .where(\"Compagny\", \"==\", client)\n                    .where(\"Month\", \"==\", getYearMonth)\n                    .where(\"GoalID\", \"==\", goal.ID)\n                    .get()\n                    .then(querySnapshot => {\n                        if(querySnapshot.empty === false){\n                            querySnapshot.forEach(doc => {\n\n                                console.log(\"bestaat\")\n\n                                db.collection(\"ContributionGraph\")\n                                .doc(doc.id)\n                                .update({\n                                    Contributions: firebase.firestore.FieldValue.increment(1)\n                                })\n                            })\n                        } else if (querySnapshot.empty === true){\n                            console.log(\"bestaat niet\")\n                            db.collection(\"ContributionGraph\")\n                            .doc()\n                            .set({\n                                Month: getYearMonth,\n                                Contributions: 1,\n                                UserID: message.UserID,\n                                UserName: message.User,\n                                Compagny: client,\n                                GoalID: goal.ID,\n                                GoalTitle: goal.Title,\n                                LastActive: timestamp,\n                                SDG: goal.SDG,\n                                ID: uuid()\n                            })\n                        } \n                    })\n                })\n                .then(() => {\n                    \n                    db.collection(\"ContributionGraphUser\")\n                    .where(\"Compagny\", \"==\", client)\n                    .where(\"Month\", \"==\", getYearMonth)\n                    .where(\"UserID\", \"==\", message.UserID)\n                    .get()\n                    .then(querySnapshot => {\n                        if(querySnapshot.empty === false){\n                            querySnapshot.forEach(doc => {\n\n                                console.log(\"bestaat\")\n\n                                db.collection(\"ContributionGraphUser\")\n                                .doc(doc.id)\n                                .update({\n                                    Contributions: firebase.firestore.FieldValue.increment(1)\n                                })\n                            })\n                        } else if (querySnapshot.empty === true){\n                            console.log(\"bestaat niet\")\n                            db.collection(\"ContributionGraphUser\")\n                            .doc()\n                            .set({\n                                Month: getYearMonth,\n                                Contributions: 1,\n                                UserID: message.UserID,\n                                UserName: message.User,\n                                Compagny: client,\n                                LastActive: timestamp,\n                                ID: uuid()\n                            })\n                        } \n                    })\n                })\n                .then (() => {\n                    sendAsMail()\n                })\n            })\n    }\n\n    let communityName = \"\"\n    let logo = \"\"\n    let email = \"\"\n\n    compagny && compagny.forEach(comp => {\n        communityName = comp.CommunityName\n        logo = comp.Logo\n    })\n\n    const sendAsMail = () => {\n\n        db.collection(\"Email\").doc().set({\n            to: [message.Email],\n            cc: \"info@Deccos.nl\",\n            message: {\n            subject: `Je hebt een nieuwe bijdrage ontvangen in ${communityName}.`,\n            html: `Hallo ${message.User}, </br></br>\n\n                Je hebt een nieuwe bijdrage ontvangen in ${communityName}.</br></br>\n\n                Bekijk de bijdrage <a href=\"https://www.deccos.co/${client}/Contributions/${userID}\"><u>hier</u></a>.<br><br>\n                \n                Vriendelijke groet, </br></br>\n                ${communityName} </br></br>\n                <img src=\"${logo}\" width=\"100px\">`,\n            Gebruikersnaam: `${message.User}`,\n            Emailadres: message.Email,\n            Type: \"Chat\"\n              }     \n          }); \n    }\n\n    return (\n        <div>\n                <div className=\"like-goal-container\">\n                    <p>Je bent een bijdrage aan:</p>\n                    <select onChange={goalHandler}>\n                    <option>Selecteer een doel</option>\n                    {allGoals && allGoals.map(goal =>(\n                        <option key={goal.ID} value={goal.ID}>{goal.Title}</option>\n                     ))}    \n                       </select>\n                    <button className=\"button-simple\" onClick={sendGoalLike}>Verstuur</button>\n                </div>        \n        </div>\n    )\n}\n\nexport default LikeBar\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/ReactionBar.js",["1547","1548"],"import { useState } from \"react\"\nimport { db, timestamp, bucket} from \"../../firebase/config\"\nimport plusIcon from '../../images/icons/plus-icon.png'\nimport sendIcon from '../../images/icons/send-icon.png'\nimport { client } from \"../../hooks/Client\"\nimport { useContext } from \"react\"\nimport uuid from 'react-uuid';\nimport firebase from \"firebase\"\nimport { useLocation } from \"react-router-dom\"\nimport { Auth } from '../../StateManagment/Auth';\nimport GetYearMonth from '../../hooks/GetYearMonth'\n\nconst ReactionBar = ({message}) => {\n    const [authO] = useContext(Auth)\n\n    const [reaction, setReaction] = useState(\"\")\n    const [fileDisplay, setFileDisplay] = useState(\"none\")\n    \n    const id = uuid()\n    const location = useLocation()\n    const getYearMonth = GetYearMonth()\n    \n    const reactionHandler = (e) => {\n\n        const reaction = e.target.value\n\n        setReaction(reaction)\n    }\n\n    const submitReaction = () => {\n\n        db.collection(\"Messages\")\n        .doc()\n        .set({\n            Type: \"Reaction\",\n            ParentID: message.ID,\n            Message: reaction,\n            Likes: 0,\n            Compagny: client,\n            Timestamp: timestamp,\n            PrevPath: location.pathname,\n            User: authO.UserName,\n            UserPhoto: authO.Photo,\n            Email: authO.Email,\n            ID: uuid(),\n            Thread: [],\n            Read: [authO.ID],\n            UserID: authO.ID,\n            Contributions: [],\n            Public: true\n        })\n        .then(() => {\n            db.collection(\"Messages\")\n            .doc(message.docid)\n            .update({\n                Thread: firebase.firestore.FieldValue.arrayUnion(id)\n            })\n        })\n        .then(() => {\n            setReaction(\"\")\n        })\n        .then(() => {\n            db.collection(\"Notifications\")\n            .doc()\n            .set({\n                MessageID: message.ID,\n                ParentID: message.ID,\n                MessageBody: message.Message,\n                Reaction: reaction,\n                Timestamp: timestamp,\n                SenderID: authO.ID,\n                SenderName: authO.UserName,\n                SenderPhoto: authO.Photo,\n                Email: authO.Email,\n                RecieverID: message.UserID,\n                Header:`${authO.UserName} heeft gereageerd op jouw bericht`,\n                SubHeader:``,\n                Read: false,\n                ID: uuid(),\n                Compagny: client,\n                Type: \"Reaction\"\n            })\n        })\n        .then(() => {\n            db.collection(\"MessageGraph\")\n            .where(\"Compagny\", \"==\", client)\n            .where(\"Month\", \"==\", getYearMonth)\n            .get()\n            .then(querySnapshot => {\n                if(querySnapshot.empty === false){\n                    querySnapshot.forEach(doc => {\n\n                        console.log(\"bestaat\")\n\n                        db.collection(\"MessageGraph\")\n                        .doc(doc.id)\n                        .update({\n                            Contributions: firebase.firestore.FieldValue.increment(1)\n                        })\n                    })\n                } else if (querySnapshot.empty === true){\n                    console.log(\"bestaat niet\")\n                    db.collection(\"MessageGraph\")\n                    .doc()\n                    .set({\n                        Month: getYearMonth,\n                        Contributions: 1,\n                        Compagny: client,\n                        LastActive: timestamp,\n                        ID: uuid(),\n                    })\n                } \n            })\n        })\n    }\n\n    const toggleFile = () => {\n\n        if(fileDisplay === \"none\"){\n            setFileDisplay(\"block\")\n        } else {\n            setFileDisplay(\"none\")\n        }\n\n    }\n\n    const insertFile = (e) => {\n        const file = e.target.files[0]\n\n        const fileType = file.type.split(\"/\")\n\n        console.log(fileType)\n\n        const storageRef = bucket.ref(`/${client}_${authO.ID}/` + file.name);\n        const uploadTask = storageRef.put(file)\n\n        uploadTask.then(() => {\n          \n            uploadTask.on('state_changed', snapshot => {\n            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            switch (snapshot.state) {\n            case firebase.storage.TaskState.PAUSED:\n                console.log('Upload is paused');\n                break;\n            case firebase.storage.TaskState.RUNNING:\n                console.log('Upload is running');\n                break;\n            }\n            }, (err) => {\n                alert(err)\n            }, () => {\n            uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n                console.log('File available at', downloadURL);\n\n            if(fileType[0] === \"image\"){\n                setReaction(\n                    `\n                    <img style=\"width:80%\" src=\"${downloadURL}\">\n                    `\n                    )\n            } else if(fileType[0] === \"video\"){\n                setReaction(\n                    `\n                <video width=\"90%\" height=\"90%\" controls autoplay muted>\n                    <source src=\"${downloadURL}\">\n                </video>\n                `\n                )\n            } else if(fileType[0] === \"application\"){\n                setReaction(\n                `\n                <embed src=\"${downloadURL}\" width=\"90% height=\"90%\"></embed>\n                `\n                )\n            } else {\n                setReaction(downloadURL)\n            }\n                })\n            })\n        })\n    }\n\n    return (\n        <div>\n            <div className=\"reaction-bar-container\">\n                <img src={plusIcon} alt=\"\" onClick={toggleFile} />\n                <textarea type=\"text\" placeholder=\"Schrijf hier je reactie\" value={reaction} onChange={reactionHandler} />\n                <img src={sendIcon} alt=\"\" onClick={submitReaction} />\n            </div>\n            <div>\n                <input onChange={insertFile} type=\"file\" style={{display: fileDisplay}} />\n            </div>\n        </div>\n    )\n}\n\nexport default ReactionBar\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/Start.js",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/AddArticle.js",["1549","1550","1551","1552"],"import LeftSideBarAuthProfile from \"../LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \"../LeftSideBarAuthProfileFullScreen\";\nimport RightSideBar from \"../rightSideBar/RightSideBar\"\nimport { useState } from 'react'\nimport { motion } from \"framer-motion\"\nimport { db, timestamp } from \"../../firebase/config.js\"\nimport { client } from '../../hooks/Client';\nimport { Link } from \"react-router-dom\";\nimport uuid from 'react-uuid';\nimport { useFirestore } from '../../firebase/useFirestore.js';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { useRef, useContext, useEffect } from 'react';\nimport firebase from 'firebase'\nimport { bucket } from '../../firebase/config';\nimport spinnerRipple from '../../images/spinner-ripple.svg'\nimport imageIcon from '../../images/icons/image-icon.png'\nimport videoIcon from '../../images/icons/video-icon.png'\nimport fileIcon from '../../images/icons/file-icon.png'\nimport { Auth } from '../../StateManagment/Auth';\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport Modal from 'react-modal';\n\nconst AddArticle = () => {\n    const [authO] = useContext(Auth)\n\n    const [title, setTitle] = useState(\"\")\n    const [body, setBody] = useState(\"\")\n    const [categorie, setCategorie] = useState(\"\")\n    const [newCategorie, setNewCategorie] = useState(\"\")\n    const [bannerPhoto, setBannerPhoto] = useState(\"\")\n    const [loader, setLoader] = useState(\"\")\n    const [headerPhoto, setHeaderPhoto] = useState('')\n    const [compagnyId, setCompagnyID] = useState('')\n    const [modalImageOpen, setModalImageOpen] = useState(false);\n    const [modalVideoOpen, setModalVideoOpen] = useState(false);\n    const [modalFileOpen, setModalFileOpen] = useState(false);\n    const [channelID, setChannelID] = useState('')\n\n    const id = uuid()\n    const compagny = useFirestore(\"CompagnyMeta\")\n    const banners = useFirestore('Banners')\n    const channels = useFirestore(\"Channels\")\n\n    const editorRef = useRef(null);\n    const menuState = MenuStatus()\n    Modal.setAppElement('#root');\n\n    const modalStyles = {\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)',\n        },\n      };\n\n    // Set banner image in state\n    \n    useEffect(() => {\n        banners && banners.forEach(banner => {\n            const header = banner.NewArticle\n            setHeaderPhoto(header)\n        })\n    }, [banners])\n\n    // Set compagny id in state\n\n    useEffect(() => {\n        compagny && compagny.forEach(comp => {\n            setCompagnyID(comp.docid)\n        })\n    }, [compagny])\n\n    // Set channel ID to state\n\n    useEffect(() => {\n        channels && channels.forEach(channel => {\n            if(channel.Name === 'Kenniscentrum'){\n                setChannelID(channel.ID)\n            }\n        })\n\n    }, [channels])\n\n    const variants = {\n        hidden: { opacity: 0 },\n        visible: { opacity: 1 },\n      }\n\n    const titleHandler = (e) => {\n        const title = e.target.value\n        setTitle(title)\n    }\n\n    const bodyHandler = (e) => {\n        if (editorRef.current) {\n            setBody(editorRef.current.getContent());\n            }\n    }\n\n    // Add image, video and/or pdf to editor\n\n    const imageHandler = (e) => {\n        const image = e.target.files[0]\n\n        const fileType = image.type.split(\"/\")\n\n        const storageRef = bucket.ref(\"/ProfilePhotos/\" + image.name);\n        const uploadTask = storageRef.put(image)\n\n        uploadTask.then(() => {\n          \n            uploadTask.on('state_changed', snapshot => {\n            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            switch (snapshot.state) {\n            case firebase.storage.TaskState.PAUSED:\n                console.log('Upload is paused');\n                break;\n            case firebase.storage.TaskState.RUNNING:\n                console.log('Upload is running');\n                break;\n            }\n            }, (err) => {\n                alert(err)\n            }, () => {\n            uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n            console.log('File available at', downloadURL);\n\n            if (editorRef.current) {\n                if(fileType[0] === \"image\"){\n                    editorRef.current.insertContent(\n                        `\n                        <img style=\"width:80%\" src=\"${downloadURL}\">\n                        `\n                        )\n                } else if(fileType[0] === \"video\"){\n                    editorRef.current.insertContent(\n                        `\n                        <video width=\"90%\" height=\"90%\" controls autoplay muted>\n                            <source src=\"${downloadURL}\">\n                        </video>\n                        `\n                    )\n                } else if(fileType[0] === \"application\"){\n                    editorRef.current.insertContent(\n\n                        `\n                        <a href='${downloadURL}' target=\"_blank\">\n                            ${image.name}\n                        </a>\n                        `\n                    )\n                } else {\n                    editorRef.current.insertContent(`<div> src=${downloadURL}</div>`);\n                }\n                }\n                })\n                .then(() => {\n                    closeImageModal()\n                    closeVideoModal()\n                    closeFileModal()\n                })\n\n            })\n        })\n    }\n\n    const categoryHandler = (e) => {\n        const option = e.target.options\n\n        const categorie = option[option.selectedIndex].innerHTML\n\n        setCategorie(categorie)\n    }\n\n    const newCategorieHandler = (e) => {\n        const newCategorie = e.target.value\n\n        setNewCategorie(newCategorie)\n    }\n\n    // Upload banner image\n\n    const photoHandler = (e) => {\n        setLoader(spinnerRipple)\n\n        const photo = e.target.files[0]\n\n        const storageRef = bucket.ref(\"/ProfilePhotos/\" + photo.name);\n        const uploadTask = storageRef.put(photo)\n\n        uploadTask.then(() => {\n          \n            uploadTask.on('state_changed', snapshot => {\n            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            switch (snapshot.state) {\n            case firebase.storage.TaskState.PAUSED:\n                console.log('Upload is paused');\n                break;\n            case firebase.storage.TaskState.RUNNING:\n                console.log('Upload is running');\n                break;\n            }\n            }, (err) => {\n                alert(err)\n            }, () => {\n            uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n            console.log('File available at', downloadURL);\n\n            setBannerPhoto(downloadURL)\n            setLoader(downloadURL)\n\n                })\n            })\n        })\n    }\n\n    const saveNewcategorie = (e) => {\n\n        e.preventDefault()\n\n        compagnyId && \n        db.collection(\"CompagnyMeta\")\n        .doc(compagnyId)\n        .update({\n            Categories: firebase.firestore.FieldValue.arrayUnion(newCategorie)\n        })\n    }\n    \n\n    const saveArticle = (e) => {\n\n        db.collection(\"KnowledgeCentre\")\n        .doc()\n        .set({\n            Title: title,\n            Body: body,\n            Compagny: client,\n            Timestamp: timestamp,\n            ID: id,\n            User: authO.UserName,\n            UserPhoto: authO.Photo,\n            UserID: authO.ID,\n            Categorie: categorie,\n            Banner: bannerPhoto,\n            ChannelID: channelID\n        })\n        .then(() => {\n            db.collection(\"AllActivity\")\n            .doc()\n            .set({\n                Title: title,\n                Type: \"NewArticle\",\n                Compagny: client,\n                Timestamp: timestamp,\n                ID: id,\n                Description: \"heeft een nieuw artikel toegevoegd:\",\n                ButtonText: \"Bekijk artikel\",\n                User: authO.UserName,\n                UserPhoto: authO.Photo,\n                UserID: authO.ID,\n                Banner: headerPhoto,\n                Link: `ArticleDetail/${id}`\n            }) \n        })\n        .then(() => {\n            db.collection(\"Search\")\n            .doc()\n            .set({\n                Name: title,\n                Compagny: client,\n                Type: 'Artikel',\n                Link: `ArticleDetail/${id}`\n            })\n        })\n    }\n\n    const closeImageModal = () => {\n        setModalImageOpen(false);\n      }\n\n    const closeVideoModal = () => {\n    setModalVideoOpen(false);\n    }\n\n    const closeFileModal = () => {\n        setModalFileOpen(false);\n    }\n    \n\n    return (\n        <div className=\"main\">\n             <LeftSideBarAuthProfile />\n            <LeftSideBarAuthProfileFullScreen/>\n            <motion.div className=\"article\"\n            initial=\"hidden\"\n            animate=\"visible\"\n            variants={variants}\n            style={{display: menuState}}>\n                <div className=\"card-header\">\n                    <h2>Voeg een artikel toe</h2>\n                    <p>Voeg een nieuw artikel voor de leden van de community</p>\n                </div>\n                <form id=\"add-goal-form\">\n                    <div className=\"divider\">\n                        <h4>Geef het artikel een titel</h4>\n                        <input type=\"text\" placeholder=\"Schrijf hier de titel\" onChange={titleHandler} />\n                    </div >\n                    <Modal\n                        isOpen={modalImageOpen}\n                        onRequestClose={closeImageModal}\n                        style={modalStyles}\n                        contentLabel=\"Upload file\"\n                    >\n                    <div className='add-image-container'>\n                        <img src={imageIcon} alt=\"\" />\n                        <p>Upload een plaatje</p>\n                        <input onChange={imageHandler} type=\"file\" />\n                    </div>\n                    </Modal>\n                    <Modal\n                        isOpen={modalVideoOpen}\n                        onRequestClose={closeVideoModal}\n                        style={modalStyles}\n                        contentLabel=\"Upload file\"\n                    >\n                    <div className='add-image-container'>\n                        <img src={videoIcon} alt=\"\" />\n                        <p>Upload een plaatje video</p>\n                        <input onChange={imageHandler} type=\"file\" />\n                    </div>\n                    </Modal>\n                    <Modal\n                        isOpen={modalFileOpen}\n                        onRequestClose={closeFileModal}\n                        style={modalStyles}\n                        contentLabel=\"Upload file\"\n                    >\n                    <div className='add-image-container'>\n                        <img src={fileIcon} alt=\"\" />\n                        <p>Upload een document</p>\n                        <input onChange={imageHandler} type=\"file\" />\n                    </div>\n                    </Modal>\n                    <div className=\"divider\">\n                        <h4>Schrijf je artikel</h4>\n                        <Editor onChange={bodyHandler}\n                        apiKey=\"dz1gl9k5tz59z7k2rlwj9603jg6xi0bdbce371hyw3k0auqm\"\n                        onInit={(evt, editor) => editorRef.current = editor}\n                        init={{\n                        height: 500,\n                        menubar: false,\n                        statusbar: false,\n                        plugins: [\n                            'advlist autolink lists link image charmap print preview anchor',\n                            'searchreplace visualblocks code fullscreen',\n                            'insertdatetime media table paste code help'\n                        ],\n                        toolbar: 'undo redo | formatselect | ' +\n                        'bold italic backcolor | imageFunction | videoFunction | fileFunction | alignleft aligncenter ' +\n                        'alignright alignjustify | bullist numlist outdent indent | ' +\n                        'removeformat | help',\n                        setup: function (editor) {\n\n                            editor.ui.registry.addButton('imageFunction', {\n                              icon: 'image',\n                              onAction: function (_) {\n                                setModalImageOpen(true);\n                              },\n                            });\n\n                            editor.ui.registry.addButton('videoFunction', {\n                                icon: 'embed',\n                                onAction: function (_) {\n                                  setModalVideoOpen(true);\n                                },\n                              });\n\n                              editor.ui.registry.addButton('fileFunction', {\n                                icon: 'document-properties',\n                                onAction: function (_) {\n                                  setModalFileOpen(true);\n                                },\n                              });\n                        },\n                        content_style: 'body { font-family: Raleway, sans-serif; font-size:14px; color: gray }'\n                        }}\n                        />\n                    </div>\n                    <div className=\"divider\">\n                        <h4>Voeg een categorie toe</h4>\n                        {compagny && compagny.map(comp => (\n                                <select name=\"\" id=\"\" onChange={categoryHandler} key={uuid()}>\n                                     {comp.Categories.map(cat => (\n                                        <option value=\"\" key={uuid()}>{cat}</option>\n                                    ))}\n                                </select>\n                        ))}\n                        <p>Voeg een nieuwe categorie toe aan de categorielijst</p>\n                        <input type=\"text\" placeholder=\"Schrijf hier je catgeorie\" onChange={newCategorieHandler} />\n                        <p className=\"button-minimal\" onClick={saveNewcategorie}>Voeg toe</p>\n                    </div>\n                    <div>\n                        <p>Voeg een bannerfoto toe</p>\n                        <input onChange={photoHandler} type=\"file\" />\n                        <div className=\"spinner-container\">\n                            <img src={loader} alt=\"\" />\n                        </div> \n                    </div>\n                </form>\n                <div id=\"button-add-goal\">\n                    <Link to={`/${client}/KnowledgeCentre`}><button onClick={saveArticle}>Opslaan</button></Link>\n                </div>\n            </motion.div>\n            <RightSideBar />\n        </div>\n    )\n}\n\nexport default AddArticle\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/Group.js",["1553","1554","1555","1556"],"import LeftSideBar from \"../LeftSideBar\"\nimport LeftSideBarFullScreen from \"../LeftSideBarFullScreen\"\nimport RightSideBarGroup from \"../rightSideBar/RightSideBarGroup\"\nimport MessageBarGroup from \"./MessageBarGroup\"\nimport { useFirestoreID, useFirestoreMessages, useFirestore, useFirestoreSubscriptionsChannelGroup, useFirestoreSubscriptions } from \"../../firebase/useFirestore\"\nimport emailIcon from '../../images/icons/email-icon.png'\nimport { useContext, useState, useEffect } from 'react';\nimport { Auth } from '../../StateManagment/Auth';\nimport { db } from \"../../firebase/config\"\nimport Location from \"../../hooks/Location\"\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport { useHistory } from \"react-router-dom\"\nimport GetLink from '../../hooks/GetLink'\nimport GroupChannel from './GroupChannel'\nimport { client } from '../../hooks/Client';\nimport deleteIcon from '../../images/icons/delete-icon.png'\nimport settingsIcon from '../../images/icons/settings-icon.png'\n\nconst Group = () => {\n    const [authO] = useContext(Auth)\n    const [authID, setAuthID] = useState(null)\n    const [showSendMail, setShowSendMail] = useState(\"none\")\n    const [selectedEmailUser, setSelectedEmailUser] = useState(\"\")\n    const [chatDisplay, setChatDisplay] = useState('flex')\n    const [channelDisplay, setChannelDisplay] = useState('none')\n    const [tabChat, setTabChat] = useState('active-tab')\n    const [channelChat, setChannelTab] = useState('not-active-tab')\n    const [showOptions, setShowOptions] = useState('none')\n\n    const menuState = MenuStatus()\n    const route = Location()[3]\n    \n    const groups = useFirestoreID(\"Groups\", route)\n    const messages = useFirestoreMessages(\"Messages\", route)\n    const compagny = useFirestore(\"CompagnyMeta\")\n    const members = useFirestoreSubscriptionsChannelGroup(route)\n    const subscriptions = useFirestoreSubscriptions(authID)\n\n    const options = {year: 'numeric', month: 'numeric', day: 'numeric' };\n    const history = useHistory()\n\n    useEffect(() => {\n        if(authO.ID != undefined){\n\n            setAuthID(authO.ID)\n        }\n    },[authO])\n\n    useEffect(() => {\n        subscriptions && subscriptions.forEach(sub => {\n\n            if(sub.UserID === authO.ID && sub.SubID === route && sub.Approved === false){\n\n                history.push(`/${client}/GroupLanding/${route}`)\n            } else if(sub.UserID === authO.ID && sub.SubID === route && sub.Approved === true) {\n                return\n            }\n        })\n    },[subscriptions])\n\n    const messageClass = (message) => {\n        if(message.User === authO.UserName){\n            return \"auth-message\"\n        } else if (message.User != authO.UserName)  {\n            return \"user-message\"\n        }\n    }\n\n    const optionsClass = (message) => {\n        if(message.User === authO.UserName){\n            return \"message-options-container\"\n        } else if (message.User != authO.UserName)  {\n            return \"hide-message-options\"\n        }\n    }\n    \n    const emailOptions = () => {\n            if(showSendMail === \"none\"){\n                setShowSendMail(\"block\")\n            } else if(showSendMail === \"block\"){\n                setShowSendMail(\"none\")\n            }\n    }\n\n    let communityName = \"\"\n    let logo = \"\"\n\n    compagny && compagny.forEach(comp => {\n        communityName = comp.CommunityName\n        logo = comp.Logo\n    })\n\n    const sendAsMail = (e) => {\n\n        const room = e.target.dataset.room\n        const userName = e.target.dataset.username\n        const id = e.target.dataset.id\n        e.target.innerHTML = \"Verstuurd\"\n\n        db.collection(\"Email\").doc().set({\n            to: selectedEmailUser,\n            cc: \"info@Deccos.nl\",\n            message: {\n            subject: `${userName} heeft je een bericht gestuurd in de groep ${room}.`,\n            html: `Hallo ${authO.UserName}, </br></br>\n\n                ${userName} heeft je een bericht gestuurd in de groep ${room}.</br></br>\n\n                Bekijk het bericht <a href=\"https://www.deccos.co/${client}/Group/${id}\"><u>hier</u></a>.<br><br>\n                \n                Vriendelijke groet, </br></br>\n                ${communityName} </br></br>\n                <img src=\"${logo}\" width=\"100px\">`,\n            Gebruikersnaam: `${userName}`,\n            Emailadres: selectedEmailUser,\n            Type: \"Group\"\n              }     \n          });\n    }\n\n    const emailMemberHandler = (e) => {\n        const member = e.target.value\n\n        const memberMailArray = []\n\n        if(member === \"everybody\"){\n            members && members.forEach(member => {\n\n                memberMailArray.push(member.UserEmail)\n            })\n        } else {\n            memberMailArray.push(member)\n        }\n\n        setSelectedEmailUser(memberMailArray)\n    }\n\n    const profileLink = (e) => {\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/PublicProfile/${id}`)\n    }\n\n    const showChat = () => {\n        setChatDisplay('flex')\n        setChannelDisplay('none')\n        setTabChat('active-tab')\n        setChannelTab('not-active-tab')\n    }\n\n    const showChannel = () => {\n        setChatDisplay('none')\n        setChannelDisplay('flex')\n        setTabChat('not-active-tab')\n        setChannelTab('active-tab')\n    }\n\n    const deleteMessage = (e) => {\n        const id = e.target.dataset.id \n\n        db.collection('Messages')\n        .doc(id)\n        .delete()\n    }\n\n    const toggleOptions = () => {\n        if(showOptions === \"none\"){\n            setShowOptions(\"flex\")\n        } else if(showOptions === \"flex\"){\n            setShowOptions(\"none\")\n        }\n    }\n\n    const ChatScreen = () => {\n        return(\n            groups && groups.map(group => (\n            <div className=\"chat-screen\" style={{display: chatDisplay}}>\n            {messages && messages.map(message => (\n            <div className={messageClass(message)} key={message.ID}>\n                <div className=\"sender-meta-container\">\n                    <img className=\"sender-photo\" src={message.UserPhoto} alt=\"\" data-id={message.UserID} onClick={profileLink} />\n                    <p className=\"sender-name\" data-id={message.UserID} onClick={profileLink}>{message.User}</p>\n                    <p className=\"sender-timestamp\">{message.Timestamp.toDate().toLocaleDateString(\"nl-NL\", options)}</p>\n                </div>\n                <div dangerouslySetInnerHTML={{__html:GetLink(message)}}></div>\n                <div className={optionsClass(message)}>\n                    <img className=\"notifications-icon-message\" onClick={toggleOptions} src={settingsIcon} alt=\"\"/>\n                    <div className='message-options-inner-container' style={{display: showOptions}}>\n                        <div className=\"send-as-mail-container\">\n                            <img className=\"notifications-icon-message\" src={emailIcon} alt=\"\" onClick={emailOptions}/>\n                            <div style={{display: showSendMail}}>\n                                <button data-id={group.ID} data-username={message.User} data-room={group.Room} onClick={sendAsMail}>Verstuur bericht als email</button>\n                                <select name=\"\" id=\"\" onChange={emailMemberHandler}>\n                                    <option value=\"\">-- Selecteer --</option>\n                                    <option value=\"everybody\">Iedereen</option>\n                                    {members && members.map(member => (\n                                        <option value={member.UserEmail}>{member.UserName}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <div className='delete-message-container'>\n                            <img className=\"notifications-icon-message\" data-id={message.docid} src={deleteIcon} onClick={deleteMessage} alt=\"\"/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            ))}\n            <MessageBarGroup route={route} auth={authO} />\n        </div>\n            ))\n        )\n    }\n\n    return (\n        <div className=\"main\">\n            <LeftSideBar />\n            <LeftSideBarFullScreen/>\n            {groups && groups.map(group => (\n            <div className=\"group-outer-container\" key={group.ID} style={{display: menuState}}>\n                <div className=\"group-container\">\n                    <div className=\"chat-header\">\n                        <h1>{group.Room}</h1>\n                        <div className='group-navigation-container'>\n                            <p className={tabChat} onClick={showChat}>Chat</p>\n                            <p className={channelChat} onClick={showChannel}>Kanaal</p>\n                        </div>\n                    </div>\n                    <ChatScreen />\n                    <div style={{display: channelDisplay}}>\n                        <GroupChannel />\n                    </div>\n                </div>\n                <RightSideBarGroup group={group} route={route} /> \n            </div>\n            ))}\n        </div>\n    )\n}\n\nexport default Group","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/News.js",["1557","1558","1559","1560","1561","1562"],"import LeftSideBar from \"../LeftSideBar\"\nimport LeftSideBarFullScreen from \"../LeftSideBarFullScreen\"\nimport RightSideBar from \"../rightSideBar/RightSideBar\"\nimport { client } from '../../hooks/Client';\nimport { Link } from \"react-router-dom\";\nimport { useFirestore, useFirestoreChannelName, useFirestoreSubscriptions } from \"../../firebase/useFirestore\";\nimport { useHistory } from \"react-router-dom\"\nimport { useState, useContext, useEffect } from 'react';\nimport { auth, db, timestamp } from '../../firebase/config';\nimport { motion } from \"framer-motion\"\nimport { Auth } from '../../StateManagment/Auth';\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport firebase from 'firebase';\nimport Location from \"../../hooks/Location\"\nimport uuid from 'react-uuid';\n\nconst News = () => {\n    const [authO] = useContext(Auth)\n    const [authID, setAuthID] = useState(null)\n\n    const [channelID, setChannelID] = useState('')\n    const [isMember, setIsMember] = useState('none')\n    const [memberStatus, setMemberStatus] = useState('Abonneren')\n\n    const news = useFirestore(\"News\")\n    const history = useHistory()\n    const subscriptions = useFirestoreSubscriptions(authID)\n    const channels = useFirestoreChannelName('Nieuws')\n\n    const menuState = MenuStatus()\n    const route = Location()[3]\n    const id = uuid()\n    \n    const options = {year: 'numeric', month: 'numeric', day: 'numeric' };\n\n    useEffect(() => {\n        if(authO.ID != undefined){\n\n            setAuthID(authO.ID)\n        }\n    },[authO])\n\n    useEffect(() => {\n        subscriptions && subscriptions.forEach(sub => {\n            if(sub.SubID === route){\n                setIsMember('flex')\n                setMemberStatus('Geabonneerd')\n            }\n        })\n    },[subscriptions])\n\n    useEffect(() => {\n        channels && channels.forEach(channel => {\n            setChannelID(channel.ID)\n        })\n    },[channels])\n\n    const detailRouter = (e) => {\n\n        const id = e.target.dataset.id \n        const docid = e.target.dataset.docid\n\n        db.collection(\"News\")\n        .doc(docid)\n        .update({\n            Clicks: firebase.firestore.FieldValue.arrayUnion(timestamp)\n        })\n        .then(() => {\n            history.push(`/${client}/NewsDetail/${id}`)\n        })\n\n    }\n\n    const variants = {\n        hidden: { opacity: 0 },\n        visible: { opacity: 1 },\n      }\n\n    const profileLink = (e) => {\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/PublicProfile/${id}`)\n    }\n\n    const becomeMember = (e) => {\n\n        e.target.innerText = 'Geabonneerd'\n\n        db.collection('Subscriptions')\n        .doc()\n        .set({\n            UserName: authO.UserName,\n            UserID: authO.ID,\n            UserEmail: authO.Email,\n            SubID: channelID,\n            SubName: 'Nieuws',\n            Timestamp: timestamp,\n            Compagny: client,\n            ID: id,\n            Type: 'Channel'\n        })\n    }\n\n    return (\n        <div className=\"main\">\n            <LeftSideBar />\n            <LeftSideBarFullScreen/>\n            <div className=\"main-container\" style={{display: menuState}}>\n                <div className=\"page-header\">\n                    <h1>Nieuws</h1>\n                    <button className=\"subscribe-channel-button\" onClick={becomeMember}>{memberStatus}</button>\n                </div>\n                <div className=\"card-container\" style={{display: isMember}}>\n                    {news && news.map(item => (\n                        <div className=\"card\">\n                            <img className=\"card-banner\" src={item.Banner} alt=\"\" />\n                            <div className=\"article-card-user-container\">\n                                <img src={item.UserPhoto} alt=\"\" data-id={item.UserID} onClick={profileLink} />\n                                <p data-id={item.UserID} onClick={profileLink}>{item.User}</p>\n                                <p className=\"list-card-timestamp\">{item.Timestamp.toDate().toLocaleDateString(\"nl-NL\", options)}</p>\n                            </div>\n                            <div className=\"card-inner-container\">\n                                <h2>{item.Title}</h2>\n                                <button onClick={detailRouter} data-docid={item.docid} data-id={item.ID}>Bekijk</button>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n                </div>\n            <RightSideBar />\n        </div>\n    )\n}\n\nexport default News","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/ChatGroups.js",["1563","1564","1565","1566","1567","1568"],"import LeftSideBar from \"../LeftSideBar\"\nimport LeftSideBarFullScreen from \"../LeftSideBarFullScreen\"\nimport RightSideBar from \"../rightSideBar/RightSideBar\"\nimport { useFirestoreChatsGroups, useFirestoreGroupsAuth } from \"../../firebase/useFirestore\";\nimport { useHistory } from \"react-router-dom\";\nimport { db } from '../../firebase/config';\nimport { client } from '../../hooks/Client';\nimport groupIcon from '../../images/icons/group-icon.png'\nimport Location from \"../../hooks/Location\"\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\n\nconst ChatGroups = () => {\n    const [chatSummary, setChatSummary] = useState(\"\")\n    const [groupSummary, setGroupSummary] = useState(\"\")\n    const route = Location()[3]\n\n    const groups = useFirestoreGroupsAuth(route)\n    const history = useHistory()\n    const chats = useFirestoreChatsGroups(\"Chats\", route)\n\n    const menuState = MenuStatus()\n\n    // Chats Overview\n\n    const partnerName = async (member) => {\n\n    let userName = \"\"\n\n    if(member != route){\n\n        await db.collection(\"Users\")\n        .where(\"ID\", \"==\", member)\n        .get()\n        .then(querySnapshot => {\n            querySnapshot.forEach(doc => {\n\n                userName = doc.data().UserName\n\n                })\n            })\n        }\n\n    return userName\n    }\n\n    const partnerPhoto = async (member) => {\n\n        let photo = \"\"\n    \n        if(member != route){\n    \n            await db.collection(\"Users\")\n            .where(\"ID\", \"==\", member)\n            .get()\n            .then(querySnapshot => {\n                querySnapshot.forEach(doc => {\n    \n                    photo = doc.data().Photo\n    \n                    })\n                })\n            }\n    \n        return photo\n        }\n\n        const partnerID = async (member) => {\n\n            let id = \"\"\n        \n            if(member != route){\n        \n                await db.collection(\"Users\")\n                .where(\"ID\", \"==\", member)\n                .get()\n                .then(querySnapshot => {\n                    querySnapshot.forEach(doc => {\n        \n                        id = doc.data().ID\n        \n                        })\n                    })\n                }\n        \n            return id\n            }\n\n   const totalMessages = async (chatID) => {\n\n    let totalMessages = \"\"\n\n        await db.collection(\"Messages\")\n        .where(\"Compagny\", \"==\", client)\n        .where(\"ParentID\", \"==\", chatID)\n        .get()\n        .then(querySnapshot => {\n          totalMessages = querySnapshot.docs.length\n        })\n\n        return totalMessages\n   }\n\n   const newestMessages = async (chatID) => {\n\n    const messageArray = []\n\n        await db.collection(\"Messages\")\n        .where(\"Compagny\", \"==\", client)\n        .where(\"ParentID\", \"==\", chatID)\n        .get()\n        .then(querySnapshot => {\n            querySnapshot.forEach((doc) => {\n\n                const read = doc.data().Read\n\n                if(!read.includes(route)){\n\n                        messageArray.push(read)\n                    }\n                })\n            })\n\n        return messageArray.length\n   }\n\n   const chatsOverview = async () => {\n\n    const summary = {\n        chats:[]\n    }\n\n    for(const chat of chats){\n        const chatsArray = []\n\n        const allMessages = await totalMessages(chat.ID)\n        const newMessages = await newestMessages(chat.ID)\n\n        for(const member of chat.Members){\n            if(member != route){\n\n                const userName = await partnerName(member)\n                const photo = await partnerPhoto(member)\n                const id = await partnerID(member)\n\n                const chatObject = {\n                    userName: userName,\n                    photo: photo,\n                    id: id,\n                    messages: allMessages,\n                    newMessages: newMessages,\n                    chatID: chat.ID\n                }\n\n                chatsArray.push(\n                    chatObject\n                )\n            }\n        }\n\n        summary.chats.push(chatsArray)\n    }\n        return summary\n    }\n\n\n    useEffect(() => {\n        chatsOverview().then((summary) => {\n            setChatSummary(summary)\n        })\n        \n    }, [chats])\n\n    console.log(chatSummary)\n\n    const ChatsAuth = () => {\n         return (\n             chatSummary && chatSummary.chats.map(chat => (\n                chat.map(ch => ((\n                <div className=\"chatpartner-meta-container divider\" key={ch.id}>\n                    <div className=\"chatpartner-container\">\n                        <img src={ch.photo} alt=\"\" data-id={ch.chatID} onClick={updateRouteChat} />\n                        <p className=\"chat-overview-username\" data-id={ch.chatID} onClick={updateRouteChat}>{ch.userName}</p>\n                    </div>\n                    <p data-id={ch.chatID} onClick={updateRouteChat}>{ch.messages} berichten</p>\n                    <p className=\"new-messages\" data-id={ch.chatID} onClick={updateRouteChat}>{ch.newMessages} nieuw</p>\n                </div>\n                )))\n             ))\n         )\n    }\n \n    const updateRouteChat = (e) => {\n\n        const id = e.target.dataset.id\n\n        db.collection(\"Messages\")\n        .where(\"Compagny\", \"==\", client)\n        .where(\"ParentID\", \"==\", id)\n        .get()\n        .then(querySnapshot => {\n            querySnapshot.forEach((doc) => {\n\n                const read = doc.data().Read\n\n                if(!read.includes(route)){\n\n                        db.collection('Messages')\n                        .doc(doc.id)\n                        .update({\n                            Read:firebase.firestore.FieldValue.arrayUnion(route)\n                        })\n                    }\n                })\n            })\n            .then(() => {\n                history.push(`/${client}/ChatRoom/${id}`)\n            })\n    }\n\n    // Groups overview\n\n    const newGroupMessages = async (groupID) => {\n        const messageArray = []\n\n        await db.collection(\"Messages\")\n        .where(\"Compagny\", \"==\", client)\n        .where(\"ParentID\", \"==\", groupID)\n        .get()\n        .then(querySnapshot => {\n            querySnapshot.forEach((doc) => {\n\n                const read = doc.data().Read\n\n                if(!read.includes(route)){\n\n                        messageArray.push(read)\n                    }\n                })\n            })\n\n        return messageArray.length\n    }\n\n    const totalGroupMessages = async (groupID) => {\n\n        let totalMessages = \"\"\n    \n            await db.collection(\"Messages\")\n            .where(\"Compagny\", \"==\", client)\n            .where(\"ParentID\", \"==\", groupID)\n            .get()\n            .then(querySnapshot => {\n                console.log(querySnapshot.docs.length)\n              totalMessages = querySnapshot.docs.length\n            })\n    \n            return totalMessages\n       }\n\n    const groupsOverview = async () => {\n\n        const summary = {\n            groups:[]\n        }\n    \n        for(const group of groups){\n            const groupsArray = []\n    \n            const newMessages = await newGroupMessages(group.SubID)\n            const totalMessages = await totalGroupMessages(group.SubID)\n\n\n            const groupObject = {\n                room: group.SubName,\n                messages: totalMessages,\n                newMessages: newMessages,\n                ID: group.SubID\n            }\n\n            groupsArray.push(\n                groupObject\n            )\n\n            summary.groups.push(groupsArray)\n        }\n\n        return summary\n    }\n\n    useEffect(() => {\n        groupsOverview().then((summary) => {\n            setGroupSummary(summary)\n        })\n        \n    }, [groups])\n\n    const GroupsAuth = () => {\n        return (\n            groupSummary && groupSummary.groups.map(group => (\n                group.map(gr => (\n                    <div className=\"chats-overview-container divider\" key={gr.ID}>\n                    <div className=\"chatpartner-meta-container\" data-id={gr.ID} name={gr.ID}>\n                        <div className=\"chatpartner-container\">\n                            <img src={groupIcon} alt=\"\" data-id={gr.ID} onClick={updateRouteGroup} />\n                            <p className=\"chat-overview-username\" data-id={gr.ID} onClick={updateRouteGroup}>{gr.room}</p>\n                        </div>\n                        <p data-id={gr.ID} onClick={updateRouteGroup}>{gr.messages} berichten</p>\n                        <p data-id={gr.ID} className=\"new-messages\" onClick={updateRouteGroup}> {gr.newMessages} nieuw</p>\n                    </div>\n                </div>\n                ))\n            ))\n        )\n    }\n\n    const updateRouteGroup = (e) => {\n\n        const id = e.target.dataset.id\n\n        db.collection(\"Messages\")\n        .where(\"Compagny\", \"==\", client)\n        .where(\"ParentID\", \"==\", id)\n        .get()\n        .then(querySnapshot => {\n            querySnapshot.forEach((doc) => {\n\n                const read = doc.data().Read\n\n                if(!read.includes(route)){\n\n                    console.log(doc)\n\n                        db.collection('Messages')\n                        .doc(doc.id)\n                        .update({\n                            Read:firebase.firestore.FieldValue.arrayUnion(route)\n                        })\n                    }\n                })\n            })\n            .then(() => {\n                history.push(`/${client}/Group/${id}`)\n            })   \n    }\n\n    \n\n    return (\n            <div className=\"main\">\n                <LeftSideBar />\n                <LeftSideBarFullScreen/>\n                <div className=\"card-overview\" style={{display: menuState}}>\n                    <div className=\"page-header\">\n                        <h1>Chats en groepen</h1>\n                    </div>\n                    <div className=\"article\" >\n                        <h2>Chats</h2>\n                            <div className=\"chats-overview-container\">\n                                <ChatsAuth/>\n                            </div>\n                        <h2>Groepen</h2>\n                            <GroupsAuth/>\n                    </div>\n                </div>\n                <RightSideBar />\n            </div>\n    )\n}\n\nexport default ChatGroups","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/Introductions.js",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/Events.js",["1569","1570","1571","1572","1573","1574","1575","1576"],"import LeftSideBar from \"../LeftSideBar\"\nimport LeftSideBarFullScreen from \"../LeftSideBarFullScreen\"\nimport RightSideBar from \"../rightSideBar/RightSideBar\"\nimport { client } from '../../hooks/Client';\nimport { useFirestoreTimestamp, useFirestore, useFirestoreChannelName, useFirestoreSubscriptions } from \"../../firebase/useFirestore\";\nimport { useHistory } from \"react-router-dom\"\nimport { motion } from \"framer-motion\"\nimport { useState, useContext, useEffect } from 'react';\nimport { auth, db, timestamp } from '../../firebase/config';\nimport { Auth } from '../../StateManagment/Auth';\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport firebase from 'firebase';\nimport Location from \"../../hooks/Location\"\nimport uuid from 'react-uuid';\nimport Calendar from \"../Calender\";\n\nconst Events = () => {\n    const [authO] = useContext(Auth)\n    const [authID, setAuthID] = useState(null)\n    const [listViewTab, setListViewTab] = useState('active-tab')\n    const [calenderViewTab, setCalenderViewTab] = useState('not-active-tab')\n    const [listDisplay, setListDisplay] = useState('flex')\n    const [calenderDisplay, setCalenderDisplay] = useState('none')\n\n    const [channelID, setChannelID] = useState('')\n    const [isMember, setIsMember] = useState('none')\n    const [memberStatus, setMemberStatus] = useState('Abonneren')\n\n    const events = useFirestoreTimestamp(\"Events\")\n    const channels = useFirestoreChannelName('Events')\n    const subscriptions = useFirestoreSubscriptions(authID)\n\n    const menuState = MenuStatus()\n    const history = useHistory()\n    const route = Location()[3]\n    const id = uuid()\n\n    const variants = {\n        hidden: { opacity: 0 },\n        visible: { opacity: 1 },\n      }\n\n    useEffect(() => {\n        if(authO.ID != undefined){\n\n            setAuthID(authO.ID)\n        }\n    },[authO])\n\n      useEffect(() => {\n        subscriptions && subscriptions.forEach(sub => {\n\n            if(sub.SubID === route){\n\n                setIsMember('flex')\n                setMemberStatus('Geabonneerd')\n            }\n        })\n    },[subscriptions])\n\n    useEffect(() => {\n        channels && channels.forEach(channel => {\n            setChannelID(channel.ID)\n        })\n    },[channels])\n\n    const detailRouter = (e) => {\n\n        const id = e.target.dataset.id \n        const docid = e.target.dataset.docid\n\n        db.collection(\"Events\")\n        .doc(docid)\n        .update({\n            Clicks: firebase.firestore.FieldValue.arrayUnion(timestamp)\n        })\n        .then(() => {\n            history.push(`/${client}/EventDetail/${id}`)\n        })\n\n    }\n\n    const profileLink = (e) => {\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/PublicProfile/${id}`)\n    }\n\n    const becomeMember = (e) => {\n\n        e.target.innerText = 'Geabonneerd'\n\n        db.collection('Subscriptions')\n        .doc()\n        .set({\n            UserName: authO.UserName,\n            UserID: authO.ID,\n            UserEmail: authO.Email,\n            SubID: channelID,\n            SubName: 'Events',\n            Timestamp: timestamp,\n            Compagny: client,\n            ID: id,\n            Type: 'Channel'\n        })\n    }\n\n    const showListView = () => {\n        setListDisplay('flex')\n        setCalenderDisplay('none')\n        setListViewTab('active-tab')\n        setCalenderViewTab('not-active-tab')\n    }\n\n    const showCalenderView = () => {\n        setListDisplay('none')\n        setCalenderDisplay('flex')\n        setListViewTab('not-active-tab')\n        setCalenderViewTab('active-tab')\n    }\n\n    const CalenderView = () => {\n        return (\n\n            <div className=\"card-container\" style={{display: isMember}} style={{display: calenderDisplay}}>\n                <Calendar events={events}/>\n            </div>\n\n        )\n    }\n\n    return (\n        <div className=\"main\">\n            <LeftSideBar />\n            <LeftSideBarFullScreen/>\n            <div className=\"main-container\" style={{display: menuState}}>\n                <div className=\"page-header\">\n                    <h1>Events</h1>\n                    <button className=\"subscribe-channel-button\" onClick={becomeMember}>{memberStatus}</button>\n                    <div className='group-navigation-container'>\n                        <p className={listViewTab} onClick={showListView}>Lijst</p>\n                        <p className={calenderViewTab} onClick={showCalenderView}>Kalender</p>\n                    </div>\n                </div>\n                <div className=\"card-container\" style={{display: isMember}} style={{display: listDisplay}}>\n                    {events && events.map(even => (\n                        <div className=\"card\">\n                            <img className=\"card-banner\" src={even.Banner} alt=\"\" />\n                            <div className=\"list-inner-container\">\n                                <div className=\"article-card-user-container\">\n                                    <img src={even.UserPhoto} alt=\"\" data-id={even.UserID} onClick={profileLink} />\n                                    <p data-id={even.UserID} onClick={profileLink}>{even.User}</p>\n                                </div>\n                                <h2>{even.Title}</h2>\n                                <p>{even.Date}</p>\n                            </div>\n                            <div className=\"button-container\">\n                                <button onClick={detailRouter} data-docid={even.docid} data-id={even.ID}>Bekijk</button>\n                            </div>\n                        </div>\n                    ))}\n                 </div>\n                 <CalenderView/>\n            </div>\n            <RightSideBar />\n        </div>\n    )\n}\n\nexport default Events","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/MessageDetail.js",["1577","1578","1579","1580","1581","1582","1583","1584","1585"],"import { useFirestoreMessages, useFirestore, useFirestoreID } from \"../../firebase/useFirestore\"\nimport LeftSideBar from \"../LeftSideBar\"\nimport LeftSideBarFullScreen from \"../LeftSideBarFullScreen\"\nimport RightSideBar from \"../rightSideBar/RightSideBar\"\nimport ReactionBar from \"./ReactionBar\"\nimport LikeBar from \"./LikeBar\"\nimport { db, timestamp } from \"../../firebase/config\"\nimport { useHistory } from \"react-router-dom\"\nimport heartIcon from '../../images/icons/heart-icon.png'\nimport { client } from \"../../hooks/Client\"\nimport ArrowLeftIcon from '../../images/icons/arrow-left-icon.png'\nimport Location from \"../../hooks/Location\"\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport Reaction from \"./Reaction\"\nimport worldIcon from '../../images/icons/world-icon.png'\nimport { useState, useContext, useEffect } from \"react\"\nimport { Auth } from '../../StateManagment/Auth';\nimport GetYearMonth from '../../hooks/GetYearMonth'\nimport uuid from 'react-uuid';\nimport firebase from \"firebase\"\n\nconst MessageDetail = () => {\n    const [authO] = useContext(Auth)\n\n    const route = Location()[3]\n    const [goalLikeDiplay, setGoalLikeDiplay] = useState('none')\n    const [communityName, setCommunityName] = useState('')\n    const [logo, setLogo] = useState('')\n    const [impacteer, setImpacteer] = useState('none')\n\n    const messages = useFirestoreID(\"Messages\", route)\n    const compagny = useFirestore(\"CompagnyMeta\")\n    const impacteers = useFirestore('Impacteers')\n    const admins = useFirestore('Admins')\n\n    const history = useHistory()\n    const menuState = MenuStatus()\n    const getYearMonth = GetYearMonth()\n    const id = uuid()\n\n    useEffect(() => {\n        impacteers && impacteers.forEach(impacteer => {\n            if(impacteer.UserID === authO.ID){\n                setImpacteer('flex')\n            }\n        })\n    }, [impacteers])\n\n    useEffect(() => {\n        admins && admins.forEach(admin => {\n            if(admin.UserID === authO.ID){\n                setImpacteer('flex')\n            }\n        })\n    }, [admins])\n\n\n    useEffect(() => {\n        compagny && compagny.forEach(comp => {\n            const communityName = comp.CommunityName \n            const logo = comp.Logo \n \n            setCommunityName(communityName)\n            setLogo(logo)\n \n        })\n     }, [compagny])\n\n    let parentID = \"\"\n\n    messages && messages.forEach(message => {\n\n        parentID = message.ID\n        \n    })\n\n    let numberOfContributions = \"\"\n    let numberOfContributionsReaction = \"\"\n\n    messages && messages.forEach(message => {\n\n        if(message.Contributions != undefined){\n            if(message.Contributions.length === 0){\n                numberOfContributions = 0\n            } else {\n                numberOfContributions = message.Contributions.length\n            }\n        }\n    })\n\n    const reactions = useFirestoreMessages(\"Messages\", parentID )\n\n    reactions && reactions.forEach(reaction => {\n        if(reaction.Contributions != undefined){\n            if(reaction.Contributions.length === 0){\n                numberOfContributionsReaction = 0\n            } else {\n                numberOfContributionsReaction = reaction.Contributions.length\n            }\n        }\n    })\n\n    let numberOfReactions = \"\"\n\n    reactions && reactions.forEach(reaction => {\n\n        if(reaction.Thread.length === 0){\n            numberOfReactions = `Bekijk 0 reacties`\n        } else if (reaction.Thread.length === 1){\n            numberOfReactions = `Bekijk ${reaction.Thread.length} reactie`\n        } else {\n            numberOfReactions = `Bekijk ${reaction.Thread.length} reacties`\n        }\n\n    })\n\n    const updateRoute = () => {\n\n        reactions && reactions.forEach(reaction => {\n            history.push(`/${client}/MessageDetail/${reaction.ID}`)\n        })\n    }\n\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n\n\n    const showContributions = (e) => {\n\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/Contributions/${id}`)\n    }\n\n    const previousMessage = () => {\n\n        messages && messages.forEach(message => {\n\n            console.log(message.ID)\n\n            db.collection(\"Messages\")\n            .where(\"ID\", \"==\", message.ID)\n            .get()\n            .then(querySnapshot => {\n                querySnapshot.forEach(doc => {\n\n                    const prevPath = doc.data().PrevPath\n            \n                    history.push(`${prevPath}`)\n\n                })\n            })\n        })\n    }\n\n    const profileLink = (e) => {\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/PublicProfile/${id}`)\n    }\n\n    const toggleGoalLikeBar = () => {\n        if(goalLikeDiplay === 'none'){\n            setGoalLikeDiplay('flex')\n        } else if (goalLikeDiplay === 'flex'){\n            setGoalLikeDiplay('none')\n        }\n    }\n\n    const likeHandler = (e) => {\n\n        const userID = e.target.dataset.userid\n        const userDocID = e.target.dataset.userdocid\n        const userName = e.target.dataset.username\n        const userPhoto = e.target.dataset.userphoto\n        const messageID = e.target.dataset.messageid\n        const messageDocid = e.target.dataset.messagedocid\n        const message = e.target.dataset.message\n        const userEmail = e.target.dataset.useremail\n    \n        db.collection(\"Likes\")\n        .doc()\n        .set({\n            Timestamp: timestamp,\n            SenderID: authO.ID,\n            SenderName: authO.UserName,\n            SenderPhoto: authO.Photo,\n            RecieverID: userID,\n            RecieverName: userName,\n            RecieverPhoto: userPhoto,\n            MessageID: messageID,\n            MessageBody: message,\n            Read: false,\n            ID: id,\n            Compagny: client,\n        })\n        .then(() => {\n            db.collection(\"Notifications\")\n            .doc()\n            .set({\n                Timestamp: timestamp,\n                SenderID: authO.ID,\n                SenderName: authO.UserName,\n                SenderPhoto: authO.Photo,\n                RecieverID: userID,\n                MessageID: messageID,\n                MessageBody: message,\n                Read: false,\n                ID: id,\n                Header:`${authO.UserName} vindt jouw bericht`,\n                SubHeader:`leuk`,\n                Compagny: client,\n                Type: \"Like\"\n            })\n        })\n        .then(() => {\n            db.collection(\"Messages\")\n            .doc(messageDocid)\n            .update({\n                    Likes: firebase.firestore.FieldValue.increment(1)\n                })\n            })\n        .then(() => {\n            db.collection(\"Users\")\n            .doc(userDocID)\n            .update({\n                    Likes: firebase.firestore.FieldValue.increment(1)\n                })\n            })\n            .then(() => {\n\n                console.log(client, getYearMonth, userID)\n                \n                db.collection(\"LikeGraph\")\n                .where(\"Compagny\", \"==\", client)\n                .where(\"Month\", \"==\", getYearMonth)\n                .where('UserID', '==', userID )\n                .get()\n                .then(querySnapshot => {\n                    if(querySnapshot.empty === false){\n                        querySnapshot.forEach(doc => {\n\n                            console.log(\"bestaat\")\n\n                            db.collection(\"LikeGraph\")\n                            .doc(doc.id)\n                            .update({\n                                Contributions: firebase.firestore.FieldValue.increment(1)\n                            })\n                        })\n                    } else if (querySnapshot.empty === true){\n                        console.log(\"bestaat niet\")\n                        db.collection(\"LikeGraph\")\n                        .doc()\n                        .set({\n                            Month: getYearMonth,\n                            Contributions: 1,\n                            Compagny: client,\n                            LastActive: timestamp,\n                            ID: uuid(),\n                            UserName: userName,\n                            UserID: userID\n                        })\n                    } \n                })\n            })\n            .then (() => {\n                sendAsMail(userID, userEmail, userName)\n            })\n        \n    }\n\n    const sendAsMail = (userID, userEmail, userName) => {\n\n        db.collection(\"Email\").doc().set({\n            to: [userEmail],\n            cc: \"info@Deccos.nl\",\n            message: {\n            subject: `Je hebt een nieuwe like ontvangen in ${communityName}.`,\n            html: `Hallo ${userName}, </br></br>\n\n                Je hebt een nieuwe like ontvangen in ${communityName}.</br></br>\n\n                Bekijk de like <a href=\"https://www.deccos.co/${client}/Likes/${userID}\"><u>hier</u></a>.<br><br>\n                \n                Vriendelijke groet, </br></br>\n                ${communityName} </br></br>\n                <img src=\"${logo}\" width=\"100px\">`,\n            Gebruikersnaam: `${userName}`,\n            Emailadres: userEmail,\n            Type: \"Contribution\"\n              }     \n          }); \n    }\n\n    return (\n        <div className=\"main\">\n             <LeftSideBar />\n             <LeftSideBarFullScreen/>\n             <div className=\"card-overview\" style={{display: menuState}}>\n                <div className=\"previous-message-container\" onClick={previousMessage}>\n                    <img src={ArrowLeftIcon} alt=\"\" />\n                    <p>Vorige bericht</p>\n                 </div>\n                {messages && messages.map(message => (\n                    <div className=\"message-card\" key={message.ID}>\n                        <div className=\"auth-message-container\">\n                            <img src={message.UserPhoto} alt=\"\" data-id={message.UserID} onClick={profileLink} />\n                            <p className=\"auth-name\" data-id={message.UserID} onClick={profileLink}>{message.User}</p>\n                            <p className=\"message-card-timestamp\">{message.Timestamp.toDate().toLocaleDateString(\"nl-NL\", options)}</p>\n                        </div>\n                        <div className=\"massage\" dangerouslySetInnerHTML={{__html:message.Message}}></div>\n                        <div className='like-container'>\n                            <div className='like-icon-container'>\n                                <div className='like-icon-inner-container' onClick={toggleGoalLikeBar} style={{display: impacteer}}>\n                                    <img src={worldIcon} alt=\"\" />\n                                    <p className='notification-counter-small'>{message.Contributions.length}</p>\n                                </div>\n                                <div className='like-icon-inner-container'>\n                                    <img \n                                    src={heartIcon} \n                                    alt=\"\" \n                                    data-message={message.Message}\n                                    data-messageid={message.ID}\n                                    data-messagedocid={message.docid}\n                                    data-username={message.User}\n                                    data-userphoto={message.UserPhoto}\n                                    data-userid={message.UserID}\n                                    data-useremail ={message.Email}\n                                    data-userdocid={message.UserDocID}\n                                    onClick={likeHandler}/>\n                                    <p className='notification-counter-small'>{message.Likes}</p>\n                                </div>\n                            </div>\n                            <div style={{display: goalLikeDiplay}}>\n                                < LikeBar message={message} />\n                            </div>\n                        </div>\n                        < ReactionBar message={message} />\n                    </div>\n                ))}\n\n                <div>\n                    <p>----- Reacties -----</p>\n                </div>\n                <div className=\"reaction-area\">\n                {reactions && reactions.map(reaction => ( \n                   <Reaction message={reaction}/>\n                ))}\n            </div>\n            </div>\n             <RightSideBar />\n        </div>\n    )\n}\n\nexport default MessageDetail\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/ChatRoom.js",["1586","1587","1588","1589"],"import LeftSideBar from \"../LeftSideBar\"\nimport LeftSideBarFullScreen from \"../LeftSideBarFullScreen\"\nimport RightSideBar from \"../rightSideBar/RightSideBar\"\nimport { useFirestore, useFirestoreID, useFirestoreMessages, useFirestoreUser } from \"../../firebase/useFirestore\"\nimport MessageBarGroup from \"./MessageBarGroup\"\nimport emailIcon from '../../images/icons/email-icon.png'\nimport { db } from \"../../firebase/config\"\nimport { useEffect, useContext, useState} from \"react\"\nimport { Auth } from '../../StateManagment/Auth';\nimport Location from \"../../hooks/Location\"\nimport { client } from \"../../hooks/Client\";\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport { useHistory } from \"react-router-dom\"\nimport GetLink from '../../hooks/GetLink'\nimport deleteIcon from '../../images/icons/delete-icon.png'\nimport settingsIcon from '../../images/icons/settings-icon.png'\n\nconst ChatRoom = () => {\n    const [showSendMail, setShowSendMail] = useState(\"none\")\n    const [showOptions, setShowOptions] = useState('none')\n\n    const [authO] = useContext(Auth)\n    const route = Location()[3]\n    const menuState = MenuStatus()\n\n    const chats = useFirestoreID(\"Chats\", route)\n    const messages = useFirestoreMessages(\"Messages\", route)\n    const compagny = useFirestore(\"CompagnyMeta\")\n\n    const history = useHistory()\n    const options = {year: 'numeric', month: 'numeric', day: 'numeric' };\n\n    let userID = \"\"\n    let userName = \"\"\n    let email = \"\"\n    let room = \"\"\n\n    const redirect = () => {\n        chats && chats.forEach(chat => {\n            if(!chat.Members.includes(authO.ID)){\n                history.push(`/${client}/`)\n            }\n        })\n    }\n\n    redirect()\n\n    const messageClass = (message) => {\n        if(message.User === authO.UserName){\n            return \"auth-message\"\n        } else if (message.User != authO.UserName)  {\n            return \"user-message\"\n        }\n    }\n\n    // Define name of chatpartner\n    chats && chats.forEach(chat => {\n        const members = chat.Members\n\n        room = chat.ID\n\n        members && members.forEach(member => {\n            if(authO.ID != member){\n                userID = member\n            }\n        })\n    })\n\n    const chatPartners = useFirestoreUser(userID)\n\n    chatPartners && chatPartners.forEach(partner => {\n        userName = partner.UserName\n        email = partner.Email\n    })\n\n    let communityName = \"\"\n    let logo = \"\"\n\n    compagny && compagny.forEach(comp => {\n        communityName = comp.CommunityName\n        logo = comp.Logo\n    })\n\n    const sendAsMail = (e) => {\n        e.target.innerHTML = \"Verstuurd\"\n\n        db.collection(\"Email\").doc().set({\n            to: [email],\n            cc: \"info@Deccos.nl\",\n            message: {\n            subject: `${authO.UserName} heeft je een bericht gestuurd in jullie chat.`,\n            html: `Hallo ${userName}, </br></br>\n\n                ${authO.UserName} heeft je een bericht gestuurd in jullie chat.</br></br>\n\n                Bekijk het bericht <a href=\"https://www.deccos.co/${client}/ChatRoom/${room}\"><u>hier</u></a>.<br><br>\n                \n                Vriendelijke groet, </br></br>\n                ${communityName} </br></br>\n                <img src=\"${logo}\" width=\"100px\">`,\n            Gebruikersnaam: `${userName}`,\n            Emailadres: email,\n            Type: \"Chat\"\n              }     \n          }); \n    }\n\n    const optionsClass = (message) => {\n        if(message.User === authO.UserName){\n            return \"message-options-container\"\n        } else if (message.User != authO.UserName)  {\n            return \"hide-message-options\"\n        }\n    }\n\n    const emailOptions = () => {\n        if(showSendMail === \"none\"){\n            setShowSendMail(\"flex\")\n        } else if(showSendMail === \"flex\"){\n            setShowSendMail(\"none\")\n        }\n    }\n\n    const profileLink = (e) => {\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/PublicProfile/${id}`)\n    }\n\n    const deleteMessage = (e) => {\n        const id = e.target.dataset.id \n\n        db.collection('Messages')\n        .doc(id)\n        .delete()\n    }\n\n    const toggleOptions = () => {\n        if(showOptions === \"none\"){\n            setShowOptions(\"flex\")\n        } else if(showOptions === \"flex\"){\n            setShowOptions(\"none\")\n        }\n    }\n\n    const ChatScreen = () => {\n        return(\n            <div className=\"chat-screen\">\n            {messages && messages.map(message => (\n                <div className={messageClass(message)} key={message.ID}>\n                    <div className=\"sender-meta-container\">\n                        <img className=\"sender-photo\" src={message.UserPhoto} alt=\"\" data-id={message.UserID} onClick={profileLink}/>\n                        <p className=\"sender-name\" data-id={message.UserID} onClick={profileLink}>{message.User}</p>\n                        <p className=\"sender-timestamp\">{message.Timestamp.toDate().toLocaleDateString(\"nl-NL\", options)}</p>\n                    </div>\n                    <div dangerouslySetInnerHTML={{__html:GetLink(message)}}></div>\n                    <div className={optionsClass(message)}>\n                        <img className=\"notifications-icon-message\" onClick={toggleOptions} src={settingsIcon} alt=\"\"/>\n                        <div className='message-options-inner-container' style={{display: showOptions}}>\n                            <img className=\"notifications-icon-message\" data-message={message.Message} src={emailIcon} alt=\"\" onClick={emailOptions}/> \n                            <div style={{display: showSendMail}}>\n                                <button className='send-as-mail-button' onClick={sendAsMail}>Verstuur bericht als email</button>\n                            </div>\n                            <div className='delete-message-container'>\n                                <img className=\"notifications-icon-message\" data-id={message.docid} src={deleteIcon} onClick={deleteMessage} alt=\"\"/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ))}\n            <MessageBarGroup route={route} auth={authO} />\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"main\">\n            <LeftSideBar />\n            <LeftSideBarFullScreen/>\n            <div className=\"chat-container\" style={{display: menuState}}>\n                {chatPartners && chatPartners.map(user => (\n                    <div className=\"chat-header\" key={user.ID}>\n                        <div>\n                            <img className=\"user-image\" src={user.Photo} alt=\"\" data-id={user.ID} onClick={profileLink} /> \n                        </div>\n                        <div className=\"header-title-container\">\n                            <p>Chat met</p>\n                            <h2 className=\"user-image\" key={user.ID} data-id={user.ID} onClick={profileLink}>{user.UserName}</h2> \n                        </div>\n                    </div>\n                ))}\n               <ChatScreen/>\n            </div>\n            <RightSideBar />\n        </div>\n          \n    )\n}\n\nexport default ChatRoom\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/AddNews.js",["1590","1591","1592","1593"],"import LeftSideBarAuthProfile from \"../LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \"../LeftSideBarAuthProfileFullScreen\";\nimport RightSideBar from \"../rightSideBar/RightSideBar\"\nimport { useState } from 'react'\nimport { motion } from \"framer-motion\"\nimport { db, timestamp } from \"../../firebase/config.js\"\nimport { client } from '../../hooks/Client';\nimport { Link } from \"react-router-dom\";\nimport uuid from 'react-uuid';\nimport { useFirestore, useFirestoreChannelName } from '../../firebase/useFirestore.js';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { useRef, useContext, useEffect } from 'react';\nimport firebase from 'firebase'\nimport { bucket } from '../../firebase/config';\nimport spinnerRipple from '../../images/spinner-ripple.svg'\nimport { Auth } from '../../StateManagment/Auth';\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport imageIcon from '../../images/icons/image-icon.png'\nimport Modal from 'react-modal';\n\nconst AddNews = () => {\n    const [authO] = useContext(Auth)\n\n    const [title, setTitle] = useState(\"\")\n    const [body, setBody] = useState(\"\")\n    const [bannerPhoto, setBannerPhoto] = useState(\"\")\n    const [loader, setLoader] = useState(\"\")\n    const [headerPhoto, setHeaderPhoto] = useState('')\n    const [modalOpen, setModalOpen] = useState(false)\n    const [channelID, setChannelID] = useState('')\n\n    const banners = useFirestore('Banners')\n    const channels = useFirestoreChannelName('News')\n\n    const editorRef = useRef(null);\n    const menuState = MenuStatus()\n    const id = uuid()\n    Modal.setAppElement('#root');\n\n    const modalStyles = {\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)',\n        },\n      };\n\n    // Set channel ID to state\n\n    useEffect(() => {\n        channels && channels.forEach(channel => {\n            if(channel.Name === 'News'){\n                setChannelID(channel.ID)\n            }\n        })\n    }, [channels])\n\n    const variants = {\n        hidden: { opacity: 0 },\n        visible: { opacity: 1 },\n      }\n\n    useEffect(() => {\n        banners && banners.forEach(banner => {\n            const header = banner.NewNews\n            console.log(header)\n            setHeaderPhoto(header)\n        })\n    }, [banners])\n\n    const titleHandler = (e) => {\n        const title = e.target.value\n        setTitle(title)\n    }\n\n    const bodyHandler = (e) => {\n        if (editorRef.current) {\n            setBody(editorRef.current.getContent());\n            }\n    }\n\n    const photoHandler = (e) => {\n        setLoader(spinnerRipple)\n\n        const photo = e.target.files[0]\n\n        const storageRef = bucket.ref(\"/ProfilePhotos/\" + photo.name);\n        const uploadTask = storageRef.put(photo)\n\n        uploadTask.then(() => {\n          \n            uploadTask.on('state_changed', snapshot => {\n            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            switch (snapshot.state) {\n            case firebase.storage.TaskState.PAUSED:\n                console.log('Upload is paused');\n                break;\n            case firebase.storage.TaskState.RUNNING:\n                console.log('Upload is running');\n                break;\n            }\n            }, (err) => {\n                alert(err)\n            }, () => {\n            uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n            console.log('File available at', downloadURL);\n\n            setBannerPhoto(downloadURL)\n            setLoader(downloadURL)\n\n                })\n            })\n        })\n    }\n\n    const imageHandler = (e) => {\n        const image = e.target.files[0]\n\n        const fileType = image.type.split(\"/\")\n\n        const storageRef = bucket.ref(\"/ProfilePhotos/\" + image.name);\n        const uploadTask = storageRef.put(image)\n\n        uploadTask.then(() => {\n          \n            uploadTask.on('state_changed', snapshot => {\n            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            switch (snapshot.state) {\n            case firebase.storage.TaskState.PAUSED:\n                console.log('Upload is paused');\n                break;\n            case firebase.storage.TaskState.RUNNING:\n                console.log('Upload is running');\n                break;\n            }\n            }, (err) => {\n                alert(err)\n            }, () => {\n            uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n            console.log('File available at', downloadURL);\n\n            if (editorRef.current) {\n                if(fileType[0] === \"image\"){\n                    editorRef.current.insertContent(\n                        `\n                        <img style=\"width:80%\" src=\"${downloadURL}\">\n                        `\n                        )\n                } else if(fileType[0] === \"video\"){\n                    editorRef.current.insertContent(\n                        `\n                        <video width=\"90%\" height=\"90%\" controls autoplay muted>\n                            <source src=\"${downloadURL}\">\n                        </video>\n                        `\n                    )\n                } else if(fileType[0] === \"application\"){\n                    editorRef.current.insertContent(\n\n                        `\n                        <embed src=\"${downloadURL}\" width=\"90% height=\"90%\"></embed>\n                        `\n                    )\n                } else {\n                    editorRef.current.insertContent(`<div> src=${downloadURL}</div>`);\n                }\n                }\n                })\n            })\n        })\n    }\n\n    const closeModal = () => {\n        setModalOpen(false);\n      }\n    \n    const afterOpenModal = () => {\n\n    }\n    \n    const saveEvent = (e) => {\n\n        db.collection(\"News\")\n        .doc()\n        .set({\n            Title: title,\n            Body: body,\n            Compagny: client,\n            Timestamp: timestamp,\n            ID: id,\n            User: authO.UserName,\n            UserPhoto: authO.Photo,\n            UserID: authO.ID,\n            Banner: bannerPhoto,\n            ChannelID: channelID\n        })\n        .then(() => {\n            db.collection(\"AllActivity\")\n            .doc()\n            .set({\n                Title: title,\n                Type: \"NewNews\",\n                Compagny: client,\n                Timestamp: timestamp,\n                ID: id,\n                Description: \"heeft een nieuws item toegevoegd:\",\n                ButtonText: \"Bekijk bericht\",\n                User: authO.UserName,\n                UserPhoto: authO.Photo,\n                UserID: authO.ID,\n                Banner: headerPhoto,\n                Link: `NewsDetail/${id}`\n            }) \n        })\n        .then(() => {\n            db.collection(\"Search\")\n            .doc()\n            .set({\n                Name: title,\n                Compagny: client,\n                Type: 'Nieuws item',\n                Link: `NewsDetail/${id}`\n            })\n        })\n    }\n\n    return (\n        <div className=\"main\">\n             <LeftSideBarAuthProfile />\n            <LeftSideBarAuthProfileFullScreen/>\n            <motion.div className=\"article\"\n            initial=\"hidden\"\n            animate=\"visible\"\n            variants={variants}\n            style={{display: menuState}}>\n                <div className=\"card-header\">\n                        <h2>Voeg een nieuws item toe</h2>\n                        <p>Voeg een nieuws item toe om de leden van de community op de hoogte te houden van de laatste ontwikkelingen</p>\n                </div>\n                <form id=\"add-goal-form\">\n                    <div className=\"divider\">\n                        <h4>Geef het nieuws item een titel</h4>\n                        <input type=\"text\" placeholder=\"Schrijf hier de titel\" onChange={titleHandler} />\n                    </div>\n                    <Modal\n                        isOpen={modalOpen}\n                        onAfterOpen={afterOpenModal}\n                        onRequestClose={closeModal}\n                        style={modalStyles}\n                        contentLabel=\"Upload file\"\n                    >\n                    <div className='add-image-container'>\n                        <img src={imageIcon} alt=\"\" />\n                        <p>Voeg een plaatje of video toe</p>\n                        <input onChange={imageHandler} type=\"file\" />\n                    </div>\n                    </Modal>\n                    <div className=\"divider\">\n                        <h4>Schrijf het nieuws item</h4>\n                        <Editor onChange={bodyHandler}\n                        apiKey=\"dz1gl9k5tz59z7k2rlwj9603jg6xi0bdbce371hyw3k0auqm\"\n                        onInit={(evt, editor) => editorRef.current = editor}\n                        init={{\n                        height: 500,\n                        menubar: false,\n                        plugins: [\n                            'advlist autolink lists link image charmap print preview anchor',\n                            'searchreplace visualblocks code fullscreen',\n                            'insertdatetime media table paste code help'\n                        ],\n                        toolbar: 'undo redo | formatselect | ' +\n                        'bold italic backcolor | imageFunction | alignleft aligncenter ' +\n                        'alignright alignjustify | bullist numlist outdent indent | ' +\n                        'removeformat | help',\n                        setup: function (editor) {\n\n                            editor.ui.registry.addButton('imageFunction', {\n                              icon: 'image',\n                              onAction: function (_) {\n                                setModalOpen(true);\n                              },\n                            });\n                        },\n                        content_style: 'body { font-family: Raleway, sans-serif; font-size:14px; color: gray }'\n                        }}\n                        />\n                    </div>\n                    <div className=\"divider\">\n                        <h4>Voeg een bannerfoto toe</h4>\n                        <input onChange={photoHandler} type=\"file\" />\n                        <div className=\"spinner-container\">\n                            <img src={loader} alt=\"\" />\n                        </div> \n                    </div>\n                </form>\n                <div id=\"button-add-event\">\n                    <Link to={`/${client}/News`}><button onClick={saveEvent}>Opslaan</button></Link>\n                </div>\n            </motion.div>\n            <RightSideBar />\n        </div>\n    )\n}\n\nexport default AddNews\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/ArticleDetail.js",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/AddEvent.js",["1594","1595","1596","1597","1598","1599","1600","1601"],"import LeftSideBarAuthProfile from \"../LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \"../LeftSideBarAuthProfileFullScreen\";\nimport RightSideBar from \"../rightSideBar/RightSideBar\"\nimport { motion } from \"framer-motion\"\nimport { db, timestamp } from \"../../firebase/config.js\"\nimport { client } from '../../hooks/Client';\nimport { Link } from \"react-router-dom\";\nimport uuid from 'react-uuid';\nimport { useFirestore, useFirestoreChannelName, useFirestoreID} from '../../firebase/useFirestore.js';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { useRef, useContext, useState, useEffect } from 'react';\nimport firebase from 'firebase'\nimport { bucket } from '../../firebase/config';\nimport spinnerRipple from '../../images/spinner-ripple.svg'\nimport { Auth } from '../../StateManagment/Auth';\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport imageIcon from '../../images/icons/image-icon.png'\nimport Modal from 'react-modal';\n\nconst AddEvent = () => {\n    const [authO] = useContext(Auth)\n    const [memberIDArray, setMemberIDArray] = useState('')\n    const [selectedEmailUser, setSelectedEmailUser] = useState('')\n    const [userName, setuserName] = useState('')\n    const [title, setTitle] = useState(\"\")\n    const [body, setBody] = useState(\"\")\n    const [bannerPhoto, setBannerPhoto] = useState(\"\")\n    const [loader, setLoader] = useState(\"\")\n    const [capacity, setCapacity] = useState(\"\")\n    const [price, setPrice] = useState(\"\")\n    const [date, setDate] = useState(\"\")\n    const [locationType, setLocationType] = useState(\"\")\n    const [locationName, setLocationName] = useState(\"\")\n    const [street, setStreet] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n    const [physicalLocationDisplay, setPhysicalLocationDisplay] = useState(\"none\")\n    const [headerPhoto, setHeaderPhoto] = useState('')\n    const [modalOpen, setModalOpen] = useState(false)\n    const [channelID, setChannelID] = useState('')\n\n    const id = uuid()\n    const compagny = useFirestore(\"CompagnyMeta\")\n    const channels = useFirestoreChannelName('Events')\n    const banners = useFirestore('Banners')\n\n    const editorRef = useRef(null);\n    const menuState = MenuStatus()\n    Modal.setAppElement('#root');\n\n    const modalStyles = {\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)',\n        },\n      };\n\n    // Set channel ID to state\n\n    useEffect(() => {\n        channels && channels.forEach(channel => {\n            if(channel.Name === 'Events'){\n                setChannelID(channel.ID)\n            }\n        })\n\n    }, [channels])\n\n    useEffect(() => {\n        banners && banners.forEach(banner => {\n            const header = banner.NewEvent\n            setHeaderPhoto(header)\n        })\n    }, [banners])\n\n    useEffect(() => {\n        memberIDArray && memberIDArray.forEach(ID => {\n            db.collection('Users')\n            .where('ID', '==', ID)\n            .get()\n            .then(querySnapshot => {\n                querySnapshot.forEach(doc => {\n                    console.log(doc)\n                })\n            })\n        })\n        \n    }, [channels])\n\n    const variants = {\n        hidden: { opacity: 0 },\n        visible: { opacity: 1 },\n      }\n\n    let communityName = \"\"\n    let logo = \"\"\n\n    compagny && compagny.forEach(comp => {\n        communityName = comp.CommunityName\n        logo = comp.Logo\n    })\n    \n    useEffect(() => {\n\n        const memberID = []\n\n        channels && channels.forEach(channel => {\n            channel.Members.forEach(member => {\n                memberID.push(member)\n            })\n        })\n\n        setMemberIDArray(memberID)\n    },[channels])\n\n    const titleHandler = (e) => {\n        const title = e.target.value\n        setTitle(title)\n    }\n\n    const bodyHandler = (e) => {\n        if (editorRef.current) {\n            setBody(editorRef.current.getContent());\n            }\n    }\n\n    const locationTypeSelect = (e) => {\n\n        const type = e.target.value\n\n        setLocationType(type)\n\n        if(type === \"online\"){\n            setPhysicalLocationDisplay(\"none\")\n        } else if (type === \"physical-location\"){\n            setPhysicalLocationDisplay(\"block\")\n        }\n\n    }\n\n    const locationNameHandler = (e) => {\n        const locationName = e.target.value\n        setLocationName(locationName)\n    }\n\n    const locationStreetHandler = (e) => {\n        const street = e.target.value\n        setStreet(street)\n    }\n\n    const cityHandler = (e) => {\n        const city = e.target.value\n        setCity(city)\n    }\n\n    const dateHandler = (e) => {\n        const date = e.target.value\n        setDate(date)\n    }\n\n    const priceHandler = (e) => {\n        const price = e.target.value\n        setPrice(price)\n    }\n\n    const capacityHandler = (e) => {\n        const capacity = e.target.value\n        setCapacity(capacity)\n    }\n\n    const photoHandler = (e) => {\n        setLoader(spinnerRipple)\n\n        const photo = e.target.files[0]\n\n        const storageRef = bucket.ref(\"/ProfilePhotos/\" + photo.name);\n        const uploadTask = storageRef.put(photo)\n\n        uploadTask.then(() => {\n          \n            uploadTask.on('state_changed', snapshot => {\n            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            switch (snapshot.state) {\n            case firebase.storage.TaskState.PAUSED:\n                console.log('Upload is paused');\n                break;\n            case firebase.storage.TaskState.RUNNING:\n                console.log('Upload is running');\n                break;\n            }\n            }, (err) => {\n                alert(err)\n            }, () => {\n            uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n            console.log('File available at', downloadURL);\n\n            setBannerPhoto(downloadURL)\n            setLoader(downloadURL)\n\n                })\n            })\n        })\n    }\n\n    const imageHandler = (e) => {\n        const image = e.target.files[0]\n\n        const fileType = image.type.split(\"/\")\n\n        const storageRef = bucket.ref(\"/ProfilePhotos/\" + image.name);\n        const uploadTask = storageRef.put(image)\n\n        uploadTask.then(() => {\n          \n            uploadTask.on('state_changed', snapshot => {\n            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            switch (snapshot.state) {\n            case firebase.storage.TaskState.PAUSED:\n                console.log('Upload is paused');\n                break;\n            case firebase.storage.TaskState.RUNNING:\n                console.log('Upload is running');\n                break;\n            }\n            }, (err) => {\n                alert(err)\n            }, () => {\n            uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n            console.log('File available at', downloadURL);\n\n            if (editorRef.current) {\n                if(fileType[0] === \"image\"){\n                    editorRef.current.insertContent(\n                        `\n                        <img style=\"width:80%\" src=\"${downloadURL}\">\n                        `\n                        )\n                } else if(fileType[0] === \"video\"){\n                    editorRef.current.insertContent(\n                        `\n                        <video width=\"90%\" height=\"90%\" controls autoplay muted>\n                            <source src=\"${downloadURL}\">\n                        </video>\n                        `\n                    )\n                } else if(fileType[0] === \"application\"){\n                    editorRef.current.insertContent(\n\n                        `\n                        <embed src=\"${downloadURL}\" width=\"90% height=\"90%\"></embed>\n                        `\n                    )\n                } else {\n                    editorRef.current.insertContent(`<div> src=${downloadURL}</div>`);\n                }\n                }\n                })\n            })\n        })\n    }\n\n    const closeModal = () => {\n        setModalOpen(false);\n      }\n    \n    const afterOpenModal = () => {\n\n    }\n    \n    const saveEvent = (e) => {\n\n        db.collection(\"Events\")\n        .doc()\n        .set({\n            Title: title,\n            Body: body,\n            Compagny: client,\n            Timestamp: timestamp,\n            ID: id,\n            User: authO.UserName,\n            UserPhoto: authO.Photo,\n            UserID: authO.ID,\n            Price: price,\n            Capacity: capacity,\n            Date: date,\n            Banner: bannerPhoto,\n            Location: locationType,\n            LocationName: locationName,\n            LocationAdres: street,\n            LocationCity: city,\n            Type: 'Event',\n            ChannelID: channelID\n        })\n        .then(() => {\n            db.collection(\"AllActivity\")\n            .doc()\n            .set({\n                Title: title,\n                Type: \"NewEvent\",\n                Compagny: client,\n                Timestamp: timestamp,\n                ID: id,\n                Description: \"heeft een nieuw event toegevoegd:\",\n                ButtonText: \"Bekijk event\",\n                User: authO.UserName,\n                UserPhoto: authO.Photo,\n                UserID: authO.ID,\n                Banner: headerPhoto,\n                Link: `EventDetail/${id}`\n            }) \n        })\n        .then(() => {\n            db.collection(\"Search\")\n            .doc()\n            .set({\n                Name: title,\n                Compagny: client,\n                Type: 'Event',\n                Link: `EventDetail/${id}`\n            })\n        })\n        .then(() => {\n            db.collection(\"Email\").doc().set({\n                to: selectedEmailUser,\n                cc: \"info@Deccos.nl\",\n                message: {\n                subject: `${authO.UserName} heeft een nieuw event geplaatst in het kanaal Events.`,\n                html: `Hallo , </br></br>\n    \n                    ${authO.UserName} heeft een nieuw event geplaatst in het kanaal Events.</br></br>\n\n                    Titel:${title}</br></br>\n    \n                    Bekijk het event <a href=\"https://www.deccos.co/${client}/EventDetail/${id}\"><u>hier</u></a>.<br><br>\n                    \n                    Vriendelijke groet, </br></br>\n                    ${communityName} </br></br>\n                    <img src=\"${logo}\" width=\"100px\">`,\n                Gebruikersnaam: `${userName}`,\n                Emailadres: selectedEmailUser,\n                Type: \"Group\"\n                  }     \n              });\n        })\n    }\n\n    return (\n        <div className=\"main\">\n             <LeftSideBarAuthProfile />\n            <LeftSideBarAuthProfileFullScreen/>\n            <motion.div className=\"article\"\n            initial=\"hidden\"\n            animate=\"visible\"\n            variants={variants}\n            style={{display: menuState}}>\n                <div className=\"card-header\">\n                        <h2>Voeg een event toe</h2>\n                        <p>Voeg een nieuw event waar de leden van de community zich voor aan kunnen melden</p>\n                </div>\n                <form id=\"add-goal-form\">\n                    <div className=\"divider\">\n                        <h4>Geef het event een titel</h4>\n                        <input type=\"text\" placeholder=\"Schrijf hier de titel\" onChange={titleHandler} />\n                    </div >\n                    <Modal\n                        isOpen={modalOpen}\n                        onAfterOpen={afterOpenModal}\n                        onRequestClose={closeModal}\n                        style={modalStyles}\n                        contentLabel=\"Upload file\"\n                    >\n                    <div className='add-image-container'>\n                        <img src={imageIcon} alt=\"\" />\n                        <p>Voeg een plaatje of video toe</p>\n                        <input onChange={imageHandler} type=\"file\" />\n                    </div>\n                    </Modal>\n                    <div className=\"divider\">\n                        <h4>Geef het event een omschrijving</h4>\n                        <Editor onChange={bodyHandler}\n                        apiKey=\"dz1gl9k5tz59z7k2rlwj9603jg6xi0bdbce371hyw3k0auqm\"\n                        onInit={(evt, editor) => editorRef.current = editor}\n                        init={{\n                        height: 500,\n                        menubar: false,\n                        plugins: [\n                            'advlist autolink lists link image charmap print preview anchor',\n                            'searchreplace visualblocks code fullscreen',\n                            'insertdatetime media table paste code help'\n                        ],\n                        toolbar: 'undo redo | formatselect | ' +\n                        'bold italic backcolor | imageFunction | alignleft aligncenter ' +\n                        'alignright alignjustify | bullist numlist outdent indent | ' +\n                        'removeformat | help',\n                        setup: function (editor) {\n\n                            editor.ui.registry.addButton('imageFunction', {\n                              icon: 'image',\n                              onAction: function (_) {\n                                setModalOpen(true);\n                              },\n                            });\n                        },\n                        content_style: 'body { font-family: Raleway, sans-serif; font-size:14px; color: gray }'\n                        }}\n                        />\n                    </div>\n                    <div className=\"divider\">\n                        <h4>Voeg een bannerfoto toe</h4>\n                        <input onChange={photoHandler} type=\"file\" />\n                        <div className=\"spinner-container\">\n                            <img src={loader} alt=\"\" />\n                        </div> \n                    </div>\n                    <div className=\"divider\">\n                        <h4>Is het event online of heeft een fysieke locatie?</h4>\n                        <select name=\"\" id=\"\" onChange={locationTypeSelect}>\n                            <option value=\"\">--- Selecteer ---</option>\n                            <option value=\"online\">Online</option>\n                            <option value=\"physical-location\">Fysieke locatie</option>\n                        </select>\n                        <div style={{display: physicalLocationDisplay}}>\n                            <h5>Naam locatie</h5>\n                            <input type=\"text\" placeholder=\"Schrijf hier de naam van de locatie\" onChange={locationNameHandler} />\n                            <h5>Locatie straat en huisnummer</h5>\n                            <input type=\"text\" placeholder=\"Schrijf hier de straat en het huisnummer van de locatie\" onChange={locationStreetHandler} />\n                            <h5>Locatie stad of dorp</h5>\n                            <input type=\"text\" placeholder=\"Schrijf hier in welke stad of dorp het evenement plaats vindt\" onChange={cityHandler} />\n                        </div>\n                    </div>\n                    <div className=\"divider\">\n                        <h4>Wanneer vindt het event plaats?</h4>\n                        <input type=\"date\" onChange={dateHandler} />\n                    </div>\n                    <div className=\"divider\">\n                        <h4>Hoeveel kost het event?</h4>\n                        <input type=\"number\" onChange={priceHandler} />\n                    </div>\n                    <div className=\"divider\">\n                        <h4>Wat is het maximaal aantal deelnemers?</h4>\n                        <input type=\"number\" onChange={capacityHandler}/>\n                    </div>\n                </form>\n                <div className=\"button-container\" id=\"button-add-event\">\n                    <Link to={`/${client}/Events`}><button onClick={saveEvent}>Opslaan</button></Link>\n                </div>\n            </motion.div>\n            <RightSideBar />\n        </div>\n    )\n}\n\nexport default AddEvent\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/GroupSettings.js",["1602"],"import RightSideBar from \"../rightSideBar/RightSideBar\"\nimport LeftSideBarAuthProfile from \"../LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \"../LeftSideBarAuthProfileFullScreen\";\nimport { useState, useContext, useEffect } from \"react\";\nimport uuid from 'react-uuid';\nimport { db, timestamp } from \"../../firebase/config\";\nimport settingsIcon from '../../images/icons/settings-icon.png'\nimport { useFirestore } from \"../../firebase/useFirestore\";\nimport { client } from '../../hooks/Client';\nimport { Auth } from '../../StateManagment/Auth';\nimport { useHistory } from \"react-router-dom\";\nimport MenuStatus from \"../../hooks/MenuStatus\";\n\nconst GroupSettings = () => {\n    const [authO] = useContext(Auth)\n\n    const [groupTitle, setGroupTitle] = useState(\"\")\n    const [headerPhoto, setHeaderPhoto] = useState('')\n\n    const groups = useFirestore(\"Groups\")\n    const banners = useFirestore('Banners')\n    \n    const history = useHistory();\n    const menuState = MenuStatus()\n   \n    const id = uuid()\n\n    useEffect(() => {\n        banners && banners.forEach(banner => {\n            const header = banner.NewGroup\n            setHeaderPhoto(header)\n        })\n    }, [banners])\n\n    const newGroupTitleHandler = (e) => {\n        const groupTitle = e.target.value\n\n        setGroupTitle(groupTitle)\n    }\n\n    const newMember = {\n        ID: authO.ID,\n        Photo: authO.Photo,\n        UserName: authO.UserName\n    }\n\n    const saveNewGroup = () => {\n        db.collection(\"Groups\")\n        .doc()\n        .set({\n            ID: id,\n            Admin: authO.ID,\n            Room: groupTitle,\n            MemberList: [\n                authO.ID\n            ],\n            Members: [\n                newMember\n            ],\n            Timestamp: timestamp,\n            Compagny: client,\n            Messages: 0,\n            Banner: \"https://firebasestorage.googleapis.com/v0/b/deccos-app.appspot.com/o/GroupBanners%2FHero-III.jpg?alt=media&token=6464f58e-6aa7-4522-9bb6-3b8c723496d7\"\n        })\n        .then(() => {\n            db.collection('GroupChannels')\n            .doc()\n            .set({\n                Name: groupTitle,\n                Timestamp: timestamp,\n                ID: id,\n                Compagny: client,\n            })\n        })\n        .then(() => {\n            db.collection(\"AllActivity\")\n            .doc()\n            .set({\n                Title: groupTitle,\n                Type: \"NewGroup\",\n                Compagny: client,\n                Timestamp: timestamp,\n                ID: id,\n                Description: \"heeft een nieuwe groep toegevoegd:\",\n                ButtonText: \"Bekijk groep\",\n                User: authO.UserName,\n                UserPhoto: authO.Photo,\n                UserID: authO.ID,\n                Banner: headerPhoto,\n                Link: `${client}/GroupLanding/${id}`\n            }) \n        })\n        .then(() => {\n            db.collection(\"Search\")\n            .doc()\n            .set({\n                Name: groupTitle,\n                Compagny: client,\n                Type: 'Groep',\n                Link: `Group/${id}`\n            })\n        })\n    }\n\n    const channelSettings = (e) => {\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/GroupSettingsDetail/${id}`)\n    }\n\n    return (\n        <div className=\"main\">\n            <LeftSideBarAuthProfile />\n            <LeftSideBarAuthProfileFullScreen/>\n            <div className='profile profile-auth-profile' style={{display: menuState}}>\n                <div className=\"settings-inner-container\">\n                    <div className=\"divider card-header\">\n                        <h1>Groepen</h1>\n                        <p>Pas de instellingen van je groepen aan</p>\n                    </div>\n                    <h3>Groepen</h3>\n                    <div className=\"divider\">\n                        {groups && groups.map(group => (\n                        <div className=\"channel-container\" key={group.ID}>\n                            <h3>{group.Room}</h3>\n                            <div className=\"icon-container\">\n                                <img src={settingsIcon} data-id={group.ID} onClick={channelSettings} />\n                            </div>\n                        </div>\n                        ))}\n                    </div>\n                    <div className=\"divider\">\n                        <h3>Groep toevoegen</h3>\n                        <div className=\"new-group-container\">\n                            <p>Geef je groep een naam</p>\n                            <input className=\"input-classic\" type=\"text\" placeholder=\"Schrijf hier de naam van het nieuwe kanaal\" onChange={newGroupTitleHandler}/>\n                        </div>\n                        <div className=\"button-container\">\n                            <button className=\"button-simple\" onClick={saveNewGroup}>Toevoegen</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <RightSideBar/>\n        </div>\n    )\n}\n\nexport default GroupSettings\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/Channel.js",["1603","1604","1605"],"import LeftSideBar from \"../LeftSideBar\";\nimport LeftSideBarFullScreen from \"../LeftSideBarFullScreen\"\nimport RightSideBar from \"../rightSideBar/RightSideBar\"\nimport { client } from '../../hooks/Client';\nimport { useFirestoreChannelItems, useFirestoreID, useFirestoreChannelName, useFirestoreSubscriptions } from \"../../firebase/useFirestore\";\nimport { useHistory } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport Location from \"../../hooks/Location\"\nimport { useState, useContext, useEffect } from 'react';\nimport { auth, db, timestamp } from '../../firebase/config';\nimport { Auth } from '../../StateManagment/Auth';\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport firebase from 'firebase';\nimport uuid from 'react-uuid';\n\nconst Channel = () => {\n    const [authO] = useContext(Auth)\n    const [isMember, setIsMember] = useState('none')\n    const [memberStatus, setMemberStatus] = useState('Abonneren')\n    const [channelTitle, setChannelTitle] = useState('')\n\n    const route = Location()[3]\n    const menuState = MenuStatus()\n    const channels = useFirestoreID(\"Channels\", route)\n    const items = useFirestoreChannelItems(\"ChannelItems\", route)\n    const channelsName = useFirestoreChannelName(channelTitle)\n    const subscriptions = useFirestoreSubscriptions(authO.ID)\n    const id = uuid()\n\n    const history = useHistory()\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n    const variants = {\n        hidden: { opacity: 0 },\n        visible: { opacity: 1 },\n      }\n    \n\n    useEffect(() => {\n        channels && channels.forEach(channel => {\n            setChannelTitle(channel.Name)\n        })\n    }, [channels])\n\n    useEffect(() => {\n        subscriptions && subscriptions.forEach(sub => {\n            if(sub.SubID === route){\n                setIsMember('flex')\n                setMemberStatus('Geabonneerd')\n            }\n        })\n    },[subscriptions])\n\n    const updateRoute = (e) => {\n\n        const channelID = e.target.dataset.id\n        const docid = e.target.dataset.docid\n\n        db.collection(\"ChannelItems\")\n        .doc(docid)\n        .update({\n            Clicks: firebase.firestore.FieldValue.arrayUnion(timestamp)\n        })\n        .then(() => {\n            history.push(`/${client}/ChannelDetail/${channelID}`)\n        })\n\n    }\n\n    const profileLink = (e) => {\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/PublicProfile/${id}`)\n    }\n\n    const becomeMember = (e) => {\n\n        e.target.innerText = 'Geabonneerd'\n\n        const channelID = e.target.dataset.id\n        const name = e.target.dataset.name\n\n        db.collection('Subscriptions')\n        .doc()\n        .set({\n            UserName: authO.UserName,\n            UserID: authO.ID,\n            SubID: channelID,\n            UserEmail: authO.Email,\n            SubName: name,\n            Timestamp: timestamp,\n            Compagny: client,\n            ID: id,\n            Type: 'Channel'\n        })\n\n    }\n\n    return (\n        <div className=\"main\">\n            <LeftSideBar />\n            <LeftSideBarFullScreen/>\n            <div className=\"main-container\" style={{display: menuState}}>\n            {channels && channels.map(channel => (\n                <>\n                <div className=\"page-header\">\n                    <h1>{channelTitle}</h1>\n                    <button className=\"subscribe-channel-button\" data-name={channel.Name} data-id={channel.ID} onClick={becomeMember}>{memberStatus}</button>\n                </div>\n                <div className=\"card-container\" style={{display: isMember}}>\n                    {items && items.map(item => (\n                        <motion.div  initial=\"hidden\"\n                        animate=\"visible\"\n                        variants={variants} \n                        className=\"card\">\n                            <div key={item.ID}>\n                                <img className=\"card-banner\" src={item.Banner} alt=\"\" />\n                                <div className=\"list-inner-container\">\n                                    <div className=\"article-card-user-container\">\n                                        <img src={item.UserPhoto} alt=\"\" data-id={item.UserID} onClick={profileLink} />\n                                        <p data-id={item.UserID}>{item.User}</p>\n                                    </div>\n                                    <h2>{item.Title}</h2>\n                                    <p>{item.Timestamp.toDate().toLocaleDateString(\"nl-NL\", options)}</p>\n                                </div>\n                                <div className=\"button-container\">\n                                    <button onClick={updateRoute} data-docid={item.docid} data-id={item.ID}>Bekijk</button>\n                                </div>\n                            </div>\n                        </motion.div>\n                    )) }\n                </div>\n            </>\n            ))}\n            </div>\n            <RightSideBar />\n        </div>\n    )\n}\n\nexport default Channel","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/GroupLanding.js",["1606","1607","1608","1609"],"import LeftSideBar from \"../LeftSideBar\"\nimport RightSideBar from \"../rightSideBar/RightSideBar\"\nimport { useFirestoreID, useFirestoreSubscriptions, useFirestoreSubscriptionsChannelGroup, useFirestoreAdmins, useFirestore } from \"../../firebase/useFirestore\"\nimport { db, timestamp } from \"../../firebase/config\"\nimport { useHistory } from \"react-router\"\nimport { client } from '../../hooks/Client';\nimport { useContext, useState, useEffect } from 'react';\nimport { Auth } from '../../StateManagment/Auth';\nimport Location from \"../../hooks/Location\"\nimport uuid from 'react-uuid';\n\nconst GroupLanding = () => {\n    const [authO] = useContext(Auth)\n    const [authID, setAuthID] = useState(null)\n    const [groupID, setGroupID] = useState('')\n    const [groupDocID, setGroupDocID] = useState('')\n    const [groupName, setGroupName] = useState('')\n    const [showButton, setShowButton] = useState('block')\n    const [showNotice, setShowNotice] = useState('none')\n    const [memberCount, setMemberCount] = useState('')\n    const [creationDate, setCreationDate] = useState('')\n    const [adminEmail, setAdminEmail] = useState('')\n    const [communityNameDB, setCommunityNameDB] = useState(\"\")\n\n    const route = Location()[3]\n\n    const groups = useFirestoreID(\"Groups\", route)\n    const subscriptions = useFirestoreSubscriptions(authID)\n    const members = useFirestoreSubscriptionsChannelGroup(route)\n    const admins = useFirestoreAdmins('Admins')\n    const compagny = useFirestore(\"CompagnyMeta\")\n\n    const history = useHistory()\n    const id = uuid()\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n\n    // No undefined auth\n\n    useEffect(() => {\n        if(authO.ID != undefined){\n\n            setAuthID(authO.ID)\n        }\n    },[authO])\n\n    // Client communityname\n\n    useEffect(() => {\n        compagny && compagny.forEach(comp => {\n            setCommunityNameDB(comp.CommunityName)\n        })\n    }, [compagny])\n\n    // Find emailadresses of community admins\n\n    useEffect(() => {\n        const adminArray = []\n        admins && admins.forEach(admin => {\n            adminArray.push(admin.Email)\n        })\n        setAdminEmail(adminArray)\n    }, [admins])\n\n    // Set groups information in state\n\n    useEffect(() => {\n        groups && groups.forEach(group => {\n            setGroupID(group.ID)\n            setGroupDocID(group.docid)\n            setGroupName(group.Room)\n            setCreationDate(group.Timestamp.toDate().toLocaleDateString(\"nl-NL\", options))\n        })\n    }, [groups])\n\n    // Check if auth is member\n\n    useEffect(() => {\n        members && members.forEach(member => {\n\n            if(member.UserID === authO.ID && member.Approved === true){\n\n                history.push(`/${client}/Group/${groupID}`)\n            } else if(member.UserID === authO.ID && member.Approved === false) {\n                setShowButton('none')\n                setShowNotice('block')\n            }\n        })\n    },[members])\n\n    // Set number of members in state\n\n    useEffect(() => {\n        setMemberCount(members.length)\n        \n    }, [members])\n\n    // Subscribe to group\n\n    const subscribeToGroup = () => {\n        db.collection('Subscriptions')\n        .doc()\n        .set({\n            UserName: authO.UserName,\n            UserID: authO.ID,\n            UserPhoto: authO.Photo,\n            UserEmail: authO.Email,\n            SubID: groupID,\n            SubDocid: groupDocID,\n            SubName: groupName,\n            Timestamp: timestamp,\n            Compagny: client,\n            Approved: false,\n            ID: id,\n            Type: 'Group'\n        })\n        .then(() => {\n\n            db.collection(\"Email\").doc().set({\n                to: adminEmail,\n                cc: \"info@Deccos.nl\",\n                message: {\n                subject: `Iemand heeft zich aangemeld voor de groep ${groupName} op ${communityNameDB}`,\n                html: `\n                Iemand heeft zich aangemeld voor de groep ${groupName} op ${communityNameDB}. <br><br>\n    \n                    Naam: ${authO.UserName}. <br><br>\n    \n                    Dit lidmaatschap moet door een beheerder worden goedgekeurd.<br><br>\n    \n                    <a href='https://deccos.co/${client}/Registrations'>Klik hier</a> om de alle openstaande aanvragen te beheren.<br><br>\n                    \n                    `,\n                Gebruikersnaam: `${authO.UserName}`,\n                Emailadres: adminEmail,\n                Type: \"Verification group\"\n                  }     \n              });\n        })\n    }\n\n    return (\n        <div className=\"main\"> \n            <LeftSideBar />\n            {groups && groups.map(group => (\n                <>\n                <div className=\"profile\">\n                    <div className=\"group-landing-container\">\n                        <h2>{group.Room}</h2>\n                        <img src={group.Banner} alt=\"\" />\n                    </div>\n                    <div id=\"group-meta-div\">\n                        <p><b>Aantal leden:</b> {memberCount}</p>\n                        <p><b>Gecreerd op:</b> {creationDate}</p>\n                    </div>\n                    <div id='group-notice' style={{display: showNotice}}>\n                        <h3>In de wacht</h3>\n                        <p>Je aanmelding wordt door een beheerder van de groep gecontroleerd. Zodra je aanmelding is goedgekeurd ontvang je een email en kun je direct deelnemen aan de groep.</p>\n                    </div>\n                    <div className=\"button-container\" style={{display: showButton}}>\n                        <button onClick={subscribeToGroup}>Aanmelden</button>\n                    </div>\n                </div>\n            <RightSideBar /> \n            </> \n            ))}\n        </div>\n    )\n}\n\nexport default GroupLanding\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/KnowledgeCentre.js",["1610","1611","1612","1613","1614"],"import { client } from '../../hooks/Client';\nimport LeftSideBar from \"../LeftSideBar\"\nimport LeftSideBarFullScreen from \"../LeftSideBarFullScreen\"\nimport RightSideBar from \"../rightSideBar/RightSideBar\"\nimport ArticleCard from './ArticleCard';\nimport { useFirestore, useFirestoreChannelName, useFirestoreSubscriptions } from '../../firebase/useFirestore.js';\nimport { motion } from \"framer-motion\"\nimport { useState, useContext, useEffect } from 'react';\nimport { auth, db, timestamp } from '../../firebase/config';\nimport { Auth } from '../../StateManagment/Auth';\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport Location from \"../../hooks/Location\"\nimport uuid from 'react-uuid';\n\nconst KnowledgeCentre = () => {\n    const [authO] = useContext(Auth)\n    const [authID, setAuthID] = useState(null)\n\n    const [channelID, setChannelID] = useState('')\n    const [isMember, setIsMember] = useState('none')\n    const [memberStatus, setMemberStatus] = useState('Abonneren')\n\n    const docs = useFirestore(\"KnowledgeCentre\")\n    const channels = useFirestoreChannelName('Kenniscentrum')\n    const subscriptions = useFirestoreSubscriptions(authID)\n\n    const menuState = MenuStatus()\n    const route = Location()[3]\n    const id = uuid()\n\n    useEffect(() => {\n        if(authO.ID != undefined){\n\n            setAuthID(authO.ID)\n        }\n    },[authO])\n\n    const variants = {\n        hidden: { opacity: 0 },\n        visible: { opacity: 1 },\n      }\n\n    useEffect(() => {\n        subscriptions && subscriptions.forEach(sub => {\n            if(sub.SubID === route){\n                setIsMember('flex')\n                setMemberStatus('Geabonneerd')\n            }\n        })\n    },[subscriptions])\n\n    useEffect(() => {\n        channels && channels.forEach(channel => {\n            setChannelID(channel.ID)\n        })\n    },[channels])\n\n    const becomeMember = (e) => {\n\n        e.target.innerText = 'Geabonneerd'\n\n        db.collection('Subscriptions')\n        .doc()\n        .set({\n            UserName: authO.UserName,\n            UserID: authO.ID,\n            UserEmail: authO.Email,\n            SubID: channelID,\n            SubName: 'Kenniscentrum',\n            Timestamp: timestamp,\n            Compagny: client,\n            ID: id,\n            Type: 'Channel'\n        })\n\n    }\n\n    return (\n        <div className=\"main\">\n             <LeftSideBar />\n             <LeftSideBarFullScreen/>\n             <div className=\"main-container\" style={{display: menuState}}>\n                <div className=\"page-header\">\n                    <h1>Kenniscentrum</h1>\n                    <button className=\"subscribe-channel-button\" onClick={becomeMember}>{memberStatus}</button>\n                </div>\n                <div className=\"card-container\" style={{display: isMember}}>\n                    {docs && docs.map(doc => (\n                        <ArticleCard doc={doc} key={doc.ID} />\n                    ))}\n                </div>\n            </div>\n            <RightSideBar />\n        </div>\n    )\n}\n\nexport default KnowledgeCentre\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/ChannelSettingsDetail.js",["1615","1616","1617","1618","1619","1620","1621","1622","1623","1624","1625"],"import RightSideBar from \"../rightSideBar/RightSideBar\"\nimport LeftSideBarAuthProfile from \"../LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \"../LeftSideBarAuthProfileFullScreen\";\nimport deleteIcon from '../../images/icons/delete-icon.png'\nimport { useState, useEffect } from \"react\";\nimport uuid from 'react-uuid';\nimport { db } from \"../../firebase/config\";\nimport { useFirestoreID, useFirestoreChannelItems } from \"../../firebase/useFirestore\";\nimport { client } from '../../hooks/Client';\nimport { useHistory } from \"react-router-dom\"\nimport Location from \"../../hooks/Location\"\nimport ListLayout from '../../images/Design/list-mockup.png'\nimport CardLayout from '../../images/Design/card-mockup.png'\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport plusIcon from '../../images/icons/plus-icon.png'\n\nconst ChannelSettingsDetail = () => {\n    const [channelName, setChannelName] = useState(\"\")\n    const [channelLayout, setChannelLayout] = useState(\"\")\n    const [channelBannerLayout, setChannelBannerLayout] = useState(\"\")\n    const [channelItemsList, setChannelItemsList] = useState('')\n\n    const route = Location()[3]\n    const menuState = MenuStatus()\n\n    const channels = useFirestoreID(\"Channels\", route)\n    const history = useHistory()\n    const channelItemsKnowledgeCentre = useFirestoreChannelItems('KnowledgeCentre', route)\n    const channelItemsEvents = useFirestoreChannelItems('Events', route)\n    const channelItemsNews = useFirestoreChannelItems('News', route)\n    const channelItems = useFirestoreChannelItems('ChannelItems', route)\n\n    // Set channel items to an array\n\n    const itemsArray = []\n\n    channelItemsKnowledgeCentre && channelItemsKnowledgeCentre.forEach(item => {\n        itemsArray.push(item)\n    })\n\n    channelItemsEvents && channelItemsEvents.forEach(item => {\n        itemsArray.push(item)\n    })\n\n    channelItemsNews && channelItemsNews.forEach(item => {\n        itemsArray.push(item)\n    })\n\n    channelItems && channelItems.forEach(item => {\n        itemsArray.push(item)\n    })\n\n    const nameHandler = (e) => {\n        const name = e.target.value\n\n        setChannelName(name)\n    }\n\n    console.log(itemsArray)\n\n    const saveName = () => {\n\n        channels && channels.forEach(channel => {\n\n            db.collection(\"Channels\")\n            .doc(channel.docid)\n            .update({\n                Name: channelName,\n            })\n\n        })\n    }\n\n    const deleteChannel = (e) => {\n        const ID = e.target.dataset.id\n\n        db.collection(\"Channels\")\n        .where(\"ID\", \"==\", ID)\n        .onSnapshot(querySnapshot => {\n            querySnapshot.forEach(doc => {\n\n                console.log(doc.id)\n                db.collection(\"Channels\")\n                .doc(doc.id)\n                .delete()\n            })\n        })  \n        \n        history.push(`/${client}/ChannelSettings`)\n    }\n\n    const selectListLayout = () => {\n        setChannelLayout(\"list\")\n        setChannelBannerLayout(\"list-banner\")\n    }\n\n    const selectCardLayout = () => {\n        setChannelLayout(\"card\")\n        setChannelBannerLayout(\"card-banner\")\n    }\n\n    const saveLayout = () => {\n        channels && channels.forEach(channel => {\n\n            db.collection(\"Channels\")\n            .doc(channel.docid)\n            .update({\n                Layout: channelLayout,\n                BannerLayout: channelBannerLayout\n            })\n\n        })\n    }\n\n    const deleteItem = (e) => {\n        const id = e.target.dataset.id\n        const name = e.target.dataset.name\n\n        let collection = ''\n\n        if(name === 'Kenniscentrum'){\n            collection = 'KnowledgeCentre'\n        } else if(name === 'Nieuws'){\n            collection = 'News'\n        } else if(name === 'Events'){\n            collection = 'Events'\n        } else {\n            collection = 'ChannelItems'\n        }\n\n        db.collection(collection)\n        .doc(id)\n        .delete()\n    }\n\n    const addItem = (e) => {\n\n        const name = e.target.dataset.name\n        const channelID = e.target.dataset.id\n\n        if(name === 'Kenniscentrum'){\n            history.push(`/${client}/AddArticle`)\n        } else if(name === 'Nieuws'){\n            history.push(`/${client}/AddNews`)\n        } else if(name === 'Events'){\n            history.push(`/${client}/AddEvent`)\n        } else {\n            history.push(`/${client}/AddChannelItem/${channelID}`)\n        }\n\n    }\n\n    return (\n        <div className=\"main\">\n            <LeftSideBarAuthProfile />\n            <LeftSideBarAuthProfileFullScreen/>\n            {channels && channels.map(channel => (\n                <div className='profile profile-auth-profile' style={{display: menuState}}>\n                    <div className=\"divider card-header\">\n                        <h2>{channel.Name} instellingen</h2>\n                        <p>Pas de instellingen van het kanaal {channel.Name} aan</p>\n                    </div>\n                    <div className=\"divider\">\n                        <h3>Titel</h3>\n                        <input className=\"input-classic\" type=\"text\" defaultValue={channel.Name} onChange={nameHandler}/>\n                        <div className=\"button-container\">\n                            <button className=\"button-simple\" onClick={saveName}>Opslaan</button>\n                        </div>\n                    </div>\n                    <div className='divider'>\n                        <h3>{channel.Name} items</h3>\n                        {itemsArray && itemsArray.map(item => (\n                            <div className='channel-container'>\n                                <p>{item.Title}</p>\n                                <img className=\"delete-channel\" src={deleteIcon} data-name={item.Name} data-id={item.docid} onClick={deleteItem} />\n                            </div>\n                        ))}\n                    </div>\n                    <div className='divider'>\n                        <h3>{channel.Name} item toevoegen</h3>\n                        <img src={plusIcon} id='add-item-channel-settings-detail-button' alt=\"\" data-name={channel.Name} data-id={channel.ID} onClick={addItem} />\n                    </div>\n                    {/* <div className=\"divider\">\n                        <h3>Layout</h3>\n                        <div className=\"layout-container\">\n                            <div className=\"layout-inner-div\" onClick={selectListLayout}>\n                                <h5>Lijst</h5>\n                                <img src={ListLayout} alt=\"\" />\n                            </div>\n                            <div className=\"layout-inner-div\" onClick={selectCardLayout}>\n                                <h5>Kaart</h5>\n                                <img src={CardLayout} alt=\"\" />\n                            </div>\n                        </div>\n                        <div className=\"button-container\">\n                            <button className=\"button-simple\" onClick={saveLayout}>Opslaan</button>\n                        </div>\n                    </div> */}\n                    <div className=\"divider\">\n                        <h3>{channel.Name} verwijderen</h3>\n                        <img className=\"delete-channel\" src={deleteIcon} data-id={channel.ID} onClick={deleteChannel} />\n                    </div>\n                </div>\n            ))}\n            <RightSideBar/>\n        </div>\n    )\n}\n\nexport default ChannelSettingsDetail\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/AddChannelItem.js",["1626","1627","1628","1629","1630"],"import LeftSideBarAuthProfile from \"../LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \"../LeftSideBarAuthProfileFullScreen\";\nimport RightSideBar from \"../rightSideBar/RightSideBar\"\nimport { motion } from \"framer-motion\"\nimport { db, timestamp } from \"../../firebase/config.js\"\nimport { client } from '../../hooks/Client';\nimport { useHistory } from \"react-router-dom\";\nimport uuid from 'react-uuid';\nimport { Auth } from '../../StateManagment/Auth';\nimport { useFirestore, useFirestoreID } from '../../firebase/useFirestore.js';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { useRef, useContext, useState, useEffect } from 'react';\nimport firebase from 'firebase'\nimport { bucket } from '../../firebase/config';\nimport spinnerRipple from '../../images/spinner-ripple.svg'\nimport Location from \"../../hooks/Location\"\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport imageIcon from '../../images/icons/image-icon.png'\nimport Modal from 'react-modal';\n\nconst AddChannelItem = () => {\n    const [authO] = useContext(Auth)\n    const [channelName, setChannelName] = useState(\"\")\n    const [headerPhoto, setHeaderPhoto] = useState('')\n    const [title, setTitle] = useState(\"\")\n    const [body, setBody] = useState(\"\")\n    const [bannerPhoto, setBannerPhoto] = useState(\"\")\n    const [loader, setLoader] = useState(\"\")\n    const [modalOpen, setModalOpen] = useState(false);\n\n    const route = Location()[3]\n\n    const channels = useFirestoreID(\"Channels\", route)\n    const compagny = useFirestore(\"CompagnyMeta\")\n    const banners = useFirestore('Banners')\n\n    const id = uuid()\n    const editorRef = useRef(null);\n    const history = useHistory()\n    const menuState = MenuStatus()\n    Modal.setAppElement('#root');\n\n    const modalStyles = {\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)',\n        },\n      };\n\n    const variants = {\n        hidden: { opacity: 0 },\n        visible: { opacity: 1 },\n      }\n\n    useEffect(() => {\n        banners && banners.forEach(banner => {\n            const header = banner.NewChannelItem\n            console.log(header)\n            setHeaderPhoto(header)\n        })\n    }, [banners])\n\n    useEffect(() => {\n        channels && channels.forEach(channel => {\n            setChannelName(channel.Name)\n        })\n    }, [channels])\n\n    const titleHandler = (e) => {\n        const title = e.target.value\n        setTitle(title)\n    }\n\n    const bodyHandler = (e) => {\n        if (editorRef.current) {\n            setBody(editorRef.current.getContent());\n            }\n    }\n\n    const photoHandler = (e) => {\n        setLoader(spinnerRipple)\n\n        const photo = e.target.files[0]\n\n        const storageRef = bucket.ref(\"/ProfilePhotos/\" + photo.name);\n        const uploadTask = storageRef.put(photo)\n\n        uploadTask.then(() => {\n          \n            uploadTask.on('state_changed', snapshot => {\n            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            switch (snapshot.state) {\n            case firebase.storage.TaskState.PAUSED:\n                console.log('Upload is paused');\n                break;\n            case firebase.storage.TaskState.RUNNING:\n                console.log('Upload is running');\n                break;\n            }\n            }, (err) => {\n                alert(err)\n            }, () => {\n            uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n            console.log('File available at', downloadURL);\n\n            setBannerPhoto(downloadURL)\n            setLoader(downloadURL)\n\n                })\n            })\n        })\n    }\n\n    const imageHandler = (e) => {\n        const image = e.target.files[0]\n\n        const fileType = image.type.split(\"/\")\n\n        const storageRef = bucket.ref(\"/ProfilePhotos/\" + image.name);\n        const uploadTask = storageRef.put(image)\n\n        uploadTask.then(() => {\n          \n            uploadTask.on('state_changed', snapshot => {\n            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            switch (snapshot.state) {\n            case firebase.storage.TaskState.PAUSED:\n                console.log('Upload is paused');\n                break;\n            case firebase.storage.TaskState.RUNNING:\n                console.log('Upload is running');\n                break;\n            }\n            }, (err) => {\n                alert(err)\n            }, () => {\n            uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n            console.log('File available at', downloadURL);\n\n            if (editorRef.current) {\n                if(fileType[0] === \"image\"){\n                    editorRef.current.insertContent(\n                        `\n                        <img style=\"width:80%\" src=\"${downloadURL}\">\n                        `\n                        )\n                } else if(fileType[0] === \"video\"){\n                    editorRef.current.insertContent(\n                        `\n                        <video width=\"90%\" height=\"90%\" controls autoplay muted>\n                            <source src=\"${downloadURL}\">\n                        </video>\n                        `\n                    )\n                } else if(fileType[0] === \"application\"){\n                    editorRef.current.insertContent(\n\n                        `\n                        <embed src=\"${downloadURL}\" width=\"90% height=\"90%\"></embed>\n                        `\n                    )\n                } else {\n                    editorRef.current.insertContent(`<div> src=${downloadURL}</div>`);\n                }\n                }\n                })\n            })\n        })\n    }\n\n    const closeModal = () => {\n        setModalOpen(false);\n      }\n    \n    const afterOpenModal = () => {\n\n    }\n    \n    const saveItem = () => {\n\n        db.collection(\"ChannelItems\")\n        .doc()\n        .set({\n            Title: title,\n            Body: body,\n            Compagny: client,\n            Timestamp: timestamp,\n            ID: id,\n            ChannelID: route,\n            User: authO.UserName,\n            UserPhoto: authO.Photo,\n            UserID: authO.ID,\n            Banner: bannerPhoto\n        })\n        .then(() => {\n            db.collection(\"AllActivity\")\n            .doc()\n            .set({\n                Title: title,\n                Type: `New Item`,\n                Compagny: client,\n                Timestamp: timestamp,\n                ID: id,\n                Description: `heeft een nieuw item aan ${channelName} toegevoegd:`,\n                ButtonText: \"Bekijk bericht\",\n                User: authO.UserName,\n                UserPhoto: authO.Photo,\n                UserID: authO.ID,\n                Banner: headerPhoto,\n                Link: `ChannelDetail/${id}`\n            }) \n        })\n        .then(() => {\n            db.collection(\"Search\")\n            .doc()\n            .set({\n                Name: title,\n                Compagny: client,\n                Type: 'KanaalItem',\n                Link: `ChannelDetail/${id}`\n            })\n        })\n        .then(() => {\n    \n            history.push(`/${client}/Channel/${route}`)\n        })\n    }\n\n    return (\n        <div className=\"main\">\n            <LeftSideBarAuthProfile />\n            <LeftSideBarAuthProfileFullScreen/>\n            <motion.div className=\"article\"\n            initial=\"hidden\"\n            animate=\"visible\"\n            variants={variants}\n            style={{display: menuState}}>\n                <div className=\"card-header\">\n                        <h2>Voeg een item toe aan {channelName} </h2>\n                </div>\n                <form id=\"add-goal-form\">\n                    <div className=\"divider\">\n                        <h4>Geef het item een titel</h4>\n                        <input type=\"text\" placeholder=\"Schrijf hier de titel\" onChange={titleHandler} />\n                    </div >\n                    <Modal\n                        isOpen={modalOpen}\n                        onAfterOpen={afterOpenModal}\n                        onRequestClose={closeModal}\n                        style={modalStyles}\n                        contentLabel=\"Upload file\"\n                    >\n                    <div className='add-image-container'>\n                        <img src={imageIcon} alt=\"\" />\n                        <p>Voeg een plaatje of video toe</p>\n                        <input onChange={imageHandler} type=\"file\" />\n                    </div>\n                    </Modal>\n                    <div className=\"divider\">\n                        <h4>Geef het item een omschrijving</h4>\n                        <Editor onChange={bodyHandler}\n                        apiKey=\"dz1gl9k5tz59z7k2rlwj9603jg6xi0bdbce371hyw3k0auqm\"\n                        onInit={(evt, editor) => editorRef.current = editor}\n                        init={{\n                        height: 500,\n                        menubar: false,\n                        plugins: [\n                            'advlist autolink lists link image charmap print preview anchor',\n                            'searchreplace visualblocks code fullscreen',\n                            'insertdatetime media table paste code help'\n                        ],\n                        toolbar: 'undo redo | formatselect | ' +\n                        'bold italic backcolor | imageFunction | alignleft aligncenter ' +\n                        'alignright alignjustify | bullist numlist outdent indent | ' +\n                        'removeformat | help',\n                        setup: function (editor) {\n\n                            editor.ui.registry.addButton('imageFunction', {\n                              icon: 'image',\n                              onAction: function (_) {\n                                setModalOpen(true);\n                              },\n                            });\n                        },\n                        content_style: 'body { font-family: Raleway, sans-serif; font-size:14px; color: gray }'\n                        }}\n                        />\n                    </div>\n                    <div className=\"divider\">\n                        <h4>Voeg een bannerfoto toe</h4>\n                        <input onChange={photoHandler} type=\"file\" />\n                        <div className=\"spinner-container\">\n                            <img src={loader} alt=\"\" />\n                        </div> \n                    </div>\n                </form>\n                <div className=\"button-container\" id=\"button-add-event\">\n                    <button onClick={saveItem}>Opslaan</button>\n                </div>\n            </motion.div>\n            <RightSideBar />\n        </div>\n    )\n}\n\nexport default AddChannelItem\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/ChannelDetail.js",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/EventDetail.js",["1631","1632","1633"],"import { useFirestoreID, useFirestoreMessages, useFirestoreMyEvents, useFirestore, useFirestoreAdmins } from \"../../firebase/useFirestore\"\nimport LeftSideBar from \"../LeftSideBar\"\nimport LeftSideBarFullScreen from \"../LeftSideBarFullScreen\"\nimport RightSideBar from \"../rightSideBar/RightSideBar\"\nimport MessageBar from \"../Community/MessageBar\"\nimport { db, timestamp } from \"../../firebase/config\"\nimport { useState, useContext, useEffect } from \"react\"\nimport Location from \"../../hooks/Location\"\nimport HouseIcon from \"../../images/icons/house-icon.png\"\nimport CalendarIcon from \"../../images/icons/calendar-icon.png\"\nimport InformationIcon from \"../../images/icons/information-icon.png\"\nimport Reaction from \"./Reaction\"\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport { useHistory } from \"react-router-dom\"\nimport { client } from \"../../hooks/Client\"\nimport uuid from 'react-uuid';\nimport { Auth } from '../../StateManagment/Auth';\n\n\nconst EventDetail = () => {\n    const [authO] = useContext(Auth)\n    const [authID, setAuthID] = useState(null)\n    const [psysicalDisplay, setPsysicalDisplay] = useState(\"\")\n    const [onlineDisplay, setOnlineDisplay] = useState(\"\")\n    const [eventButtonClass, setEventButtonClass] = useState('event-detail-button')\n    const [showCalendarButton, setShowCalendarButton] = useState('show-calendar-button-hidden')\n    const [adminEmail, setAdminEmail] = useState('')\n    const [communityNameDB, setCommunityNameDB] = useState(\"\")\n\n    const route = Location()[3]\n    const menuState = MenuStatus()\n    const history = useHistory()\n\n    const events = useFirestoreID(\"Events\", route)\n    const messages  = useFirestoreMessages(\"Messages\", route)\n    const authEvents = useFirestoreMyEvents(authID)\n    const admins = useFirestoreAdmins('Admins')\n    const compagny = useFirestore(\"CompagnyMeta\")\n\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n\n    // Store auth id in state if auth id is not undefinded\n\n    useEffect(() => {\n        if(authO.ID != undefined){\n\n            setAuthID(authO.ID)\n        }\n    },[authO])\n\n    // Check id auth has signed up for event\n\n    useEffect(() => {\n        authEvents && authEvents.forEach(vnt => {\n            if(vnt.ID === route){\n                setEventButtonClass('event-detail-button-signedup')\n                setShowCalendarButton('show-calendar-button')\n            }\n        })\n    },[authEvents])\n\n    // Find emailadresses of community admins\n\n    useEffect(() => {\n        const adminArray = []\n        admins && admins.forEach(admin => {\n            adminArray.push(admin.Email)\n        })\n        setAdminEmail(adminArray)\n    }, [admins])\n\n    // Client communityname\n\n    useEffect(() => {\n        compagny && compagny.forEach(comp => {\n            setCommunityNameDB(comp.CommunityName)\n        })\n    }, [compagny])\n\n    const locationDisplay = () => {\n\n        db.collection(\"Events\")\n        .where(\"ID\", \"==\", route)\n        .get()\n        .then(querySnapshot => {\n            querySnapshot.forEach(doc => {\n                const location = doc.data().Location\n\n                console.log(location)\n\n                if(location === \"online\"){\n                    setOnlineDisplay(\"block\")\n                    setPsysicalDisplay(\"none\")\n                } else if(location === \"physical-location\"){\n                    setOnlineDisplay(\"none\")\n                    setPsysicalDisplay(\"block\")\n                }\n            })\n        })\n\n    }\n\n    locationDisplay()\n\n    const profileLink = (e) => {\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/PublicProfile/${id}`)\n    }\n\n    const eventSignup = (e) => {\n\n        e.target.innerText = 'Aangemeld'\n        e.target.style.backgroundColor = 'white'\n        e.target.style.borderColor = 'lightgray'\n        e.target.style.color = 'lightgray'\n\n        const date = e.target.dataset.date \n        const title = e.target.dataset.title \n        const id = e.target.dataset.id \n\n        db.collection('EventSignups') \n        .doc()\n        .set({\n            ID: id,\n            Title: title,\n            Date: date,\n            UserName: authO.UserName,\n            UserID: authO.ID,\n            UserPhoto: authO.Photo,\n            Timestamp: timestamp,\n            Compagny: client\n        })\n        .then(() => {\n            db.collection(\"Email\").doc().set({\n                to: adminEmail,\n                cc: \"info@Deccos.nl\",\n                message: {\n                subject: `Iemand heeft zich aangemeld voor het event ${title} op ${communityNameDB}`,\n                html: `\n                    Iemand heeft zich aangemeld voor het event '${title}' op ${communityNameDB}. <br><br>\n    \n                    Naam: ${authO.UserName}. <br><br>\n    \n                    <a href='https://deccos.co/${client}/EventSignups'>Klik hier</a> om de alle aanmeldingen te beheren.<br><br>\n                    \n                    `,\n                Gebruikersnaam: `${authO.UserName}`,\n                Emailadres: adminEmail,\n                Type: \"Event signup\"\n                  }     \n              });\n        })\n        .then(() => {\n            db.collection(\"Email\").doc().set({\n                to: adminEmail,\n                cc: \"info@Deccos.nl\",\n                message: {\n                subject: `Bevestiging aanmelding voor het event ${title} op ${communityNameDB}`,\n                html: `\n                    Dag ${authO.UserName}, <br><br>\n                    \n                    Bij deze bevestigen wij jouw aanmelding voor het event '${title}' op ${communityNameDB}. <br><br>\n    \n                    <a href='https://deccos.co/${client}/MyEvents/${authO.ID}'>Klik hier</a> om je persoonlijke evenementenagenda te bekijken.<br><br>\n\n                    Met vriendelijke groet, <br><br>\n\n                    ${communityNameDB}\n                    \n                    `,\n                Gebruikersnaam: `${authO.UserName}`,\n                Emailadres: adminEmail,\n                Type: \"Event signup\"\n                  }     \n              });\n        })\n\n    }\n\n    const showMyCalendar = () => {\n\n        history.push(`/${client}/MyEvents/${authID}`)\n        \n    }\n\n    return (\n        <div className=\"main\">\n            <LeftSideBar />\n            <LeftSideBarFullScreen/>\n            <div className=\"article-container\" style={{display: menuState}}>\n                {events && events.map(doc => (\n                    <div className=\"article\">\n                        <h1>{doc.Title}</h1>\n                        <img className=\"article-detail-banner\" src={doc.Banner} alt=\"\" />\n                        <div className=\"article-meta-container\">\n                            <div className=\"article-card-user-container\">\n                                <img src={doc.UserPhoto} alt=\"\" data-id={doc.UserID} onClick={profileLink} />\n                                <p data-id={doc.UserID} onClick={profileLink}>{doc.User}</p>\n                            </div>\n                            <h3 id='event-detail-timestamp'>{doc.Timestamp.toDate().toLocaleDateString(\"nl-NL\", options)}</h3>\n                            <div className=\"article-body-container divider\">\n                                <div dangerouslySetInnerHTML={{ __html: doc.Body }}></div>\n                            </div>\n                            <div className=\"divider location-container\" style={{Display: locationDisplay}}>\n                                <div>\n                                    <img src={HouseIcon} alt=\"\" />\n                                </div>\n                                <div style={{display: psysicalDisplay}}>\n                                    <ul>\n                                        <li>{doc.LocationName}</li>\n                                        <li>{doc.LocationAdres}</li>\n                                        <li>{doc.LocationCity}</li>\n                                    </ul>\n                                </div>\n                                <div style={{display: onlineDisplay}}>\n                                    <ul>\n                                        <li>Online</li>\n                                    </ul>\n                                </div> \n                            </div>\n                            <div className=\"location-container\">\n                                <div>\n                                    <img src={InformationIcon} alt=\"\" />\n                                </div>\n                                <ul className=\"event-meta-container\">\n                                    <li>Datum: {doc.Date}</li>\n                                    <li>Prijs: €{doc.Price}</li>\n                                    <li>Max. deelnemers: {doc.Capacity}</li>\n                                </ul>\n                            </div>\n                            <div id='register-event-button-container'>\n                                <button className={eventButtonClass} data-date={doc.Date} data-title={doc.Title} data-id={doc.ID} onClick={eventSignup}>Aanmelden</button>\n                            </div>\n                            <div id={showCalendarButton} onClick={showMyCalendar}>\n                                <img src={CalendarIcon} alt=\"\" />\n                                <p>Bekijk mijn agenda</p>\n                            </div>\n                        </div>\n                    </div>\n                ))}\n                <h2>Berichten</h2>\n                <MessageBar />\n                <div className=\"reaction-area\">\n                {messages && messages.map(message => ( \n                    <Reaction message={message}/>\n                ))}\n                </div>\n            </div>\n                \n            <RightSideBar />\n        </div>\n    )\n}\n\nexport default EventDetail\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/NewsDetail.js",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/GroupSettingsDetail.jsx",["1634"],"import LeftSideBarAuthProfile from \"../LeftSideBarAuthProfile\"\nimport LeftSideBarAuthProfileFullScreen from \"../LeftSideBarAuthProfileFullScreen\";\nimport RightSideBar from \"../rightSideBar/RightSideBar\";\nimport { useFirestore, useFirestoreID, useFirestoreSubscriptionsChannelGroup, useFirestoreUsers } from \"../../firebase/useFirestore\";\nimport Location from \"../../hooks/Location\"\nimport deleteIcon from '../../images/icons/delete-icon.png'\nimport { useHistory } from \"react-router-dom\"\nimport { client } from \"../../hooks/Client\";\nimport { useState, useEffect } from \"react\";\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport { db, timestamp } from \"../../firebase/config.js\"\nimport uuid from 'react-uuid';\n\nconst GroupSettingsDetail = () => {\n    const [title, setTitle] = useState(\"\")\n    const [userName, setUserName] = useState('')\n    const [userPhoto, setUserPhoto] = useState('')\n    const [userID, setUserID] = useState('')\n    const [userEmail, setUserEmail] = useState('')\n    const [communityNameDB, setCommunityNameDB] = useState('')\n    const [groupID, setGroupID] = useState('')\n    const [groupDocID, setGroupDocID] = useState('')\n    const [groupName, setGroupName] = useState('')\n\n    const route = Location()[3]\n    const menuState = MenuStatus()\n    const history = useHistory()\n    const id = uuid()\n\n    const groups = useFirestoreID(\"Groups\", route)\n    const users = useFirestoreUsers(false)\n    const members = useFirestoreSubscriptionsChannelGroup(route)\n    const compagnies = useFirestore(\"CompagnyMeta\")\n    const groupChannels = useFirestoreID('GroupChannels', route)\n\n    console.log(groupChannels)\n\n    useEffect(() => {\n        compagnies && compagnies.forEach(comp => {\n            setCommunityNameDB(comp.CommunityName)\n        })\n    },[compagnies])\n\n    useEffect(() => {\n        groups && groups.forEach(group => {\n            setGroupID(group.ID)\n            setGroupDocID(group.docid)\n            setGroupName(group.Room)\n        })\n    },[groups])\n   \n    const deletegroup = (e) => {\n\n        groups && groups.forEach(group => {\n            db.collection(\"Groups\")\n            .doc(group.docid)\n            .delete()\n            .then(() => {\n                history.push(`/${client}/groupsettings`)\n            })\n        })\n    }\n\n    const titleHandler = (e) => {\n\n        const title = e.target.value\n\n        setTitle(title)\n\n    }\n\n    const saveTitle = (e) => {\n\n        groups && groups.forEach(group => {\n            db.collection(\"Groups\")\n            .doc(group.docid)\n            .update({\n                Room: title\n            })\n            .then(() => {\n                changeGroupChannelName()\n            })\n        })\n\n        e.target.innerHTML = \"Opgeslagen\"\n    }\n\n    const changeGroupChannelName = () => {\n        groupChannels && groupChannels.forEach(channel => {\n            db.collection('GroupChannels')\n            .doc(channel.docid)\n            .update({\n                Name: title\n            })\n        })\n    }\n\n    const saveNewMember = (e) => {\n\n        db.collection('Subscriptions')\n        .doc()\n        .set({\n            UserName: userName,\n            UserID: userID,\n            UserPhoto: userPhoto,\n            UserEmail: userEmail,\n            SubID: groupID,\n            SubDocid: groupDocID,\n            SubName: groupName,\n            Timestamp: timestamp,\n            Compagny: client,\n            Approved: true,\n            ID: id,\n            Type: 'Group'\n        })\n        .then(() => {\n\n            db.collection(\"Email\").doc().set({\n                to: userEmail,\n                cc: \"info@Deccos.nl\",\n                message: {\n                subject: `Je bent toegevoegd de groep ${groupName} op ${communityNameDB}`,\n                html: `\n                    Je bent toegevoegd de groep ${groupName} op ${communityNameDB} door een beheerder. <br><br>\n    \n    \n                    Bekijk de groep <a href='https://deccos.co/${client}/Group/${groupID}'>hier</a>.<br><br>\n                    \n                    `,\n                Gebruikersnaam: `${userName}`,\n                Emailadres: userEmail,\n                Type: \"Add to group\"\n                  }     \n              });\n        })\n\n    }\n\n    const newUserHandler = (e) => {\n        const userName = e.target.options[e.target.selectedIndex].dataset.username\n        const userPhoto = e.target.options[e.target.selectedIndex].dataset.userphoto\n        const userID = e.target.options[e.target.selectedIndex].dataset.userid\n        const userEmail = e.target.options[e.target.selectedIndex].dataset.useremail\n\n        setUserName(userName)\n        setUserPhoto(userPhoto)\n        setUserID(userID)\n        setUserEmail(userEmail)\n    }\n\n    return (\n        <div className=\"main\">\n            <LeftSideBarAuthProfile />\n            <LeftSideBarAuthProfileFullScreen/>\n            <div className=\"profile profile-auth-goal\" style={{display: menuState}}>\n                {groups && groups.map(group => (\n                <div key={group.ID}>\n                    <div className=\"divider card-header\">\n                        <h2>{group.Room} instellingen</h2>\n                        <p>Pas de instellingen van de groep {group.Room} aan</p>\n                    </div>\n                    <div className=\"divider\">\n                        <h3>Titel</h3>\n                        <input className=\"input-classic\" type=\"text\" placeholder={group.Room} onChange={titleHandler}/>\n                        <div className=\"button-container\">\n                            <button className=\"button-simple\" onClick={saveTitle}>Opslaan</button>\n                        </div>\n                    </div>\n                    <div className='divider'>\n                        <h3>Groepsleden</h3>\n                        {members && members.map(member => (\n                            <div className='groupsettings-detail-member-container' key={member.ID}>\n                                <img src={member.UserPhoto} alt=\"\"/>\n                                <p>{member.UserName}</p>\n                                <button className='userrole-users-delete-button button-simple'>Verwijderen</button>\n                            </div>\n                        ))}\n                    </div>\n                    <div className='divider'>\n                        <h3>Leden toevoegen aan groep</h3>\n                        <select name=\"\" id=\"\" onChange={newUserHandler}>\n                            <option value=\"\">-- Selecteer een lid --</option>\n                            {users && users.map(user => (\n                                <option \n                                value=\"\"\n                                key={user.ID}\n                                data-username={user.UserName}\n                                data-userphoto={user.Photo}\n                                data-userid={user.ID}\n                                data-useremail={user.Email}>\n                                    {user.UserName}\n                                </option>\n                            ))}\n                        </select>\n                        <div className=\"button-container\">\n                            <button \n                            className=\"button-simple\" onClick={saveNewMember}>Toevoegen</button>\n                        </div>\n                    </div>\n                     <div className=\"divider\">\n                        <h3>Groep verwijderen</h3>\n                        <img className=\"delete-channel\" src={deleteIcon} data-id={group.ID} onClick={deletegroup} />\n                    </div>\n                 </div>\n                ))}        \n            </div>\n            <RightSideBar />\n        </div>\n    )\n}\n\nexport default GroupSettingsDetail\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/Likes.jsx",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/EventSignups.jsx",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/IntroductionsCard.js",["1635"],"import { useFirestoreTimestamp } from '../../firebase/useFirestore'\nimport { useHistory } from \"react-router-dom\";\nimport { client } from \"../../hooks/Client\"\nimport ReactionBar from './ReactionBar'\nimport { useFirestoreMessages } from '../../firebase/useFirestore';\nimport { db } from '../../firebase/config';\nimport { useState, useEffect } from 'react';\n\nconst IntroductionsCard = () => {\n\n    const introductions = useFirestoreTimestamp(\"Introductions\")\n\n    const history = useHistory()\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n\n    let id = null\n\n    introductions && introductions.forEach(introduction => {\n        id = introduction.ID\n    })\n\n    const messages  = useFirestoreMessages(\"Messages\", id)\n\n    const profileLink = (e) => {\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/PublicProfile/${id}`)\n    }\n\n    const showReactions = (e) => {\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/MessageDetail/${id}`)\n    }\n\n    const ReactionCardButton = ({id}) => {\n\n        const [reactions, setReactions] = useState([])\n\n        const number = async () => {\n\n            const numberArray = []\n\n            await db.collection('Messages')\n            .where('ParentID', '==', id)\n            .onSnapshot(querySnapshot => {\n                querySnapshot.forEach(doc => {\n                    numberArray.push(doc.data().ID)\n                })\n            })\n\n            return numberArray\n        }\n\n        useEffect(() => {\n            number().then(reaction => {\n                setReactions(reaction)\n            })\n        }, [messages])\n\n        console.log(reactions)\n\n        return(\n            <button onClick={showReactions} data-id={id} className=\"introduction-reaction-button\">Bekijk {reactions.length} reacties</button>\n        )\n    }\n\n    return (\n        introductions && introductions.map(introduction => (\n            <div className=\"introduction-card\" key={introduction.ID} >\n                <img className=\"user-image\" src={introduction.Photo} alt=\"\" data-id={introduction.AuthID} onClick={profileLink} />\n                <h2 className=\"user-image\" data-id={introduction.AuthID} onClick={profileLink}>{introduction.UserName}</h2>\n                <p>{introduction.Body}</p>\n                <ReactionBar message={introduction}/>\n                <ReactionCardButton id={introduction.ID}/>\n                <p className=\"introductioncard-timestamp\">{introduction.Timestamp.toDate().toLocaleDateString(\"nl-NL\", options)}</p>\n            </div>\n        ))\n    )\n}\n\nexport default IntroductionsCard\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/MessageBarGroup.js",["1636","1637","1638","1639","1640","1641"],"import plusIcon from '../../images/icons/plus-icon.png'\nimport sendIcon from '../../images/icons/send-icon.png'\nimport spinnerRipple from '../../images/spinner-ripple.svg'\nimport { db, bucket } from \"../../firebase/config.js\"\nimport { useState, useContext, useEffect } from 'react';\nimport { client, type } from \"../../hooks/Client\"\nimport uuid from 'react-uuid';\nimport { useFirestoreID, useFirestore } from \"../../firebase/useFirestore\"\nimport firebase from 'firebase';\nimport { Auth } from '../../StateManagment/Auth'\nimport Location from \"../../hooks/Location\"\nimport GetYearMonth from '../../hooks/GetYearMonth'\n\nconst MessageBarGroup = () => {\n    const [authO] = useContext(Auth)\n    const [Message, setMessage] = useState(\"\")\n    const [fileDisplay, setFileDisplay] = useState(\"none\")\n    const [progressBar, setProgressBar] = useState(\"\")\n    const [members, setMembers] = useState('')\n\n    const route = Location()[3]\n    const getYearMonth = GetYearMonth()\n    const timestamp = firebase.firestore.Timestamp.fromDate(new Date())\n    \n    const id = uuid()\n    const compagny = useFirestore(\"CompagnyMeta\")\n    const groups = useFirestoreID(\"Groups\", route)\n    const chats = useFirestoreID(\"Chats\", route)\n\n    useEffect(() => {\n        groups && groups.forEach(group => {\n            setMembers(group.Members)\n        })\n    }, [groups])\n\n    useEffect(() => {\n        chats && chats.forEach(chat => {\n            setMembers(chat.MemberList)\n        })\n    }, [groups])\n\n    const MessageInput = (e) => {\n        const input = e.target.value\n\n        setMessage(input)\n    }\n    \n    const submitMessage = () => {\n\n        db.collection(\"Messages\")\n        .doc()\n        .set({\n            Type: \"Message\",\n            Message: Message,\n            Timestamp: firebase.firestore.Timestamp.fromDate(new Date()),\n            ParentID: route,\n            ID: id,\n            Likes: 0,\n            Compagny: client,\n            User: authO.UserName,\n            UserPhoto: authO.Photo,\n            Email: authO.Email,\n            Members: members,\n            Thread: [],\n            Channel: 'Chat',\n            Read: [authO.ID],\n            UserID: authO.ID\n        })\n        .then(() => {\n            db.collection(\"MessageGraph\")\n            .where(\"Compagny\", \"==\", client)\n            .where(\"Month\", \"==\", getYearMonth)\n            .get()\n            .then(querySnapshot => {\n                if(querySnapshot.empty === false){\n                    querySnapshot.forEach(doc => {\n\n                        console.log(\"bestaat\")\n\n                        db.collection(\"MessageGraph\")\n                        .doc(doc.id)\n                        .update({\n                            Contributions: firebase.firestore.FieldValue.increment(1)\n                        })\n                    })\n                } else if (querySnapshot.empty === true){\n                    console.log(\"bestaat niet\")\n                    db.collection(\"MessageGraph\")\n                    .doc()\n                    .set({\n                        Month: getYearMonth,\n                        Contributions: 1,\n                        Compagny: client,\n                        LastActive: firebase.firestore.Timestamp.fromDate(new Date()),\n                        ID: uuid(),\n                    })\n                } \n            })\n        })\n        .then(() => {\n            setMessage(\"\")\n        })\n    }\n\n    const toggleFile = () => {\n\n        if(fileDisplay === \"none\"){\n            setFileDisplay(\"block\")\n        } else {\n            setFileDisplay(\"none\")\n        }\n\n    }\n\n    const insertFile = (e) => {\n        const file = e.target.files[0]\n\n        const fileType = file.type.split(\"/\")\n\n        setProgressBar(\"Bezig..\")\n\n        const storageRef = bucket.ref(`/${client}_${authO.ID}/` + file.name);\n        const uploadTask = storageRef.put(file)\n\n        uploadTask.then(() => {\n          \n            uploadTask.on('state_changed', snapshot => {\n            const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100)\n            console.log(progress)\n            switch (snapshot.state) {\n            case firebase.storage.TaskState.PAUSED:\n                console.log('Upload is paused');\n                break;\n            case firebase.storage.TaskState.RUNNING:\n                console.log('Upload is running');\n                break;\n            }\n            }, (err) => {\n                alert(err)\n            }, () => {\n            uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n                console.log('File available at', downloadURL);\n                setProgressBar(\"\")\n\n                if(fileType[0] === \"image\"){\n                    setMessage(\n                        `\n                        <img style=\"width:80%\" src=\"${downloadURL}\">\n                        `\n                        )\n                } else if(fileType[0] === \"video\"){\n                    setMessage(\n                        `\n                        <video width=\"90%\" height=\"90%\" controls autoplay muted>\n                            <source src=\"${downloadURL}\">\n                        </video>\n                        `\n                    )\n                } else if(fileType[0] === \"application\"){\n                    setMessage(\n                        `\n                        <embed src=\"${downloadURL}\" width=\"90% height=\"90%\"></embed>\n                        `\n                    )\n                } else {\n                    setMessage(downloadURL)\n                }\n\n                })\n            })\n        })\n    }\n\n\n    return (\n        <div className=\"messagebar-group-container\">\n            <div className=\"messagebar-group-inner-container\" >\n                <img src={plusIcon} alt=\"\"  onClick={toggleFile}  />\n                <textarea \n                type=\"text\" \n                className=\"message-input\" \n                placeholder=\"Schrijf hier je bericht\"\n                value = {Message}\n                onChange={MessageInput}\n                /> \n                <img src={sendIcon} alt=\"\" onClick={submitMessage} /> \n            </div>\n            <div>\n                <div>{progressBar}</div>\n                <input onChange={insertFile} type=\"file\" style={{display: fileDisplay}} />\n            </div>\n        </div>\n    )\n}\n\nexport default MessageBarGroup\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/GroupChannel.jsx",["1642"],"import { useFirestoreChannelItems } from \"../../firebase/useFirestore\";\nimport { motion } from \"framer-motion\";\nimport { useHistory } from \"react-router-dom\";\nimport { auth, db, timestamp } from '../../firebase/config';\nimport { client } from '../../hooks/Client';\nimport firebase from 'firebase';\nimport Location from \"../../hooks/Location\"\n\nconst GroupChannel = () => {\n\n    const route = Location()[3]\n\n    const items = useFirestoreChannelItems(\"ChannelItems\", route)\n\n    const history = useHistory()\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n    const variants = {\n        hidden: { opacity: 0 },\n        visible: { opacity: 1 },\n      }\n\n    const profileLink = (e) => {\n        const id = e.target.dataset.id\n\n        history.push(`/${client}/PublicProfile/${id}`)\n    }\n\n    const updateRoute = (e) => {\n\n        const channelID = e.target.dataset.id\n        const docid = e.target.dataset.docid\n\n        db.collection(\"ChannelItems\")\n        .doc(docid)\n        .update({\n            Clicks: firebase.firestore.FieldValue.arrayUnion(timestamp)\n        })\n        .then(() => {\n            history.push(`/${client}/ChannelDetail/${channelID}`)\n        })\n    }\n\n    return (\n        <div className=\"card-container\">\n            {items && items.map(items => (\n                <motion.div  initial=\"hidden\"\n                animate=\"visible\"\n                variants={variants} \n                className=\"card\">\n                    <div key={items.ID}>\n                        <img className=\"card-banner\" src={items.Banner} alt=\"\" />\n                        <div className=\"card-inner-container\">\n                            <div className=\"article-card-user-container\">\n                                <img src={items.UserPhoto} alt=\"\" data-id={items.UserID} onClick={profileLink} />\n                                <p data-id={items.UserID}>{items.User}</p>\n                            </div>\n                            <h2>{items.Title}</h2>\n                            <p>{items.Timestamp.toDate().toLocaleDateString(\"nl-NL\", options)}</p>\n                        </div>\n                        <div className=\"button-container\">\n                            <button onClick={updateRoute} data-docid={items.docid} data-id={items.ID}>Bekijk</button>\n                        </div>\n                    </div>\n                </motion.div>\n            )) }\n        </div>\n    )\n}\n\nexport default GroupChannel\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/ArticleCard.js",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/index.js",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/App.js",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/reportWebVitals.js",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/LoginRegister.js",["1643"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Main.js",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/topbar/Topbar.js",["1644","1645"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/StateManagment/MobileMenu.js",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/firebase/config.js",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/StateManagment/Auth.js",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/hooks/Colors.js",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/hooks/Client.js",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/BottomBar.jsx",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/MultipleAccounts.jsx",["1646","1647","1648","1649","1650"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/NotApproved.jsx",["1651","1652","1653","1654","1655"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/StateManagment/Colors.jsx",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Login.js",["1656"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Register.js",["1657","1658"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/firebase/useFirestore.js",["1659","1660","1661","1662","1663"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Search.js",["1664"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/NewClient.js",["1665","1666","1667","1668"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Profile.js",["1669","1670","1671","1672"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Analytics.js",["1673","1674","1675","1676","1677","1678"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Members.js",["1679","1680"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Settings.js",["1681","1682","1683"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/PublicProfile.js",["1684","1685","1686","1687","1688","1689"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Notifications.js",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Contributions.js",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Measures.js",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/topbar/Iconbar.js",["1690","1691","1692"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/Group.js",["1693","1694","1695","1696"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/Start.js",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/AddArticle.js",["1697","1698","1699","1700"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/topbar/ProfilePhoto.js",["1701"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/Introductions.js",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/News.js",["1702","1703","1704","1705","1706","1707","1708"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/ChatGroups.js",["1709","1710","1711","1712","1713","1714"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/Events.js",["1715","1716","1717","1718","1719","1720","1721","1722","1723","1724"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/MessageDetail.js",["1725","1726","1727","1728","1729","1730","1731","1732","1733"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/AddNews.js",["1734","1735","1736","1737"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/AddEvent.js",["1738","1739","1740","1741","1742","1743","1744","1745"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/ArticleDetail.js",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/ChatRoom.js",["1746","1747","1748","1749"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/GroupSettings.js",["1750"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/Channel.js",["1751","1752","1753","1754"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/ChannelDetail.js",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/AddChannelItem.js",["1755","1756","1757","1758","1759"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/KnowledgeCentre.js",["1760","1761","1762","1763","1764"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/NewsDetail.js",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/GroupLanding.js",["1765","1766","1767","1768"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/ChannelSettingsDetail.js",["1769","1770","1771","1772","1773","1774","1775","1776","1777","1778","1779"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/EventDetail.js",["1780","1781","1782"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/allActivity/AllActivity.js",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/hooks/Location.js",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/MyIntroduction.jsx",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/MyGroups.jsx",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/MyEvents.jsx",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/LeftSideBarFullScreen.jsx",["1783","1784","1785","1786"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/ProfileSettings.jsx",["1787","1788","1789","1790"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Subscriptions.jsx",["1791","1792","1793","1794","1795"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/UserRoles.jsx",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/MyContributions.jsx",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Registrations.jsx",["1796"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/MyChannels.jsx",["1797","1798"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/AboutMe.jsx",["1799","1800","1801"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/ActivitySettings.jsx",["1802","1803"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/MyMessages.jsx",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/GroupSettingsDetail.jsx",["1804"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/Likes.jsx",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Impact/QuestionnaireAnalysis.jsx",["1805","1806","1807"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Matching/MatchProfileFields.jsx",["1808"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Matching/Roadmap.jsx",["1809"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Matching/MatchDetail.jsx",["1810","1811","1812","1813","1814"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Matching/Matches.jsx",["1815","1816","1817"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Matching/MatchItemDetail.jsx",["1818","1819","1820","1821"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/hooks/ButtonClicked.jsx",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/hooks/GetYearMonth.jsx",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Matching/MatchItems.jsx",["1822","1823","1824","1825"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Matching/AddMatchItem.jsx",["1826","1827","1828"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Matching/MatchCategories.jsx",["1829","1830"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Impact/ImpactProgress.jsx",["1831","1832"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Impact/SendQuestionnaire.jsx",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Impact/ImpactIndicators.jsx",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Impact/Stakeholders.jsx",["1833"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Impact/QuestionnaireSettings.jsx",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/EventSignups.jsx",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/LeftSideBar.js",["1834","1835","1836","1837"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/LeftSideBarAuthProfileFullScreen.js",["1838","1839","1840","1841","1842","1843","1844","1845","1846","1847","1848","1849"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/MessageBar.js",["1850","1851","1852"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/allActivity/ActivityCard.js",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/rightSideBar/RightSideBar.js",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/hooks/MenuStatus.jsx",["1853"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/LeftSideBarAuthProfile.js",["1854","1855","1856","1857","1858","1859","1860","1861","1862","1863","1864","1865","1866"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/Reaction.jsx",["1867","1868","1869","1870","1871"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Calender.jsx",["1872"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/ArticleCard.js",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/MessageBarGroup.js",["1873","1874","1875","1876","1877","1878"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/ReactionBar.js",["1879","1880"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/LikeBar.js",["1881","1882"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/IntroductionsCard.js",["1883"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/rightSideBar/AllMembers.js",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/hooks/GetLink.jsx",[],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Community/GroupChannel.jsx",["1884"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/ActivityDetail.jsx",["1885","1886"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/Activities.jsx",["1887","1888","1889"],"/Volumes/GoogleDrive/mijn drive/Deccos/deccos-webapp/src/components/ActivityGoal.jsx",["1890","1891"],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Impact/AddQuestionnaire.jsx",["1892"],"import LeftSideBarAuthProfile from \"../LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \"../LeftSideBarAuthProfileFullScreen\";\nimport RightSideBar from \"../rightSideBar/RightSideBar\"\nimport Location from \"../../hooks/Location\"\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport { useFirestoreID, useFirestoreQuestionnaireFields } from \"../../firebase/useFirestore\"\nimport { useState, useEffect } from 'react';\nimport { db, timestamp } from \"../../firebase/config\";\nimport { client } from \"../../hooks/Client\";\nimport uuid from 'react-uuid';\n\nconst AddQuestionnaire = () => {\n    const [title, setTitle ] = useState('Titel van vragenlijst')\n    const [docid, setDocid ] = useState('')\n    const [showParagraph, setShowParagraph] = useState('block')\n    const [showScale, setShowScale] = useState('none')\n    const [type, setType ] = useState('paragraph')\n    const [question, setQuestion] = useState(null)\n    const [reachStart, setReachStart] = useState(0)\n    const [reachEnd, setReachEnd] = useState(0)\n    const [reachStartLabel, setReachStartlabel] = useState(null)\n    const [reachEndLabel, setReachEndLabel] = useState(null)\n\n    const menuState = MenuStatus()\n    const route = Location()[3]\n\n    const questionnares = useFirestoreID('Questionnaires', route)\n    const questionnaireFields = useFirestoreQuestionnaireFields(route)\n\n    useEffect(() => {\n        questionnares && questionnares.forEach(questionnare => {\n            setTitle(questionnare.Title)\n            setDocid(questionnare.docid)\n        })\n    }, [questionnares])\n\n    const titleHandler = (e) => {\n\n        const title = e.target.value \n\n        setTitle(title)\n\n        db.collection('Questionnaires')\n        .doc(docid)\n        .update({\n            Title: title\n        })\n    }\n\n    const typeHandler = (e) => {\n\n        const type = e.target.options[e.target.selectedIndex].value\n\n        setType(type)\n\n        if(type === 'paragraph'){\n            setShowParagraph('block')\n            setShowScale('none')\n        } else if(type === 'scale'){\n            setShowParagraph('none')\n            setShowScale('block')\n        }\n    }\n\n    const questionHandler = (e) => {\n\n        const question = e.target.value \n\n        setQuestion(question)\n\n    }\n\n    const reachStartHandler = (e) => {\n\n        const reachStart = e.target.options[e.target.selectedIndex].value \n\n        setReachStart(reachStart)\n\n    }\n\n    const reachStartLabelHandler = (e) => {\n\n        const reachStartLabel = e.target.value \n\n        setReachStartlabel(reachStartLabel)\n\n    }\n\n    const reachEndHandler = (e) => {\n\n        const reachEnd = e.target.options[e.target.selectedIndex].value \n\n        setReachEnd(reachEnd)\n\n    }\n\n    const reachEndLabelHandler = (e) => {\n\n        const reachEndLabel = e.target.value \n\n        setReachEndLabel(reachEndLabel)\n\n    }\n\n    const addField = () => {\n\n        db.collection('QuestionnaireFields')\n        .doc()\n        .set({\n            Compagny: client,\n            ID: uuid(),\n            Timestamp: timestamp,\n            QuestionnaireID: route,\n            Type: type,\n            Question: question,\n            ReachStart: parseInt(reachStart),\n            ReachStartLable: reachStartLabel,\n            ReachEnd: parseInt(reachEnd),\n            ReachEndLabel: reachEndLabel,\n            Key: uuid()\n        })\n    }\n\n    const QuestionnaireField = ({field}) => {\n        const [range, setRange] = useState(null)\n\n        const start = field.ReachStart\n        const end = field.ReachEnd\n\n        useEffect(() => {\n\n        if(field.Type === 'scale'){\n            const range = (start, end) => {\n                return Array(end - start + 1).fill().map((_, idx) => start + idx)\n            }\n    \n            const result = range(start, end)\n              \n            setRange(result)\n        }\n\n        }, [field])\n        \n\n        if(field.Type === 'paragraph'){\n            return(\n                <div className='question-type-display-container'>\n                    <input type='text' value={field.Question} />\n                    <p id='questionnaire-field-text'>Text antwoord</p>\n                </div>\n            )\n        } else if(field.Type === 'scale'){\n            return(\n                <div className='question-type-display-container'>\n                   <input type='text' value={field.Question} />\n                   <div id='scale-container'>\n                       {field.ReachStartLable}\n                       {range && range.map(btn => (\n                           <div id='question-type-label-container'>\n                                <input type=\"radio\" value={btn} />\n                                <label htmlFor={btn}>{btn}</label>\n                           </div>\n                       ))}\n                       {field.ReachEndLabel}\n                   </div>\n                </div>\n            )\n        }\n\n    }\n\n    return (\n        <div className=\"main\">\n        <LeftSideBarAuthProfile />\n        <LeftSideBarAuthProfileFullScreen/>\n        <div className=\"profile profile-auth-profile\" style={{display: menuState}}>\n            <div className=\"settings-inner-container\">\n                <div className=\"divider card-header-add-questionnaire\">\n                    <input type=\"text\" className='editable-text-input' value={title} onChange={titleHandler}/>\n                </div>\n                <div className=\"divider\">\n                    <h2>Vraag toevoegen</h2>\n                    <select name=\"\" id=\"\" onChange={typeHandler}>\n                        <option value=\"paragraph\">Textvraag</option>\n                        <option value=\"scale\">Schaalvraag</option>\n                    </select>\n                    <div className='question-type-display-container'>\n                        <input type=\"text\" id='questionnaire-question' placeholder='Naamloze vraag' onChange={questionHandler} />\n                        <div className='questionnaire-field-text-container' style={{display: showParagraph}}>\n                            <p id='questionnaire-field-text'>Text antwoord</p>\n                        </div>\n                        <div className='questionnaire-field-scale-container' style={{display: showScale}}>\n                            <div className='select-scale-container'>\n                                <select name=\"\" id=\"\" onChange={reachStartHandler}>\n                                    <option value=\"0\">0</option>\n                                    <option value=\"1\" selected>1</option>\n                                </select>\n                                <input type=\"text\" placeholder='Voeg label toe' onChange={reachStartLabelHandler} />\n                            </div>\n                            <p id='scale-reach-symbol'>t/m</p>\n                            <div className='select-scale-container'>\n                                <select name=\"\" id=\"\" onChange={reachEndHandler}>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"5\" selected>5</option>\n                                    <option value=\"6\">6</option>\n                                    <option value=\"7\">7</option>\n                                    <option value=\"8\">8</option>\n                                    <option value=\"9\">9</option>\n                                    <option value=\"10\">10</option>\n                                </select>\n                                <input type=\"text\" placeholder='Voeg label toe' onChange={reachEndLabelHandler} />\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <button className='button-simple' onClick={addField}>Toevoegen</button>\n                    </div>\n                </div>\n                <div>\n                    <h2>Vragenlijst</h2>\n                    {questionnaireFields && questionnaireFields.map(field => (\n                        <div>\n                            <QuestionnaireField field={field}/>\n                        </div>\n                    ))}\n\n                </div>\n            </div>\n        </div>\n        <RightSideBar />\n        </div>\n    )\n}\n\nexport default AddQuestionnaire\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/ChannelSettings.js",["1893","1894","1895","1896"],"import RightSideBar from \"../rightSideBar/RightSideBar\"\nimport LeftSideBarAuthProfile from \"../LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \"../LeftSideBarAuthProfileFullScreen\";\nimport uuid from 'react-uuid';\nimport { db } from \"../../firebase/config\";\nimport settingsIcon from '../../images/icons/settings-icon.png'\nimport { useFirestore } from \"../../firebase/useFirestore\";\nimport { client } from '../../hooks/Client';\nimport { useHistory } from \"react-router-dom\"\nimport plusIcon from '../../images/icons/plus-icon.png'\nimport MenuStatus from \"../../hooks/MenuStatus\";\nimport { useState, useEffect, useContext } from \"react\";\nimport ButtonClicked from \"../../hooks/ButtonClicked\";\nimport { Auth } from '../../StateManagment/Auth';\n\nconst ChannelSettings = () => {\n    const [authO] = useContext(Auth)\n    const [channelName, setChannelName] = useState('')\n    const [admin, setAdmin] = useState(false)\n    const [author, setAuthor] = useState(false)\n\n    const channels = useFirestore(\"Channels\")\n    const admins = useFirestore('Admins')\n    const authors = useFirestore('Authors')\n\n    const uid = uuid()\n    const history = useHistory()\n    const menuState = MenuStatus()\n\n    const channelSettings = (e) => {\n\n        const ID = e.target.dataset.id\n        \n        history.push(`/${client}/ChannelSettingsDetail/${ID}`)\n\n    }\n\n    const channelNameHandler = (e) => {\n        const name = e.target.value\n\n        setChannelName(name)\n    }\n\n    useEffect(() => {\n        admins && admins.forEach(admin => {\n            if(admin.UserID === authO.ID){\n                setAdmin(true)\n            }\n        })\n    }, [admins])\n\n    useEffect(() => {\n        authors && authors.forEach(author => {\n            if(author.UserID === authO.ID){\n                setAuthor(true)\n            }\n        })\n    }, [authors])\n\n    const newChannel = (e) => {\n\n        ButtonClicked(e, 'Opgeslagen')\n\n        db.collection(\"Channels\")\n        .doc()\n        .set({\n            ID: uid,\n            Compagny: client,\n            Link: `Channel`,\n            Name: channelName\n        })\n    }\n\n    const ShowAddItemIcon = (channel) => {\n        if(author || admin){\n            return (\n                <img src={plusIcon} data-id={channel.ID} data-name={channel.Name} onClick={addItem} />\n            )\n\n        }\n    }\n\n    const addItem = (e) => {\n\n        const name = e.target.dataset.name \n        const channelID = e.target.dataset.id\n\n        if(name === 'Kenniscentrum'){\n            history.push(`/${client}/AddArticle`)\n        } else if(name === 'Nieuws'){\n            history.push(`/${client}/AddNews`)\n        } else if(name === 'Events'){\n            history.push(`/${client}/AddEvent`)\n        } else {\n            history.push(`/${client}/AddChannelItem/${channelID}`)\n        }\n\n    }\n\n    return (\n        <div className=\"main\">\n            <LeftSideBarAuthProfile />\n            <LeftSideBarAuthProfileFullScreen/>\n            <div className='profile profile-auth-profile' style={{display: menuState}}>\n                <div className=\"settings-inner-container\">\n                    <div className=\"divider card-header\">\n                        <h1>Kanalen</h1>\n                        <p>Pas de instellingen van je kanalen aan</p>\n                    </div>\n                    <div className=\"divider\">\n                        <h3>Community kanalen</h3>\n                        {channels && channels.map(channel =>(\n                        <div className=\"channel-container\" data-id={channel.ID}>\n                            <h3>{channel.Name}</h3>\n                            <div className=\"icon-container\">\n                                <ShowAddItemIcon/>\n                                <img src={settingsIcon} data-id={channel.ID} onClick={channelSettings} />\n                            </div>\n                        </div>\n                        ))}\n                    </div>\n                    <div className=\"divider\">\n                        <h3>Kanaal toevoegen</h3>\n                        <div id=\"add-channel-container\">\n                            <p>Kanaal naam</p>\n                            <input type=\"text\" placeholder='Geef het kanaal een naam' onChange={channelNameHandler}/>\n                            <button onClick={newChannel}>Opslaan</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <RightSideBar/>\n        </div>\n    )\n}\n\nexport default ChannelSettings\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/Community/WelcomeSettings.js",["1897","1898"],"import RightSideBar from \"../rightSideBar/RightSideBar\"\nimport LeftSideBarAuthProfile from \"../LeftSideBarAuthProfile\";\nimport LeftSideBarAuthProfileFullScreen from \"../LeftSideBarAuthProfileFullScreen\";\nimport { useState } from \"react\";\nimport { db } from \"../../firebase/config\";\nimport { Editor } from '@tinymce/tinymce-react';\nimport { useRef, useEffect } from 'react';\nimport firebase from 'firebase'\nimport { bucket } from '../../firebase/config';\nimport { useFirestore } from \"../../firebase/useFirestore\";\nimport { client } from \"../../hooks/Client\";\nimport MenuStatus from \"../../hooks/MenuStatus\";\n\nconst WelcomeSettings = () => {\n    const menuState = MenuStatus()\n\n    useEffect(() => {\n        db.collection(\"CompagnyMeta\")\n        .where(\"Compagny\", \"==\", client)\n        .get()\n        .then(querySnapshot => {\n            querySnapshot.forEach(doc => {\n\n                const ruleOne = doc.data().Rules[0]\n                const ruleTwo = doc.data().Rules[1]\n                const ruleThree = doc.data().Rules[2]\n                const ruleFour = doc.data().Rules[3]\n\n                setRuleOne(ruleOne)\n                setRuleTwo(ruleTwo)\n                setRuleThree(ruleThree)\n                setRuleFour(ruleFour)\n\n            })\n        })\n    }, [])\n\n    const compagnies = useFirestore(\"CompagnyMeta\")\n\n    const [welcomeText, setWelcomeText] = useState(\"\")\n    const [ruleOne, setRuleOne] = useState(\"\")\n    const [ruleTwo, setRuleTwo] = useState(\"\")\n    const [ruleThree, setRuleThree] = useState(\"\")\n    const [ruleFour, setRuleFour] = useState(\"\")\n\n    const editorRef = useRef(null);\n   \n    const bodyHandler = (e) => {\n        if (editorRef.current) {\n            setWelcomeText(editorRef.current.getContent());\n            }\n    }\n\n    const saveWelcomeText = (e) => {\n\n        e.target.innerHTML = \"Opgeslagen\"\n        e.target.className = \"button-clicked\"\n\n        compagnies && compagnies.forEach(compagny => {\n            db.collection(\"CompagnyMeta\")\n            .doc(compagny.docid)\n            .update({\n                WelcomeText: welcomeText\n            })\n        })\n    }\n\n    const ruleOneHandler = (e) => {\n        const rule = e.target.value\n\n        setRuleOne(rule)\n    }\n\n    const ruleTwoHandler = (e) => {\n        const rule = e.target.value\n\n        setRuleTwo(rule)\n    }\n\n    const ruleThreeHandler = (e) => {\n        const rule = e.target.value\n\n        setRuleThree(rule)\n    }\n\n    const ruleFourHandler = (e) => {\n        const rule = e.target.value\n\n        setRuleFour(rule)\n    }\n\n    const rulesArray = [\n        ruleOne,\n        ruleTwo,\n        ruleThree,\n        ruleFour\n    ]\n\n    const saveRules = (e) => {\n\n        e.target.innerHTML = \"Opgeslagen\"\n        e.target.className = \"button-clicked\"\n\n        compagnies && compagnies.forEach(compagny => {\n            db.collection(\"CompagnyMeta\")\n            .doc(compagny.docid)\n            .update({\n                Rules: rulesArray\n            })\n        })\n    }\n\n    const photoHandler = (e) => {\n        const photo = e.target.files[0]\n\n        const storageRef = bucket.ref(\"/ProfilePhotos/\" + photo.name);\n        const uploadTask = storageRef.put(photo)\n\n        uploadTask.then(() => {\n          \n            uploadTask.on('state_changed', snapshot => {\n            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            switch (snapshot.state) {\n            case firebase.storage.TaskState.PAUSED:\n                console.log('Upload is paused');\n                break;\n            case firebase.storage.TaskState.RUNNING:\n                console.log('Upload is running');\n                break;\n            }\n            }, (err) => {\n                alert(err)\n            }, () => {\n            uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n            console.log('File available at', downloadURL)\n\n            saveBanner(downloadURL)\n\n                })\n            })\n        })\n    }\n\n    const saveBanner = (banner) => {\n        compagnies && compagnies.forEach(compagny => {\n            db.collection(\"CompagnyMeta\")\n            .doc(compagny.docid)\n            .update({\n                WelcomeHeader: banner\n            })\n        })\n    }\n\n    return (\n        <div className=\"main\">\n            <LeftSideBarAuthProfile />\n            <LeftSideBarAuthProfileFullScreen/>\n            {compagnies && compagnies.map(compagny => (\n            <div className='profile profile-auth-profile' key={compagny.ID} style={{display: menuState}}>\n                <div className=\"settings-inner-container\">\n                    <div className=\"divider card-header\">\n                        <h1>Welkom</h1>\n                        <p>Pas de instellingen van de welkomspagina van {compagny.CommunityName}</p>\n                    </div>\n                    <div className=\"divider\">\n                        <h4>Welkomsbanner aanpassen</h4>\n                        <img id=\"welcome-banner\" src={compagny.WelcomeHeader} alt=\"\" />\n                        <input className=\"input-classic\" onChange={photoHandler} type=\"file\" />\n                    </div>\n                    <div className=\"divider\">\n                        <h4>Welkomstext aanpassen</h4>\n                        <Editor onChange={bodyHandler}\n                            apiKey=\"dz1gl9k5tz59z7k2rlwj9603jg6xi0bdbce371hyw3k0auqm\"\n                            initialValue={compagny.WelcomeText}\n                            onInit={(evt, editor) => editorRef.current = editor}\n                            init={{\n                            height: 500,\n                            menubar: false,\n                            plugins: [\n                                'advlist autolink lists link image charmap print preview anchor',\n                                'searchreplace visualblocks code fullscreen',\n                                'insertdatetime media table paste code help'\n                            ],\n                            toolbar: 'undo redo | formatselect | ' +\n                            'bold italic backcolor | alignleft aligncenter ' +\n                            'alignright alignjustify | bullist numlist outdent indent | ' +\n                            'removeformat | help',\n                            content_style: 'body { font-family: Raleway, sans-serif; font-size:14px; color: gray }'\n                            }}\n                            />\n                        <div className=\"button-container button-container-top\">\n                            <button className=\"button-simple\" onClick={saveWelcomeText}>Opslaan</button>\n                        </div>\n                    </div >\n                    <div className=\"divider\">\n                        <h4>Community regels aanpassen</h4>\n                        <div className=\"rule-input-container\">\n                            <p>1.</p>\n                            <input type=\"text\" placeholder={ruleOne} onChange={ruleOneHandler}/>\n                        </div>\n                        <div className=\"rule-input-container\">\n                            <p>2.</p>\n                            <input type=\"text\" placeholder={ruleTwo} onChange={ruleTwoHandler}/>\n                        </div>\n                        <div className=\"rule-input-container\">\n                            <p>3.</p>\n                            <input type=\"text\" placeholder={ruleThree} onChange={ruleThreeHandler}/>\n                        </div>\n                        <div className=\"rule-input-container\">\n                            <p>4.</p>\n                            <input type=\"text\" placeholder={ruleFour} onChange={ruleFourHandler}/>\n                        </div>\n                        <div className=\"button-container button-container-top\">\n                            <button className=\"button-simple\" onClick={saveRules}>Opslaan</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n             ))}\n            <RightSideBar/>\n        </div>\n    )\n}\n\nexport default WelcomeSettings\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ProjectManagement/TaskSettings.jsx",["1899","1900"],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ProjectManagement/TaskDetail.jsx",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ProjectManagement/AddGoal.js",["1901","1902","1903"],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ProjectManagement/GoalDetail.js",["1904","1905","1906"],"import { useFirestoreID, useFirestoreMessages, useFirestoreActivities } from \"../../firebase/useFirestore\"\nimport { motion } from \"framer-motion\"\nimport worldIcon from '../../images/icons/world-icon.png'\nimport houseIcon from '../../images/icons/house-icon.png'\nimport MessageBar from \"../Community/MessageBar\"\nimport LeftSideBar from \"../LeftSideBar\"\nimport LeftSideBarFullScreen from \"../LeftSideBarFullScreen\"\nimport RightSideBar from \"../rightSideBar/RightSideBar\"\nimport { useHistory } from \"react-router-dom\"\nimport { client } from \"../../hooks/Client\"\nimport { useContext, useState, useEffect } from 'react';\nimport { Auth } from '../../StateManagment/Auth';\nimport Location from \"../../hooks/Location\"\nimport Reaction from \"../Community/Reaction\"\nimport MenuStatus from \"../../hooks/MenuStatus\";\n\nconst GoalDetail = () => {\n    const [auth] = useContext(Auth)\n    const [progression, setProgression] = useState(0)\n\n    const route = Location()[3]\n    const menuState = MenuStatus()\n    const history = useHistory()\n\n    const docs = useFirestoreID(\"Goals\", route)\n    const messages  = useFirestoreMessages(\"Messages\", route)\n    const activities = useFirestoreActivities(route)\n\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n\n    // Calculate totalprogression\n\n    const totalProgressionArray = []\n\n    useEffect(() => {\n        activities && activities.forEach(activity => {\n            const progress = activity.Progression\n\n            const maxProgression = activities.length\n\n            const fractualProgression = progress/maxProgression\n\n            totalProgressionArray.push(fractualProgression)\n\n            const totalProgression = totalProgressionArray.reduce((a, b) => a + b, 0)\n\n            setProgression(totalProgression)\n\n        })\n    }, [activities])\n\n    const showContributionsGoal = () => {\n\n        docs && docs.forEach(doc => {\n            history.push(`/${client}/Contributions/${doc.ID}`)\n        })\n    }\n\n    const activityGoalLink = (e) => {\n        const id = e.target.dataset.id \n        history.push(`/${client}/ActivityGoal/${id}`)\n    }\n\n    const ProgressionBar = () => {\n        return(\n        <div className='progression-container-goal-detail'>\n            <p>Voortgang {Math.trunc(progression)}%</p>\n            <div className='progressionbar-outer-bar'>\n                <div className='progressionbar-completed' style={{width: `${progression}%`}}></div>\n            </div>\n        </div>\n        )\n    }\n\n    return (\n        <div className=\"main\">\n            <LeftSideBar />\n            <LeftSideBarFullScreen/>\n            <div className=\"card-overview goal-detail-container\" style={{display: menuState}}>\n            {docs && docs.map(doc => (\n                <motion.div className=\"article\" key={doc.id}>\n                    <img src={doc.Banner} alt=\"\" className='goal-detail-banner' />\n                    <div className=\"list-inner-container\">\n                        <h2>{doc.Title}</h2>\n                        <h3>Voortgang</h3>\n                        <ProgressionBar/>\n                        <button className='button-simple' data-id={doc.ID} onClick={activityGoalLink}>Details</button>\n                        <h3>SDG</h3>\n                        <p>{doc.SDG}</p>\n                        <h3>Impact op maatschappij</h3>\n                        <p>{doc.ImpactSociety}</p>\n                        <h3>Impact op doelgroep</h3>\n                        <p>{doc.ImpactTargetgroup}</p>\n                        <div className='like-count-container'>\n                            <img src={worldIcon} alt=\"\" onClick={showContributionsGoal} />\n                            <p className='notification-counter-small'>{doc.Contributions.length}</p>\n                        </div>\n                    </div>\n                </motion.div>\n                ))\n            }\n\n            <p> --- Reacties ---</p>\n            <MessageBar route={route} auth={auth}/>\n            <div className=\"reaction-area\">\n                {messages && messages.map(message => ( \n                   <Reaction message={message}/>\n                ))}\n            </div>\n            </div>\n            <RightSideBar />\n        </div>\n    )\n}\n\nexport default GoalDetail\n","/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ProjectManagement/GoalSettings.js",["1907","1908","1909"],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ProjectManagement/Goals.js",[],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ProjectManagement/GoalCard.js",["1910","1911","1912"],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ProjectManagement/GoalSettingsDetail.jsx",["1913","1914","1915"],"/Volumes/GoogleDrive/Mijn Drive/Deccos/deccos-webapp/src/components/ProjectManagement/Tasks.jsx",["1916","1917"],{"ruleId":"1918","replacedBy":"1919"},{"ruleId":"1920","replacedBy":"1921"},{"ruleId":"1922","severity":1,"message":"1923","line":35,"column":38,"nodeType":"1924","messageId":"1925","endLine":35,"endColumn":40},{"ruleId":"1922","severity":1,"message":"1923","line":20,"column":26,"nodeType":"1924","messageId":"1925","endLine":20,"endColumn":28},{"ruleId":"1926","severity":1,"message":"1927","line":40,"column":13,"nodeType":"1928","messageId":"1929","endLine":40,"endColumn":53,"fix":"1930"},{"ruleId":"1931","severity":1,"message":"1932","line":2,"column":14,"nodeType":"1933","messageId":"1934","endLine":2,"endColumn":23},{"ruleId":"1931","severity":1,"message":"1935","line":3,"column":8,"nodeType":"1933","messageId":"1934","endLine":3,"endColumn":12},{"ruleId":"1931","severity":1,"message":"1936","line":5,"column":10,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":20},{"ruleId":"1931","severity":1,"message":"1937","line":7,"column":10,"nodeType":"1933","messageId":"1934","endLine":7,"endColumn":20},{"ruleId":"1931","severity":1,"message":"1938","line":14,"column":12,"nodeType":"1933","messageId":"1934","endLine":14,"endColumn":18},{"ruleId":"1939","severity":1,"message":"1940","line":33,"column":17,"nodeType":"1941","messageId":"1942","endLine":33,"endColumn":19},{"ruleId":"1939","severity":1,"message":"1940","line":109,"column":60,"nodeType":"1941","messageId":"1942","endLine":109,"endColumn":62},{"ruleId":"1939","severity":1,"message":"1940","line":113,"column":60,"nodeType":"1941","messageId":"1942","endLine":113,"endColumn":62},{"ruleId":"1939","severity":1,"message":"1940","line":175,"column":18,"nodeType":"1941","messageId":"1942","endLine":175,"endColumn":20},{"ruleId":"1926","severity":1,"message":"1927","line":265,"column":21,"nodeType":"1928","messageId":"1929","endLine":265,"endColumn":60,"fix":"1943"},{"ruleId":"1931","severity":1,"message":"1944","line":3,"column":16,"nodeType":"1933","messageId":"1934","endLine":3,"endColumn":18},{"ruleId":"1931","severity":1,"message":"1945","line":89,"column":19,"nodeType":"1933","messageId":"1934","endLine":89,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":90,"column":13,"nodeType":"1948","messageId":"1949","endLine":97,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1950","line":15,"column":11,"nodeType":"1933","messageId":"1934","endLine":15,"endColumn":18},{"ruleId":"1951","severity":1,"message":"1952","line":91,"column":8,"nodeType":"1953","endLine":91,"endColumn":16,"suggestions":"1954"},{"ruleId":"1951","severity":1,"message":"1952","line":114,"column":8,"nodeType":"1953","endLine":114,"endColumn":15,"suggestions":"1955"},{"ruleId":"1951","severity":1,"message":"1952","line":138,"column":8,"nodeType":"1953","endLine":138,"endColumn":15,"suggestions":"1956"},{"ruleId":"1951","severity":1,"message":"1957","line":233,"column":8,"nodeType":"1953","endLine":233,"endColumn":10,"suggestions":"1958"},{"ruleId":"1951","severity":1,"message":"1959","line":329,"column":8,"nodeType":"1953","endLine":329,"endColumn":28,"suggestions":"1960"},{"ruleId":"1931","severity":1,"message":"1961","line":19,"column":12,"nodeType":"1933","messageId":"1934","endLine":19,"endColumn":29},{"ruleId":"1931","severity":1,"message":"1962","line":19,"column":31,"nodeType":"1933","messageId":"1934","endLine":19,"endColumn":51},{"ruleId":"1931","severity":1,"message":"1945","line":42,"column":19,"nodeType":"1933","messageId":"1934","endLine":42,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":43,"column":13,"nodeType":"1948","messageId":"1949","endLine":50,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1963","line":5,"column":10,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1964","line":12,"column":10,"nodeType":"1933","messageId":"1934","endLine":12,"endColumn":16},{"ruleId":"1931","severity":1,"message":"1945","line":59,"column":19,"nodeType":"1933","messageId":"1934","endLine":59,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":60,"column":13,"nodeType":"1948","messageId":"1949","endLine":67,"endColumn":14},{"ruleId":"1951","severity":1,"message":"1965","line":48,"column":8,"nodeType":"1953","endLine":48,"endColumn":16,"suggestions":"1966"},{"ruleId":"1951","severity":1,"message":"1965","line":56,"column":8,"nodeType":"1953","endLine":56,"endColumn":20,"suggestions":"1967"},{"ruleId":"1939","severity":1,"message":"1940","line":68,"column":21,"nodeType":"1941","messageId":"1942","endLine":68,"endColumn":23},{"ruleId":"1951","severity":1,"message":"1965","line":80,"column":8,"nodeType":"1953","endLine":80,"endColumn":18,"suggestions":"1968"},{"ruleId":"1969","severity":1,"message":"1970","line":193,"column":37,"nodeType":"1928","endLine":193,"endColumn":108},{"ruleId":"1969","severity":1,"message":"1970","line":197,"column":37,"nodeType":"1928","endLine":197,"endColumn":100},{"ruleId":"1931","severity":1,"message":"1971","line":5,"column":23,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":37},{"ruleId":"1931","severity":1,"message":"1945","line":56,"column":19,"nodeType":"1933","messageId":"1934","endLine":56,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":57,"column":13,"nodeType":"1948","messageId":"1949","endLine":64,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1963","line":7,"column":14,"nodeType":"1933","messageId":"1934","endLine":7,"endColumn":18},{"ruleId":"1951","severity":1,"message":"1965","line":57,"column":8,"nodeType":"1953","endLine":57,"endColumn":16,"suggestions":"1972"},{"ruleId":"1931","severity":1,"message":"1973","line":16,"column":12,"nodeType":"1933","messageId":"1934","endLine":16,"endColumn":26},{"ruleId":"1931","severity":1,"message":"1974","line":16,"column":28,"nodeType":"1933","messageId":"1934","endLine":16,"endColumn":45},{"ruleId":"1931","severity":1,"message":"1975","line":17,"column":12,"nodeType":"1933","messageId":"1934","endLine":17,"endColumn":25},{"ruleId":"1931","severity":1,"message":"1976","line":17,"column":27,"nodeType":"1933","messageId":"1934","endLine":17,"endColumn":43},{"ruleId":"1931","severity":1,"message":"1977","line":27,"column":11,"nodeType":"1933","messageId":"1934","endLine":27,"endColumn":20},{"ruleId":"1951","severity":1,"message":"1978","line":66,"column":8,"nodeType":"1953","endLine":66,"endColumn":15,"suggestions":"1979"},{"ruleId":"1931","severity":1,"message":"1980","line":16,"column":12,"nodeType":"1933","messageId":"1934","endLine":16,"endColumn":16},{"ruleId":"1939","severity":1,"message":"1940","line":28,"column":46,"nodeType":"1941","messageId":"1942","endLine":28,"endColumn":48},{"ruleId":"1939","severity":1,"message":"1940","line":73,"column":36,"nodeType":"1941","messageId":"1942","endLine":73,"endColumn":38},{"ruleId":"1931","severity":1,"message":"1980","line":10,"column":12,"nodeType":"1933","messageId":"1934","endLine":10,"endColumn":16},{"ruleId":"1931","severity":1,"message":"1981","line":6,"column":10,"nodeType":"1933","messageId":"1934","endLine":6,"endColumn":16},{"ruleId":"1951","severity":1,"message":"1982","line":47,"column":8,"nodeType":"1953","endLine":47,"endColumn":20,"suggestions":"1983"},{"ruleId":"1951","severity":1,"message":"1965","line":55,"column":8,"nodeType":"1953","endLine":55,"endColumn":20,"suggestions":"1984"},{"ruleId":"1951","severity":1,"message":"1965","line":63,"column":8,"nodeType":"1953","endLine":63,"endColumn":16,"suggestions":"1985"},{"ruleId":"1931","severity":1,"message":"1986","line":5,"column":8,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":16},{"ruleId":"1931","severity":1,"message":"1987","line":9,"column":8,"nodeType":"1933","messageId":"1934","endLine":9,"endColumn":25},{"ruleId":"1931","severity":1,"message":"1988","line":10,"column":8,"nodeType":"1933","messageId":"1934","endLine":10,"endColumn":28},{"ruleId":"1931","severity":1,"message":"1989","line":11,"column":10,"nodeType":"1933","messageId":"1934","endLine":11,"endColumn":29},{"ruleId":"1931","severity":1,"message":"1990","line":7,"column":32,"nodeType":"1933","messageId":"1934","endLine":7,"endColumn":38},{"ruleId":"1931","severity":1,"message":"1991","line":7,"column":40,"nodeType":"1933","messageId":"1934","endLine":7,"endColumn":49},{"ruleId":"1931","severity":1,"message":"1992","line":10,"column":8,"nodeType":"1933","messageId":"1934","endLine":10,"endColumn":16},{"ruleId":"1931","severity":1,"message":"1993","line":8,"column":10,"nodeType":"1933","messageId":"1934","endLine":8,"endColumn":33},{"ruleId":"1931","severity":1,"message":"1994","line":11,"column":12,"nodeType":"1933","messageId":"1934","endLine":11,"endColumn":26},{"ruleId":"1931","severity":1,"message":"1995","line":11,"column":28,"nodeType":"1933","messageId":"1934","endLine":11,"endColumn":45},{"ruleId":"1931","severity":1,"message":"1996","line":12,"column":12,"nodeType":"1933","messageId":"1934","endLine":12,"endColumn":27},{"ruleId":"1931","severity":1,"message":"1997","line":12,"column":29,"nodeType":"1933","messageId":"1934","endLine":12,"endColumn":47},{"ruleId":"1931","severity":1,"message":"1937","line":8,"column":20,"nodeType":"1933","messageId":"1934","endLine":8,"endColumn":30},{"ruleId":"1951","severity":1,"message":"1998","line":40,"column":8,"nodeType":"1953","endLine":40,"endColumn":10,"suggestions":"1999"},{"ruleId":"1931","severity":1,"message":"2000","line":30,"column":11,"nodeType":"1933","messageId":"1934","endLine":30,"endColumn":13},{"ruleId":"1951","severity":1,"message":"2001","line":44,"column":8,"nodeType":"1953","endLine":44,"endColumn":24,"suggestions":"2002"},{"ruleId":"1939","severity":1,"message":"1940","line":49,"column":26,"nodeType":"1941","messageId":"1942","endLine":49,"endColumn":28},{"ruleId":"1931","severity":1,"message":"1991","line":6,"column":20,"nodeType":"1933","messageId":"1934","endLine":6,"endColumn":29},{"ruleId":"1931","severity":1,"message":"2003","line":51,"column":11,"nodeType":"1933","messageId":"1934","endLine":51,"endColumn":30},{"ruleId":"1931","severity":1,"message":"1991","line":8,"column":20,"nodeType":"1933","messageId":"1934","endLine":8,"endColumn":29},{"ruleId":"1931","severity":1,"message":"2004","line":11,"column":12,"nodeType":"1933","messageId":"1934","endLine":11,"endColumn":23},{"ruleId":"1931","severity":1,"message":"2005","line":11,"column":25,"nodeType":"1933","messageId":"1934","endLine":11,"endColumn":39},{"ruleId":"1931","severity":1,"message":"2004","line":13,"column":12,"nodeType":"1933","messageId":"1934","endLine":13,"endColumn":23},{"ruleId":"1931","severity":1,"message":"2005","line":13,"column":25,"nodeType":"1933","messageId":"1934","endLine":13,"endColumn":39},{"ruleId":"1931","severity":1,"message":"1991","line":5,"column":20,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":29},{"ruleId":"1931","severity":1,"message":"1981","line":2,"column":10,"nodeType":"1933","messageId":"1934","endLine":2,"endColumn":16},{"ruleId":"1931","severity":1,"message":"1932","line":14,"column":14,"nodeType":"1933","messageId":"1934","endLine":14,"endColumn":23},{"ruleId":"1931","severity":1,"message":"2006","line":16,"column":8,"nodeType":"1933","messageId":"1934","endLine":16,"endColumn":16},{"ruleId":"1951","severity":1,"message":"2007","line":128,"column":8,"nodeType":"1953","endLine":128,"endColumn":17,"suggestions":"2008"},{"ruleId":"1969","severity":1,"message":"1970","line":315,"column":45,"nodeType":"1928","endLine":315,"endColumn":171},{"ruleId":"1931","severity":1,"message":"1991","line":7,"column":20,"nodeType":"1933","messageId":"1934","endLine":7,"endColumn":29},{"ruleId":"1931","severity":1,"message":"1981","line":2,"column":10,"nodeType":"1933","messageId":"1934","endLine":2,"endColumn":16},{"ruleId":"1931","severity":1,"message":"1937","line":9,"column":10,"nodeType":"1933","messageId":"1934","endLine":9,"endColumn":20},{"ruleId":"1931","severity":1,"message":"2009","line":10,"column":10,"nodeType":"1933","messageId":"1934","endLine":10,"endColumn":14},{"ruleId":"1951","severity":1,"message":"2010","line":208,"column":8,"nodeType":"1953","endLine":208,"endColumn":17,"suggestions":"2011"},{"ruleId":"1931","severity":1,"message":"2012","line":1,"column":9,"nodeType":"1933","messageId":"1934","endLine":1,"endColumn":30},{"ruleId":"1931","severity":1,"message":"1932","line":9,"column":14,"nodeType":"1933","messageId":"1934","endLine":9,"endColumn":23},{"ruleId":"1951","severity":1,"message":"2007","line":83,"column":8,"nodeType":"1953","endLine":83,"endColumn":17,"suggestions":"2013"},{"ruleId":"1931","severity":1,"message":"1932","line":9,"column":14,"nodeType":"1933","messageId":"1934","endLine":9,"endColumn":23},{"ruleId":"1931","severity":1,"message":"2014","line":14,"column":12,"nodeType":"1933","messageId":"1934","endLine":14,"endColumn":25},{"ruleId":"1931","severity":1,"message":"2015","line":14,"column":27,"nodeType":"1933","messageId":"1934","endLine":14,"endColumn":43},{"ruleId":"1951","severity":1,"message":"2016","line":202,"column":8,"nodeType":"1953","endLine":202,"endColumn":20,"suggestions":"2017"},{"ruleId":"1931","severity":1,"message":"1945","line":59,"column":19,"nodeType":"1933","messageId":"1934","endLine":59,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":60,"column":13,"nodeType":"1948","messageId":"1949","endLine":67,"endColumn":14},{"ruleId":"1951","severity":1,"message":"2018","line":144,"column":8,"nodeType":"1953","endLine":144,"endColumn":20,"suggestions":"2019"},{"ruleId":"1951","severity":1,"message":"2018","line":89,"column":8,"nodeType":"1953","endLine":89,"endColumn":31,"suggestions":"2020"},{"ruleId":"1951","severity":1,"message":"2021","line":178,"column":11,"nodeType":"1953","endLine":178,"endColumn":13,"suggestions":"2022"},{"ruleId":"1931","severity":1,"message":"2023","line":9,"column":24,"nodeType":"1933","messageId":"1934","endLine":9,"endColumn":60},{"ruleId":"1931","severity":1,"message":"2024","line":17,"column":12,"nodeType":"1933","messageId":"1934","endLine":17,"endColumn":18},{"ruleId":"1931","severity":1,"message":"2025","line":34,"column":11,"nodeType":"1933","messageId":"1934","endLine":34,"endColumn":19},{"ruleId":"1931","severity":1,"message":"2026","line":35,"column":11,"nodeType":"1933","messageId":"1934","endLine":35,"endColumn":24},{"ruleId":"1951","severity":1,"message":"1965","line":59,"column":8,"nodeType":"1953","endLine":59,"endColumn":16,"suggestions":"2027"},{"ruleId":"1951","severity":1,"message":"1965","line":67,"column":8,"nodeType":"1953","endLine":67,"endColumn":27,"suggestions":"2028"},{"ruleId":"1951","severity":1,"message":"1965","line":75,"column":8,"nodeType":"1953","endLine":75,"endColumn":17,"suggestions":"2029"},{"ruleId":"1951","severity":1,"message":"1965","line":83,"column":8,"nodeType":"1953","endLine":83,"endColumn":25,"suggestions":"2030"},{"ruleId":"1951","severity":1,"message":"1965","line":91,"column":8,"nodeType":"1953","endLine":91,"endColumn":20,"suggestions":"2031"},{"ruleId":"1951","severity":1,"message":"1965","line":97,"column":8,"nodeType":"1953","endLine":97,"endColumn":16,"suggestions":"2032"},{"ruleId":"1951","severity":1,"message":"1965","line":105,"column":8,"nodeType":"1953","endLine":105,"endColumn":18,"suggestions":"2033"},{"ruleId":"1951","severity":1,"message":"2034","line":132,"column":8,"nodeType":"1953","endLine":132,"endColumn":10,"suggestions":"2035"},{"ruleId":"1931","severity":1,"message":"2024","line":16,"column":12,"nodeType":"1933","messageId":"1934","endLine":16,"endColumn":18},{"ruleId":"1931","severity":1,"message":"2036","line":23,"column":33,"nodeType":"1933","messageId":"1934","endLine":23,"endColumn":55},{"ruleId":"1931","severity":1,"message":"2025","line":34,"column":11,"nodeType":"1933","messageId":"1934","endLine":34,"endColumn":19},{"ruleId":"1931","severity":1,"message":"2026","line":35,"column":11,"nodeType":"1933","messageId":"1934","endLine":35,"endColumn":24},{"ruleId":"1951","severity":1,"message":"1965","line":58,"column":8,"nodeType":"1953","endLine":58,"endColumn":16,"suggestions":"2037"},{"ruleId":"1951","severity":1,"message":"1965","line":66,"column":8,"nodeType":"1953","endLine":66,"endColumn":17,"suggestions":"2038"},{"ruleId":"1951","severity":1,"message":"1965","line":74,"column":8,"nodeType":"1953","endLine":74,"endColumn":27,"suggestions":"2039"},{"ruleId":"1951","severity":1,"message":"1965","line":82,"column":8,"nodeType":"1953","endLine":82,"endColumn":25,"suggestions":"2040"},{"ruleId":"1951","severity":1,"message":"1965","line":90,"column":8,"nodeType":"1953","endLine":90,"endColumn":20,"suggestions":"2041"},{"ruleId":"1951","severity":1,"message":"1965","line":99,"column":8,"nodeType":"1953","endLine":99,"endColumn":18,"suggestions":"2042"},{"ruleId":"1951","severity":1,"message":"1965","line":105,"column":8,"nodeType":"1953","endLine":105,"endColumn":16,"suggestions":"2043"},{"ruleId":"1951","severity":1,"message":"2034","line":201,"column":8,"nodeType":"1953","endLine":201,"endColumn":10,"suggestions":"2044"},{"ruleId":"1931","severity":1,"message":"2045","line":5,"column":18,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":25},{"ruleId":"1951","severity":1,"message":"2046","line":65,"column":8,"nodeType":"1953","endLine":65,"endColumn":20,"suggestions":"2047"},{"ruleId":"1931","severity":1,"message":"2048","line":2,"column":19,"nodeType":"1933","messageId":"1934","endLine":2,"endColumn":23},{"ruleId":"1951","severity":1,"message":"1965","line":44,"column":8,"nodeType":"1953","endLine":44,"endColumn":20,"suggestions":"2049"},{"ruleId":"1951","severity":1,"message":"1965","line":52,"column":8,"nodeType":"1953","endLine":52,"endColumn":25,"suggestions":"2050"},{"ruleId":"1951","severity":1,"message":"1965","line":60,"column":8,"nodeType":"1953","endLine":60,"endColumn":16,"suggestions":"2051"},{"ruleId":"1951","severity":1,"message":"2052","line":70,"column":8,"nodeType":"1953","endLine":70,"endColumn":17,"suggestions":"2053"},{"ruleId":"1951","severity":1,"message":"2054","line":164,"column":8,"nodeType":"1953","endLine":164,"endColumn":20,"suggestions":"2055"},{"ruleId":"1931","severity":1,"message":"2056","line":18,"column":11,"nodeType":"1933","messageId":"1934","endLine":18,"endColumn":16},{"ruleId":"1931","severity":1,"message":"2057","line":10,"column":8,"nodeType":"1933","messageId":"1934","endLine":10,"endColumn":16},{"ruleId":"1931","severity":1,"message":"2058","line":11,"column":8,"nodeType":"1933","messageId":"1934","endLine":11,"endColumn":16},{"ruleId":"1931","severity":1,"message":"2000","line":21,"column":11,"nodeType":"1933","messageId":"1934","endLine":21,"endColumn":13},{"ruleId":"1931","severity":1,"message":"2059","line":21,"column":10,"nodeType":"1933","messageId":"1934","endLine":21,"endColumn":15},{"ruleId":"1922","severity":1,"message":"1923","line":34,"column":38,"nodeType":"1924","messageId":"1925","endLine":34,"endColumn":40},{"ruleId":"1922","severity":1,"message":"1923","line":20,"column":26,"nodeType":"1924","messageId":"1925","endLine":20,"endColumn":28},{"ruleId":"1926","severity":1,"message":"1927","line":40,"column":13,"nodeType":"1928","messageId":"1929","endLine":40,"endColumn":53,"fix":"2060"},{"ruleId":"1931","severity":1,"message":"1932","line":2,"column":14,"nodeType":"1933","messageId":"1934","endLine":2,"endColumn":23},{"ruleId":"1931","severity":1,"message":"1935","line":3,"column":8,"nodeType":"1933","messageId":"1934","endLine":3,"endColumn":12},{"ruleId":"1931","severity":1,"message":"2061","line":7,"column":22,"nodeType":"1933","messageId":"1934","endLine":7,"endColumn":30},{"ruleId":"1931","severity":1,"message":"1991","line":7,"column":32,"nodeType":"1933","messageId":"1934","endLine":7,"endColumn":41},{"ruleId":"1922","severity":1,"message":"1923","line":23,"column":38,"nodeType":"1924","messageId":"1925","endLine":23,"endColumn":40},{"ruleId":"1939","severity":1,"message":"1940","line":32,"column":17,"nodeType":"1941","messageId":"1942","endLine":32,"endColumn":19},{"ruleId":"1939","severity":1,"message":"1940","line":108,"column":60,"nodeType":"1941","messageId":"1942","endLine":108,"endColumn":62},{"ruleId":"1939","severity":1,"message":"1940","line":112,"column":60,"nodeType":"1941","messageId":"1942","endLine":112,"endColumn":62},{"ruleId":"1939","severity":1,"message":"1940","line":173,"column":18,"nodeType":"1941","messageId":"1942","endLine":173,"endColumn":20},{"ruleId":"1926","severity":1,"message":"1927","line":265,"column":21,"nodeType":"1928","messageId":"1929","endLine":265,"endColumn":60,"fix":"2062"},{"ruleId":"1931","severity":1,"message":"1945","line":89,"column":19,"nodeType":"1933","messageId":"1934","endLine":89,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":90,"column":13,"nodeType":"1948","messageId":"1949","endLine":97,"endColumn":14},{"ruleId":"1951","severity":1,"message":"1952","line":91,"column":8,"nodeType":"1953","endLine":91,"endColumn":16,"suggestions":"2063"},{"ruleId":"1951","severity":1,"message":"1952","line":114,"column":8,"nodeType":"1953","endLine":114,"endColumn":15,"suggestions":"2064"},{"ruleId":"1951","severity":1,"message":"1952","line":138,"column":8,"nodeType":"1953","endLine":138,"endColumn":15,"suggestions":"2065"},{"ruleId":"1951","severity":1,"message":"1957","line":233,"column":8,"nodeType":"1953","endLine":233,"endColumn":10,"suggestions":"2066"},{"ruleId":"1951","severity":1,"message":"1959","line":329,"column":8,"nodeType":"1953","endLine":329,"endColumn":28,"suggestions":"2067"},{"ruleId":"1931","severity":1,"message":"1980","line":14,"column":12,"nodeType":"1933","messageId":"1934","endLine":14,"endColumn":16},{"ruleId":"1939","severity":1,"message":"1940","line":22,"column":46,"nodeType":"1941","messageId":"1942","endLine":22,"endColumn":48},{"ruleId":"1939","severity":1,"message":"1940","line":67,"column":36,"nodeType":"1941","messageId":"1942","endLine":67,"endColumn":38},{"ruleId":"1931","severity":1,"message":"1944","line":3,"column":16,"nodeType":"1933","messageId":"1934","endLine":3,"endColumn":18},{"ruleId":"1931","severity":1,"message":"1980","line":10,"column":12,"nodeType":"1933","messageId":"1934","endLine":10,"endColumn":16},{"ruleId":"1931","severity":1,"message":"1950","line":15,"column":11,"nodeType":"1933","messageId":"1934","endLine":15,"endColumn":18},{"ruleId":"1931","severity":1,"message":"1963","line":5,"column":10,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1945","line":59,"column":19,"nodeType":"1933","messageId":"1934","endLine":59,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":60,"column":13,"nodeType":"1948","messageId":"1949","endLine":67,"endColumn":14},{"ruleId":"1931","severity":1,"message":"2068","line":9,"column":10,"nodeType":"1933","messageId":"1934","endLine":9,"endColumn":16},{"ruleId":"1931","severity":1,"message":"2069","line":22,"column":11,"nodeType":"1933","messageId":"1934","endLine":22,"endColumn":20},{"ruleId":"1931","severity":1,"message":"1945","line":35,"column":19,"nodeType":"1933","messageId":"1934","endLine":35,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":36,"column":13,"nodeType":"1948","messageId":"1949","endLine":43,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1963","line":7,"column":14,"nodeType":"1933","messageId":"1934","endLine":7,"endColumn":18},{"ruleId":"1951","severity":1,"message":"1965","line":56,"column":8,"nodeType":"1953","endLine":56,"endColumn":16,"suggestions":"2070"},{"ruleId":"1951","severity":1,"message":"1965","line":48,"column":8,"nodeType":"1953","endLine":48,"endColumn":16,"suggestions":"2071"},{"ruleId":"1951","severity":1,"message":"1965","line":56,"column":8,"nodeType":"1953","endLine":56,"endColumn":20,"suggestions":"2072"},{"ruleId":"1939","severity":1,"message":"1940","line":68,"column":21,"nodeType":"1941","messageId":"1942","endLine":68,"endColumn":23},{"ruleId":"1951","severity":1,"message":"1965","line":80,"column":8,"nodeType":"1953","endLine":80,"endColumn":18,"suggestions":"2073"},{"ruleId":"1969","severity":1,"message":"1970","line":193,"column":37,"nodeType":"1928","endLine":193,"endColumn":108},{"ruleId":"1969","severity":1,"message":"1970","line":197,"column":37,"nodeType":"1928","endLine":197,"endColumn":100},{"ruleId":"1931","severity":1,"message":"1973","line":16,"column":12,"nodeType":"1933","messageId":"1934","endLine":16,"endColumn":26},{"ruleId":"1931","severity":1,"message":"1974","line":16,"column":28,"nodeType":"1933","messageId":"1934","endLine":16,"endColumn":45},{"ruleId":"1931","severity":1,"message":"1975","line":17,"column":12,"nodeType":"1933","messageId":"1934","endLine":17,"endColumn":25},{"ruleId":"1931","severity":1,"message":"1976","line":17,"column":27,"nodeType":"1933","messageId":"1934","endLine":17,"endColumn":43},{"ruleId":"1931","severity":1,"message":"1977","line":27,"column":11,"nodeType":"1933","messageId":"1934","endLine":27,"endColumn":20},{"ruleId":"1951","severity":1,"message":"1978","line":66,"column":8,"nodeType":"1953","endLine":66,"endColumn":15,"suggestions":"2074"},{"ruleId":"1931","severity":1,"message":"1971","line":5,"column":23,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":37},{"ruleId":"1931","severity":1,"message":"1945","line":53,"column":19,"nodeType":"1933","messageId":"1934","endLine":53,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":54,"column":13,"nodeType":"1948","messageId":"1949","endLine":61,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1981","line":6,"column":10,"nodeType":"1933","messageId":"1934","endLine":6,"endColumn":16},{"ruleId":"1951","severity":1,"message":"1982","line":47,"column":8,"nodeType":"1953","endLine":47,"endColumn":20,"suggestions":"2075"},{"ruleId":"1951","severity":1,"message":"1965","line":55,"column":8,"nodeType":"1953","endLine":55,"endColumn":20,"suggestions":"2076"},{"ruleId":"1951","severity":1,"message":"1965","line":63,"column":8,"nodeType":"1953","endLine":63,"endColumn":16,"suggestions":"2077"},{"ruleId":"1931","severity":1,"message":"1990","line":7,"column":32,"nodeType":"1933","messageId":"1934","endLine":7,"endColumn":38},{"ruleId":"1931","severity":1,"message":"1991","line":7,"column":40,"nodeType":"1933","messageId":"1934","endLine":7,"endColumn":49},{"ruleId":"1931","severity":1,"message":"1992","line":10,"column":8,"nodeType":"1933","messageId":"1934","endLine":10,"endColumn":16},{"ruleId":"1931","severity":1,"message":"2000","line":30,"column":11,"nodeType":"1933","messageId":"1934","endLine":30,"endColumn":13},{"ruleId":"1931","severity":1,"message":"1986","line":5,"column":8,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":16},{"ruleId":"1931","severity":1,"message":"1987","line":9,"column":8,"nodeType":"1933","messageId":"1934","endLine":9,"endColumn":25},{"ruleId":"1931","severity":1,"message":"1988","line":10,"column":8,"nodeType":"1933","messageId":"1934","endLine":10,"endColumn":28},{"ruleId":"1931","severity":1,"message":"1989","line":11,"column":10,"nodeType":"1933","messageId":"1934","endLine":11,"endColumn":29},{"ruleId":"1931","severity":1,"message":"1944","line":8,"column":10,"nodeType":"1933","messageId":"1934","endLine":8,"endColumn":12},{"ruleId":"1931","severity":1,"message":"1932","line":8,"column":14,"nodeType":"1933","messageId":"1934","endLine":8,"endColumn":23},{"ruleId":"1931","severity":1,"message":"2057","line":10,"column":8,"nodeType":"1933","messageId":"1934","endLine":10,"endColumn":16},{"ruleId":"1931","severity":1,"message":"2058","line":11,"column":8,"nodeType":"1933","messageId":"1934","endLine":11,"endColumn":16},{"ruleId":"1931","severity":1,"message":"2061","line":12,"column":10,"nodeType":"1933","messageId":"1934","endLine":12,"endColumn":18},{"ruleId":"1931","severity":1,"message":"2000","line":18,"column":11,"nodeType":"1933","messageId":"1934","endLine":18,"endColumn":13},{"ruleId":"1951","severity":1,"message":"2052","line":61,"column":8,"nodeType":"1953","endLine":61,"endColumn":17,"suggestions":"2078"},{"ruleId":"1951","severity":1,"message":"2054","line":142,"column":8,"nodeType":"1953","endLine":142,"endColumn":20,"suggestions":"2079"},{"ruleId":"1931","severity":1,"message":"1991","line":5,"column":20,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":29},{"ruleId":"1931","severity":1,"message":"1981","line":2,"column":10,"nodeType":"1933","messageId":"1934","endLine":2,"endColumn":16},{"ruleId":"1931","severity":1,"message":"1932","line":14,"column":14,"nodeType":"1933","messageId":"1934","endLine":14,"endColumn":23},{"ruleId":"1931","severity":1,"message":"2006","line":16,"column":8,"nodeType":"1933","messageId":"1934","endLine":16,"endColumn":16},{"ruleId":"1951","severity":1,"message":"2007","line":128,"column":8,"nodeType":"1953","endLine":128,"endColumn":17,"suggestions":"2080"},{"ruleId":"1969","severity":1,"message":"1970","line":315,"column":45,"nodeType":"1928","endLine":315,"endColumn":171},{"ruleId":"1931","severity":1,"message":"2012","line":1,"column":9,"nodeType":"1933","messageId":"1934","endLine":1,"endColumn":30},{"ruleId":"1931","severity":1,"message":"1932","line":9,"column":14,"nodeType":"1933","messageId":"1934","endLine":9,"endColumn":23},{"ruleId":"1951","severity":1,"message":"2007","line":83,"column":8,"nodeType":"1953","endLine":83,"endColumn":17,"suggestions":"2081"},{"ruleId":"1931","severity":1,"message":"1991","line":7,"column":20,"nodeType":"1933","messageId":"1934","endLine":7,"endColumn":29},{"ruleId":"1931","severity":1,"message":"1981","line":2,"column":10,"nodeType":"1933","messageId":"1934","endLine":2,"endColumn":16},{"ruleId":"1931","severity":1,"message":"1937","line":9,"column":10,"nodeType":"1933","messageId":"1934","endLine":9,"endColumn":20},{"ruleId":"1931","severity":1,"message":"2009","line":10,"column":10,"nodeType":"1933","messageId":"1934","endLine":10,"endColumn":14},{"ruleId":"1951","severity":1,"message":"2010","line":208,"column":8,"nodeType":"1953","endLine":208,"endColumn":17,"suggestions":"2082"},{"ruleId":"1931","severity":1,"message":"1932","line":9,"column":14,"nodeType":"1933","messageId":"1934","endLine":9,"endColumn":23},{"ruleId":"1951","severity":1,"message":"2016","line":196,"column":8,"nodeType":"1953","endLine":196,"endColumn":20,"suggestions":"2083"},{"ruleId":"1931","severity":1,"message":"1945","line":59,"column":19,"nodeType":"1933","messageId":"1934","endLine":59,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":60,"column":13,"nodeType":"1948","messageId":"1949","endLine":67,"endColumn":14},{"ruleId":"1951","severity":1,"message":"2018","line":144,"column":8,"nodeType":"1953","endLine":144,"endColumn":20,"suggestions":"2084"},{"ruleId":"1931","severity":1,"message":"2056","line":17,"column":11,"nodeType":"1933","messageId":"1934","endLine":17,"endColumn":16},{"ruleId":"1951","severity":1,"message":"2018","line":89,"column":8,"nodeType":"1953","endLine":89,"endColumn":31,"suggestions":"2085"},{"ruleId":"1951","severity":1,"message":"2021","line":178,"column":11,"nodeType":"1953","endLine":178,"endColumn":13,"suggestions":"2086"},{"ruleId":"1951","severity":1,"message":"2001","line":44,"column":8,"nodeType":"1953","endLine":44,"endColumn":24,"suggestions":"2087"},{"ruleId":"1939","severity":1,"message":"1940","line":49,"column":26,"nodeType":"1941","messageId":"1942","endLine":49,"endColumn":28},{"ruleId":"1931","severity":1,"message":"2004","line":13,"column":12,"nodeType":"1933","messageId":"1934","endLine":13,"endColumn":23},{"ruleId":"1931","severity":1,"message":"2005","line":13,"column":25,"nodeType":"1933","messageId":"1934","endLine":13,"endColumn":39},{"ruleId":"1931","severity":1,"message":"1991","line":8,"column":20,"nodeType":"1933","messageId":"1934","endLine":8,"endColumn":29},{"ruleId":"1931","severity":1,"message":"2004","line":11,"column":12,"nodeType":"1933","messageId":"1934","endLine":11,"endColumn":23},{"ruleId":"1931","severity":1,"message":"2005","line":11,"column":25,"nodeType":"1933","messageId":"1934","endLine":11,"endColumn":39},{"ruleId":"1931","severity":1,"message":"2048","line":2,"column":19,"nodeType":"1933","messageId":"1934","endLine":2,"endColumn":23},{"ruleId":"1951","severity":1,"message":"1965","line":44,"column":8,"nodeType":"1953","endLine":44,"endColumn":20,"suggestions":"2088"},{"ruleId":"1951","severity":1,"message":"1965","line":52,"column":8,"nodeType":"1953","endLine":52,"endColumn":25,"suggestions":"2089"},{"ruleId":"1951","severity":1,"message":"1965","line":60,"column":8,"nodeType":"1953","endLine":60,"endColumn":16,"suggestions":"2090"},{"ruleId":"1931","severity":1,"message":"2023","line":9,"column":24,"nodeType":"1933","messageId":"1934","endLine":9,"endColumn":60},{"ruleId":"1931","severity":1,"message":"2024","line":17,"column":12,"nodeType":"1933","messageId":"1934","endLine":17,"endColumn":18},{"ruleId":"1931","severity":1,"message":"2025","line":33,"column":11,"nodeType":"1933","messageId":"1934","endLine":33,"endColumn":19},{"ruleId":"1931","severity":1,"message":"2026","line":34,"column":11,"nodeType":"1933","messageId":"1934","endLine":34,"endColumn":24},{"ruleId":"1951","severity":1,"message":"1965","line":57,"column":8,"nodeType":"1953","endLine":57,"endColumn":16,"suggestions":"2091"},{"ruleId":"1951","severity":1,"message":"1965","line":65,"column":8,"nodeType":"1953","endLine":65,"endColumn":27,"suggestions":"2092"},{"ruleId":"1951","severity":1,"message":"1965","line":73,"column":8,"nodeType":"1953","endLine":73,"endColumn":17,"suggestions":"2093"},{"ruleId":"1951","severity":1,"message":"1965","line":81,"column":8,"nodeType":"1953","endLine":81,"endColumn":25,"suggestions":"2094"},{"ruleId":"1951","severity":1,"message":"1965","line":89,"column":8,"nodeType":"1953","endLine":89,"endColumn":20,"suggestions":"2095"},{"ruleId":"1951","severity":1,"message":"1965","line":95,"column":8,"nodeType":"1953","endLine":95,"endColumn":16,"suggestions":"2096"},{"ruleId":"1951","severity":1,"message":"2034","line":122,"column":8,"nodeType":"1953","endLine":122,"endColumn":10,"suggestions":"2097"},{"ruleId":"1931","severity":1,"message":"2098","line":10,"column":8,"nodeType":"1933","messageId":"1934","endLine":10,"endColumn":20},{"ruleId":"1931","severity":1,"message":"2024","line":16,"column":12,"nodeType":"1933","messageId":"1934","endLine":16,"endColumn":18},{"ruleId":"1931","severity":1,"message":"2036","line":22,"column":33,"nodeType":"1933","messageId":"1934","endLine":22,"endColumn":55},{"ruleId":"1931","severity":1,"message":"2025","line":33,"column":11,"nodeType":"1933","messageId":"1934","endLine":33,"endColumn":19},{"ruleId":"1931","severity":1,"message":"2026","line":34,"column":11,"nodeType":"1933","messageId":"1934","endLine":34,"endColumn":24},{"ruleId":"1951","severity":1,"message":"1965","line":56,"column":8,"nodeType":"1953","endLine":56,"endColumn":16,"suggestions":"2099"},{"ruleId":"1951","severity":1,"message":"1965","line":64,"column":8,"nodeType":"1953","endLine":64,"endColumn":17,"suggestions":"2100"},{"ruleId":"1951","severity":1,"message":"1965","line":72,"column":8,"nodeType":"1953","endLine":72,"endColumn":27,"suggestions":"2101"},{"ruleId":"1951","severity":1,"message":"1965","line":80,"column":8,"nodeType":"1953","endLine":80,"endColumn":25,"suggestions":"2102"},{"ruleId":"1951","severity":1,"message":"1965","line":88,"column":8,"nodeType":"1953","endLine":88,"endColumn":20,"suggestions":"2103"},{"ruleId":"1951","severity":1,"message":"1965","line":94,"column":8,"nodeType":"1953","endLine":94,"endColumn":16,"suggestions":"2104"},{"ruleId":"1951","severity":1,"message":"2034","line":180,"column":8,"nodeType":"1953","endLine":180,"endColumn":10,"suggestions":"2105"},{"ruleId":"1931","severity":1,"message":"2045","line":5,"column":18,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":25},{"ruleId":"1951","severity":1,"message":"2046","line":65,"column":8,"nodeType":"1953","endLine":65,"endColumn":20,"suggestions":"2106"},{"ruleId":"1931","severity":1,"message":"1991","line":6,"column":20,"nodeType":"1933","messageId":"1934","endLine":6,"endColumn":29},{"ruleId":"1931","severity":1,"message":"2003","line":50,"column":11,"nodeType":"1933","messageId":"1934","endLine":50,"endColumn":30},{"ruleId":"1931","severity":1,"message":"1937","line":8,"column":20,"nodeType":"1933","messageId":"1934","endLine":8,"endColumn":30},{"ruleId":"1951","severity":1,"message":"1998","line":40,"column":8,"nodeType":"1953","endLine":40,"endColumn":10,"suggestions":"2107"},{"ruleId":"1931","severity":1,"message":"1993","line":8,"column":10,"nodeType":"1933","messageId":"1934","endLine":8,"endColumn":33},{"ruleId":"1931","severity":1,"message":"1994","line":11,"column":12,"nodeType":"1933","messageId":"1934","endLine":11,"endColumn":26},{"ruleId":"1931","severity":1,"message":"1995","line":11,"column":28,"nodeType":"1933","messageId":"1934","endLine":11,"endColumn":45},{"ruleId":"1931","severity":1,"message":"1996","line":12,"column":12,"nodeType":"1933","messageId":"1934","endLine":12,"endColumn":27},{"ruleId":"1931","severity":1,"message":"1997","line":12,"column":29,"nodeType":"1933","messageId":"1934","endLine":12,"endColumn":47},{"ruleId":"1931","severity":1,"message":"1991","line":4,"column":20,"nodeType":"1933","messageId":"1934","endLine":4,"endColumn":29},{"ruleId":"1931","severity":1,"message":"2108","line":16,"column":19,"nodeType":"1933","messageId":"1934","endLine":16,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":138,"column":13,"nodeType":"1948","messageId":"1949","endLine":145,"endColumn":14},{"ruleId":"1931","severity":1,"message":"2109","line":22,"column":12,"nodeType":"1933","messageId":"1934","endLine":22,"endColumn":21},{"ruleId":"1951","severity":1,"message":"1965","line":50,"column":8,"nodeType":"1953","endLine":50,"endColumn":20,"suggestions":"2110"},{"ruleId":"1951","severity":1,"message":"1965","line":58,"column":8,"nodeType":"1953","endLine":58,"endColumn":16,"suggestions":"2111"},{"ruleId":"1939","severity":1,"message":"1940","line":111,"column":33,"nodeType":"1941","messageId":"1942","endLine":111,"endColumn":35},{"ruleId":"1931","severity":1,"message":"2112","line":124,"column":11,"nodeType":"1933","messageId":"1934","endLine":124,"endColumn":28},{"ruleId":"1939","severity":1,"message":"1940","line":35,"column":16,"nodeType":"1941","messageId":"1942","endLine":35,"endColumn":18},{"ruleId":"1931","severity":1,"message":"2113","line":193,"column":9,"nodeType":"1933","messageId":"1934","endLine":193,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1945","line":140,"column":19,"nodeType":"1933","messageId":"1934","endLine":140,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":141,"column":13,"nodeType":"1948","messageId":"1949","endLine":148,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1945","line":116,"column":19,"nodeType":"1933","messageId":"1934","endLine":116,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":117,"column":13,"nodeType":"1948","messageId":"1949","endLine":124,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1945","line":197,"column":19,"nodeType":"1933","messageId":"1934","endLine":197,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":198,"column":13,"nodeType":"1948","messageId":"1949","endLine":205,"endColumn":14},{"ruleId":"1939","severity":1,"message":"1940","line":43,"column":21,"nodeType":"1941","messageId":"1942","endLine":43,"endColumn":23},{"ruleId":"1951","severity":1,"message":"2114","line":59,"column":7,"nodeType":"1953","endLine":59,"endColumn":22,"suggestions":"2115"},{"ruleId":"1939","severity":1,"message":"1940","line":64,"column":33,"nodeType":"1941","messageId":"1942","endLine":64,"endColumn":35},{"ruleId":"1939","severity":1,"message":"1940","line":72,"column":33,"nodeType":"1941","messageId":"1942","endLine":72,"endColumn":35},{"ruleId":"1931","severity":1,"message":"2048","line":5,"column":10,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1963","line":9,"column":10,"nodeType":"1933","messageId":"1934","endLine":9,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1981","line":10,"column":10,"nodeType":"1933","messageId":"1934","endLine":10,"endColumn":16},{"ruleId":"1939","severity":1,"message":"1940","line":37,"column":21,"nodeType":"1941","messageId":"1942","endLine":37,"endColumn":23},{"ruleId":"1951","severity":1,"message":"2116","line":50,"column":7,"nodeType":"1953","endLine":50,"endColumn":22,"suggestions":"2117"},{"ruleId":"1931","severity":1,"message":"2118","line":74,"column":11,"nodeType":"1933","messageId":"1934","endLine":74,"endColumn":19},{"ruleId":"1939","severity":1,"message":"1940","line":31,"column":15,"nodeType":"1941","messageId":"1942","endLine":31,"endColumn":17},{"ruleId":"1939","severity":1,"message":"1940","line":52,"column":19,"nodeType":"1941","messageId":"1942","endLine":52,"endColumn":21},{"ruleId":"1939","severity":1,"message":"1940","line":73,"column":23,"nodeType":"1941","messageId":"1942","endLine":73,"endColumn":25},{"ruleId":"1939","severity":1,"message":"1940","line":141,"column":23,"nodeType":"1941","messageId":"1942","endLine":141,"endColumn":25},{"ruleId":"1951","severity":1,"message":"2119","line":173,"column":8,"nodeType":"1953","endLine":173,"endColumn":15,"suggestions":"2120"},{"ruleId":"1951","severity":1,"message":"2121","line":297,"column":8,"nodeType":"1953","endLine":297,"endColumn":16,"suggestions":"2122"},{"ruleId":"1931","severity":1,"message":"2123","line":5,"column":33,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":45},{"ruleId":"1931","severity":1,"message":"1981","line":7,"column":10,"nodeType":"1933","messageId":"1934","endLine":7,"endColumn":16},{"ruleId":"1931","severity":1,"message":"1963","line":9,"column":10,"nodeType":"1933","messageId":"1934","endLine":9,"endColumn":14},{"ruleId":"1931","severity":1,"message":"2118","line":38,"column":11,"nodeType":"1933","messageId":"1934","endLine":38,"endColumn":19},{"ruleId":"1939","severity":1,"message":"1940","line":44,"column":21,"nodeType":"1941","messageId":"1942","endLine":44,"endColumn":23},{"ruleId":"1951","severity":1,"message":"2116","line":59,"column":7,"nodeType":"1953","endLine":59,"endColumn":22,"suggestions":"2124"},{"ruleId":"2125","severity":1,"message":"2126","line":125,"column":73,"nodeType":"2127","messageId":"2128","endLine":125,"endColumn":107},{"ruleId":"2125","severity":1,"message":"2126","line":145,"column":77,"nodeType":"2127","messageId":"2128","endLine":145,"endColumn":107},{"ruleId":"1951","severity":1,"message":"1965","line":47,"column":8,"nodeType":"1953","endLine":47,"endColumn":20,"suggestions":"2129"},{"ruleId":"1951","severity":1,"message":"1965","line":55,"column":8,"nodeType":"1953","endLine":55,"endColumn":16,"suggestions":"2130"},{"ruleId":"1931","severity":1,"message":"2131","line":77,"column":9,"nodeType":"1933","messageId":"1934","endLine":77,"endColumn":30},{"ruleId":"1931","severity":1,"message":"2132","line":78,"column":9,"nodeType":"1933","messageId":"1934","endLine":78,"endColumn":38},{"ruleId":"1939","severity":1,"message":"1940","line":82,"column":34,"nodeType":"1941","messageId":"1942","endLine":82,"endColumn":36},{"ruleId":"1939","severity":1,"message":"1940","line":94,"column":35,"nodeType":"1941","messageId":"1942","endLine":94,"endColumn":37},{"ruleId":"1931","severity":1,"message":"2133","line":103,"column":9,"nodeType":"1933","messageId":"1934","endLine":103,"endColumn":26},{"ruleId":"1931","severity":1,"message":"2134","line":117,"column":11,"nodeType":"1933","messageId":"1934","endLine":117,"endColumn":22},{"ruleId":"1931","severity":1,"message":"2135","line":127,"column":11,"nodeType":"1933","messageId":"1934","endLine":127,"endColumn":28},{"ruleId":"1931","severity":1,"message":"1991","line":8,"column":10,"nodeType":"1933","messageId":"1934","endLine":8,"endColumn":19},{"ruleId":"1939","severity":1,"message":"1940","line":51,"column":33,"nodeType":"1941","messageId":"1942","endLine":51,"endColumn":35},{"ruleId":"1939","severity":1,"message":"1940","line":63,"column":25,"nodeType":"1941","messageId":"1942","endLine":63,"endColumn":27},{"ruleId":"1939","severity":1,"message":"1940","line":111,"column":33,"nodeType":"1941","messageId":"1942","endLine":111,"endColumn":35},{"ruleId":"1931","severity":1,"message":"1945","line":96,"column":19,"nodeType":"1933","messageId":"1934","endLine":96,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":97,"column":13,"nodeType":"1948","messageId":"1949","endLine":104,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1945","line":130,"column":19,"nodeType":"1933","messageId":"1934","endLine":130,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":131,"column":13,"nodeType":"1948","messageId":"1949","endLine":138,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1971","line":9,"column":49,"nodeType":"1933","messageId":"1934","endLine":9,"endColumn":63},{"ruleId":"1931","severity":1,"message":"2136","line":23,"column":31,"nodeType":"1933","messageId":"1934","endLine":23,"endColumn":51},{"ruleId":"1931","severity":1,"message":"2137","line":24,"column":22,"nodeType":"1933","messageId":"1934","endLine":24,"endColumn":33},{"ruleId":"1951","severity":1,"message":"2138","line":91,"column":8,"nodeType":"1953","endLine":91,"endColumn":18,"suggestions":"2139"},{"ruleId":"1931","severity":1,"message":"1945","line":185,"column":19,"nodeType":"1933","messageId":"1934","endLine":185,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":186,"column":13,"nodeType":"1948","messageId":"1949","endLine":193,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1945","line":219,"column":19,"nodeType":"1933","messageId":"1934","endLine":219,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":220,"column":13,"nodeType":"1948","messageId":"1949","endLine":227,"endColumn":14},{"ruleId":"1969","severity":1,"message":"1970","line":127,"column":33,"nodeType":"1928","endLine":127,"endColumn":104},{"ruleId":"1931","severity":1,"message":"1963","line":10,"column":10,"nodeType":"1933","messageId":"1934","endLine":10,"endColumn":14},{"ruleId":"1931","severity":1,"message":"2140","line":26,"column":11,"nodeType":"1933","messageId":"1934","endLine":26,"endColumn":23},{"ruleId":"1951","severity":1,"message":"2116","line":51,"column":7,"nodeType":"1953","endLine":51,"endColumn":22,"suggestions":"2141"},{"ruleId":"1931","severity":1,"message":"2142","line":28,"column":11,"nodeType":"1933","messageId":"1934","endLine":28,"endColumn":24},{"ruleId":"1939","severity":1,"message":"1940","line":40,"column":21,"nodeType":"1941","messageId":"1942","endLine":40,"endColumn":23},{"ruleId":"1951","severity":1,"message":"2143","line":73,"column":8,"nodeType":"1953","endLine":73,"endColumn":16,"suggestions":"2144"},{"ruleId":"1951","severity":1,"message":"2145","line":88,"column":7,"nodeType":"1953","endLine":88,"endColumn":16,"suggestions":"2146"},{"ruleId":"1931","severity":1,"message":"1981","line":7,"column":10,"nodeType":"1933","messageId":"1934","endLine":7,"endColumn":16},{"ruleId":"1931","severity":1,"message":"1963","line":9,"column":10,"nodeType":"1933","messageId":"1934","endLine":9,"endColumn":14},{"ruleId":"1939","severity":1,"message":"1940","line":32,"column":21,"nodeType":"1941","messageId":"1942","endLine":32,"endColumn":23},{"ruleId":"1931","severity":1,"message":"2118","line":38,"column":11,"nodeType":"1933","messageId":"1934","endLine":38,"endColumn":19},{"ruleId":"1951","severity":1,"message":"2116","line":50,"column":7,"nodeType":"1953","endLine":50,"endColumn":22,"suggestions":"2147"},{"ruleId":"1931","severity":1,"message":"1991","line":5,"column":20,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":29},{"ruleId":"1931","severity":1,"message":"1935","line":6,"column":8,"nodeType":"1933","messageId":"1934","endLine":6,"endColumn":12},{"ruleId":"1931","severity":1,"message":"2148","line":12,"column":8,"nodeType":"1933","messageId":"1934","endLine":12,"endColumn":18},{"ruleId":"1931","severity":1,"message":"2149","line":13,"column":8,"nodeType":"1933","messageId":"1934","endLine":13,"endColumn":18},{"ruleId":"1931","severity":1,"message":"2150","line":21,"column":12,"nodeType":"1933","messageId":"1934","endLine":21,"endColumn":28},{"ruleId":"1931","severity":1,"message":"2151","line":21,"column":30,"nodeType":"1933","messageId":"1934","endLine":21,"endColumn":49},{"ruleId":"1931","severity":1,"message":"2152","line":92,"column":11,"nodeType":"1933","messageId":"1934","endLine":92,"endColumn":27},{"ruleId":"1931","severity":1,"message":"2153","line":97,"column":11,"nodeType":"1933","messageId":"1934","endLine":97,"endColumn":27},{"ruleId":"1931","severity":1,"message":"2154","line":102,"column":11,"nodeType":"1933","messageId":"1934","endLine":102,"endColumn":21},{"ruleId":"1969","severity":1,"message":"1970","line":175,"column":33,"nodeType":"1928","endLine":175,"endColumn":148},{"ruleId":"1969","severity":1,"message":"1970","line":201,"column":25,"nodeType":"1928","endLine":201,"endColumn":121},{"ruleId":"1931","severity":1,"message":"2155","line":34,"column":11,"nodeType":"1933","messageId":"1934","endLine":34,"endColumn":19},{"ruleId":"1931","severity":1,"message":"1945","line":95,"column":19,"nodeType":"1933","messageId":"1934","endLine":95,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":96,"column":13,"nodeType":"1948","messageId":"1949","endLine":103,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1945","line":129,"column":19,"nodeType":"1933","messageId":"1934","endLine":129,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":130,"column":13,"nodeType":"1948","messageId":"1949","endLine":137,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1935","line":16,"column":8,"nodeType":"1933","messageId":"1934","endLine":16,"endColumn":12},{"ruleId":"1939","severity":1,"message":"1940","line":45,"column":21,"nodeType":"1941","messageId":"1942","endLine":45,"endColumn":23},{"ruleId":"1951","severity":1,"message":"2116","line":60,"column":7,"nodeType":"1953","endLine":60,"endColumn":19,"suggestions":"2156"},{"ruleId":"1969","severity":1,"message":"1970","line":202,"column":25,"nodeType":"1928","endLine":202,"endColumn":117},{"ruleId":"1951","severity":1,"message":"2157","line":59,"column":12,"nodeType":"1953","endLine":59,"endColumn":22,"suggestions":"2158"},{"ruleId":"1931","severity":1,"message":"2159","line":3,"column":8,"nodeType":"1933","messageId":"1934","endLine":3,"endColumn":21},{"ruleId":"1931","severity":1,"message":"2160","line":6,"column":18,"nodeType":"1933","messageId":"1934","endLine":6,"endColumn":22},{"ruleId":"1931","severity":1,"message":"2161","line":23,"column":11,"nodeType":"1933","messageId":"1934","endLine":23,"endColumn":20},{"ruleId":"1931","severity":1,"message":"2155","line":26,"column":11,"nodeType":"1933","messageId":"1934","endLine":26,"endColumn":19},{"ruleId":"1951","severity":1,"message":"2162","line":40,"column":8,"nodeType":"1953","endLine":40,"endColumn":16,"suggestions":"2163"},{"ruleId":"1946","severity":1,"message":"1947","line":130,"column":13,"nodeType":"1948","messageId":"1949","endLine":137,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1963","line":4,"column":10,"nodeType":"1933","messageId":"1934","endLine":4,"endColumn":14},{"ruleId":"1922","severity":1,"message":"1923","line":35,"column":38,"nodeType":"1924","messageId":"1925","endLine":35,"endColumn":40},{"ruleId":"1922","severity":1,"message":"1923","line":20,"column":26,"nodeType":"1924","messageId":"1925","endLine":20,"endColumn":28},{"ruleId":"1926","severity":1,"message":"1927","line":40,"column":13,"nodeType":"1928","messageId":"1929","endLine":40,"endColumn":53,"fix":"2164"},{"ruleId":"1931","severity":1,"message":"1932","line":2,"column":14,"nodeType":"1933","messageId":"1934","endLine":2,"endColumn":23},{"ruleId":"1931","severity":1,"message":"1935","line":3,"column":8,"nodeType":"1933","messageId":"1934","endLine":3,"endColumn":12},{"ruleId":"1931","severity":1,"message":"1936","line":5,"column":10,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":20},{"ruleId":"1931","severity":1,"message":"1937","line":7,"column":10,"nodeType":"1933","messageId":"1934","endLine":7,"endColumn":20},{"ruleId":"1931","severity":1,"message":"1938","line":14,"column":12,"nodeType":"1933","messageId":"1934","endLine":14,"endColumn":18},{"ruleId":"1939","severity":1,"message":"1940","line":33,"column":17,"nodeType":"1941","messageId":"1942","endLine":33,"endColumn":19},{"ruleId":"1939","severity":1,"message":"1940","line":109,"column":60,"nodeType":"1941","messageId":"1942","endLine":109,"endColumn":62},{"ruleId":"1939","severity":1,"message":"1940","line":113,"column":60,"nodeType":"1941","messageId":"1942","endLine":113,"endColumn":62},{"ruleId":"1939","severity":1,"message":"1940","line":175,"column":18,"nodeType":"1941","messageId":"1942","endLine":175,"endColumn":20},{"ruleId":"1926","severity":1,"message":"1927","line":265,"column":21,"nodeType":"1928","messageId":"1929","endLine":265,"endColumn":60,"fix":"2165"},{"ruleId":"1931","severity":1,"message":"1944","line":3,"column":16,"nodeType":"1933","messageId":"1934","endLine":3,"endColumn":18},{"ruleId":"1931","severity":1,"message":"1945","line":89,"column":19,"nodeType":"1933","messageId":"1934","endLine":89,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":90,"column":13,"nodeType":"1948","messageId":"1949","endLine":97,"endColumn":14},{"ruleId":"1951","severity":1,"message":"1952","line":91,"column":8,"nodeType":"1953","endLine":91,"endColumn":16,"suggestions":"2166"},{"ruleId":"1951","severity":1,"message":"1952","line":114,"column":8,"nodeType":"1953","endLine":114,"endColumn":15,"suggestions":"2167"},{"ruleId":"1951","severity":1,"message":"1952","line":138,"column":8,"nodeType":"1953","endLine":138,"endColumn":15,"suggestions":"2168"},{"ruleId":"1951","severity":1,"message":"1957","line":233,"column":8,"nodeType":"1953","endLine":233,"endColumn":10,"suggestions":"2169"},{"ruleId":"1951","severity":1,"message":"1959","line":329,"column":8,"nodeType":"1953","endLine":329,"endColumn":28,"suggestions":"2170"},{"ruleId":"1931","severity":1,"message":"1950","line":15,"column":11,"nodeType":"1933","messageId":"1934","endLine":15,"endColumn":18},{"ruleId":"1931","severity":1,"message":"1963","line":5,"column":10,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1964","line":12,"column":10,"nodeType":"1933","messageId":"1934","endLine":12,"endColumn":16},{"ruleId":"1931","severity":1,"message":"1945","line":59,"column":19,"nodeType":"1933","messageId":"1934","endLine":59,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":60,"column":13,"nodeType":"1948","messageId":"1949","endLine":67,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1961","line":19,"column":12,"nodeType":"1933","messageId":"1934","endLine":19,"endColumn":29},{"ruleId":"1931","severity":1,"message":"1962","line":19,"column":31,"nodeType":"1933","messageId":"1934","endLine":19,"endColumn":51},{"ruleId":"1931","severity":1,"message":"1945","line":42,"column":19,"nodeType":"1933","messageId":"1934","endLine":42,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":43,"column":13,"nodeType":"1948","messageId":"1949","endLine":50,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1973","line":16,"column":12,"nodeType":"1933","messageId":"1934","endLine":16,"endColumn":26},{"ruleId":"1931","severity":1,"message":"1974","line":16,"column":28,"nodeType":"1933","messageId":"1934","endLine":16,"endColumn":45},{"ruleId":"1931","severity":1,"message":"1975","line":17,"column":12,"nodeType":"1933","messageId":"1934","endLine":17,"endColumn":25},{"ruleId":"1931","severity":1,"message":"1976","line":17,"column":27,"nodeType":"1933","messageId":"1934","endLine":17,"endColumn":43},{"ruleId":"1931","severity":1,"message":"1977","line":27,"column":11,"nodeType":"1933","messageId":"1934","endLine":27,"endColumn":20},{"ruleId":"1951","severity":1,"message":"1978","line":66,"column":8,"nodeType":"1953","endLine":66,"endColumn":15,"suggestions":"2171"},{"ruleId":"1931","severity":1,"message":"1963","line":7,"column":14,"nodeType":"1933","messageId":"1934","endLine":7,"endColumn":18},{"ruleId":"1951","severity":1,"message":"1965","line":57,"column":8,"nodeType":"1953","endLine":57,"endColumn":16,"suggestions":"2172"},{"ruleId":"1931","severity":1,"message":"1971","line":5,"column":23,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":37},{"ruleId":"1931","severity":1,"message":"1945","line":56,"column":19,"nodeType":"1933","messageId":"1934","endLine":56,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":57,"column":13,"nodeType":"1948","messageId":"1949","endLine":64,"endColumn":14},{"ruleId":"1951","severity":1,"message":"1965","line":48,"column":8,"nodeType":"1953","endLine":48,"endColumn":16,"suggestions":"2173"},{"ruleId":"1951","severity":1,"message":"1965","line":56,"column":8,"nodeType":"1953","endLine":56,"endColumn":20,"suggestions":"2174"},{"ruleId":"1939","severity":1,"message":"1940","line":68,"column":21,"nodeType":"1941","messageId":"1942","endLine":68,"endColumn":23},{"ruleId":"1951","severity":1,"message":"1965","line":80,"column":8,"nodeType":"1953","endLine":80,"endColumn":18,"suggestions":"2175"},{"ruleId":"1969","severity":1,"message":"1970","line":193,"column":37,"nodeType":"1928","endLine":193,"endColumn":108},{"ruleId":"1969","severity":1,"message":"1970","line":197,"column":37,"nodeType":"1928","endLine":197,"endColumn":100},{"ruleId":"1931","severity":1,"message":"1980","line":16,"column":12,"nodeType":"1933","messageId":"1934","endLine":16,"endColumn":16},{"ruleId":"1939","severity":1,"message":"1940","line":28,"column":46,"nodeType":"1941","messageId":"1942","endLine":28,"endColumn":48},{"ruleId":"1939","severity":1,"message":"1940","line":73,"column":36,"nodeType":"1941","messageId":"1942","endLine":73,"endColumn":38},{"ruleId":"1939","severity":1,"message":"1940","line":43,"column":21,"nodeType":"1941","messageId":"1942","endLine":43,"endColumn":23},{"ruleId":"1951","severity":1,"message":"2114","line":59,"column":7,"nodeType":"1953","endLine":59,"endColumn":22,"suggestions":"2176"},{"ruleId":"1939","severity":1,"message":"1940","line":64,"column":33,"nodeType":"1941","messageId":"1942","endLine":64,"endColumn":35},{"ruleId":"1939","severity":1,"message":"1940","line":72,"column":33,"nodeType":"1941","messageId":"1942","endLine":72,"endColumn":35},{"ruleId":"1931","severity":1,"message":"1945","line":116,"column":19,"nodeType":"1933","messageId":"1934","endLine":116,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":117,"column":13,"nodeType":"1948","messageId":"1949","endLine":124,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1945","line":197,"column":19,"nodeType":"1933","messageId":"1934","endLine":197,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":198,"column":13,"nodeType":"1948","messageId":"1949","endLine":205,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1980","line":10,"column":12,"nodeType":"1933","messageId":"1934","endLine":10,"endColumn":16},{"ruleId":"1931","severity":1,"message":"2048","line":5,"column":10,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":14},{"ruleId":"1931","severity":1,"message":"2177","line":8,"column":8,"nodeType":"1933","messageId":"1934","endLine":8,"endColumn":16},{"ruleId":"1931","severity":1,"message":"1963","line":10,"column":10,"nodeType":"1933","messageId":"1934","endLine":10,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1981","line":11,"column":10,"nodeType":"1933","messageId":"1934","endLine":11,"endColumn":16},{"ruleId":"1939","severity":1,"message":"1940","line":38,"column":21,"nodeType":"1941","messageId":"1942","endLine":38,"endColumn":23},{"ruleId":"1951","severity":1,"message":"2116","line":51,"column":7,"nodeType":"1953","endLine":51,"endColumn":22,"suggestions":"2178"},{"ruleId":"1931","severity":1,"message":"2118","line":75,"column":11,"nodeType":"1933","messageId":"1934","endLine":75,"endColumn":19},{"ruleId":"1939","severity":1,"message":"1940","line":31,"column":15,"nodeType":"1941","messageId":"1942","endLine":31,"endColumn":17},{"ruleId":"1939","severity":1,"message":"1940","line":52,"column":19,"nodeType":"1941","messageId":"1942","endLine":52,"endColumn":21},{"ruleId":"1939","severity":1,"message":"1940","line":73,"column":23,"nodeType":"1941","messageId":"1942","endLine":73,"endColumn":25},{"ruleId":"1939","severity":1,"message":"1940","line":141,"column":23,"nodeType":"1941","messageId":"1942","endLine":141,"endColumn":25},{"ruleId":"1951","severity":1,"message":"2119","line":173,"column":8,"nodeType":"1953","endLine":173,"endColumn":15,"suggestions":"2179"},{"ruleId":"1951","severity":1,"message":"2121","line":297,"column":8,"nodeType":"1953","endLine":297,"endColumn":16,"suggestions":"2180"},{"ruleId":"1931","severity":1,"message":"2123","line":5,"column":33,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":45},{"ruleId":"1931","severity":1,"message":"1981","line":7,"column":10,"nodeType":"1933","messageId":"1934","endLine":7,"endColumn":16},{"ruleId":"1931","severity":1,"message":"1963","line":9,"column":10,"nodeType":"1933","messageId":"1934","endLine":9,"endColumn":14},{"ruleId":"1931","severity":1,"message":"2181","line":11,"column":8,"nodeType":"1933","messageId":"1934","endLine":11,"endColumn":19},{"ruleId":"1931","severity":1,"message":"2048","line":12,"column":10,"nodeType":"1933","messageId":"1934","endLine":12,"endColumn":14},{"ruleId":"1931","severity":1,"message":"2118","line":40,"column":11,"nodeType":"1933","messageId":"1934","endLine":40,"endColumn":19},{"ruleId":"1939","severity":1,"message":"1940","line":46,"column":21,"nodeType":"1941","messageId":"1942","endLine":46,"endColumn":23},{"ruleId":"1951","severity":1,"message":"2116","line":61,"column":7,"nodeType":"1953","endLine":61,"endColumn":22,"suggestions":"2182"},{"ruleId":"2125","severity":1,"message":"2126","line":127,"column":73,"nodeType":"2127","messageId":"2128","endLine":127,"endColumn":107},{"ruleId":"2125","severity":1,"message":"2126","line":147,"column":77,"nodeType":"2127","messageId":"2128","endLine":147,"endColumn":107},{"ruleId":"1951","severity":1,"message":"1965","line":47,"column":8,"nodeType":"1953","endLine":47,"endColumn":20,"suggestions":"2183"},{"ruleId":"1951","severity":1,"message":"1965","line":55,"column":8,"nodeType":"1953","endLine":55,"endColumn":16,"suggestions":"2184"},{"ruleId":"1931","severity":1,"message":"2131","line":77,"column":9,"nodeType":"1933","messageId":"1934","endLine":77,"endColumn":30},{"ruleId":"1931","severity":1,"message":"2132","line":78,"column":9,"nodeType":"1933","messageId":"1934","endLine":78,"endColumn":38},{"ruleId":"1939","severity":1,"message":"1940","line":82,"column":34,"nodeType":"1941","messageId":"1942","endLine":82,"endColumn":36},{"ruleId":"1939","severity":1,"message":"1940","line":94,"column":35,"nodeType":"1941","messageId":"1942","endLine":94,"endColumn":37},{"ruleId":"1931","severity":1,"message":"2133","line":103,"column":9,"nodeType":"1933","messageId":"1934","endLine":103,"endColumn":26},{"ruleId":"1931","severity":1,"message":"2134","line":117,"column":11,"nodeType":"1933","messageId":"1934","endLine":117,"endColumn":22},{"ruleId":"1931","severity":1,"message":"2135","line":127,"column":11,"nodeType":"1933","messageId":"1934","endLine":127,"endColumn":28},{"ruleId":"1931","severity":1,"message":"1945","line":96,"column":19,"nodeType":"1933","messageId":"1934","endLine":96,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":97,"column":13,"nodeType":"1948","messageId":"1949","endLine":104,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1945","line":130,"column":19,"nodeType":"1933","messageId":"1934","endLine":130,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":131,"column":13,"nodeType":"1948","messageId":"1949","endLine":138,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1971","line":9,"column":49,"nodeType":"1933","messageId":"1934","endLine":9,"endColumn":63},{"ruleId":"1931","severity":1,"message":"2136","line":23,"column":31,"nodeType":"1933","messageId":"1934","endLine":23,"endColumn":51},{"ruleId":"1931","severity":1,"message":"2137","line":24,"column":22,"nodeType":"1933","messageId":"1934","endLine":24,"endColumn":33},{"ruleId":"1951","severity":1,"message":"2138","line":91,"column":8,"nodeType":"1953","endLine":91,"endColumn":18,"suggestions":"2185"},{"ruleId":"1931","severity":1,"message":"1945","line":185,"column":19,"nodeType":"1933","messageId":"1934","endLine":185,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":186,"column":13,"nodeType":"1948","messageId":"1949","endLine":193,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1945","line":219,"column":19,"nodeType":"1933","messageId":"1934","endLine":219,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":220,"column":13,"nodeType":"1948","messageId":"1949","endLine":227,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1991","line":8,"column":10,"nodeType":"1933","messageId":"1934","endLine":8,"endColumn":19},{"ruleId":"1939","severity":1,"message":"1940","line":51,"column":33,"nodeType":"1941","messageId":"1942","endLine":51,"endColumn":35},{"ruleId":"1939","severity":1,"message":"1940","line":63,"column":25,"nodeType":"1941","messageId":"1942","endLine":63,"endColumn":27},{"ruleId":"1939","severity":1,"message":"1940","line":111,"column":33,"nodeType":"1941","messageId":"1942","endLine":111,"endColumn":35},{"ruleId":"1969","severity":1,"message":"1970","line":127,"column":33,"nodeType":"1928","endLine":127,"endColumn":104},{"ruleId":"1931","severity":1,"message":"2181","line":5,"column":8,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":19},{"ruleId":"1931","severity":1,"message":"1963","line":11,"column":10,"nodeType":"1933","messageId":"1934","endLine":11,"endColumn":14},{"ruleId":"1931","severity":1,"message":"2140","line":27,"column":11,"nodeType":"1933","messageId":"1934","endLine":27,"endColumn":23},{"ruleId":"1951","severity":1,"message":"2116","line":52,"column":7,"nodeType":"1953","endLine":52,"endColumn":22,"suggestions":"2186"},{"ruleId":"1931","severity":1,"message":"2155","line":34,"column":11,"nodeType":"1933","messageId":"1934","endLine":34,"endColumn":19},{"ruleId":"1931","severity":1,"message":"1945","line":95,"column":19,"nodeType":"1933","messageId":"1934","endLine":95,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":96,"column":13,"nodeType":"1948","messageId":"1949","endLine":103,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1945","line":129,"column":19,"nodeType":"1933","messageId":"1934","endLine":129,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":130,"column":13,"nodeType":"1948","messageId":"1949","endLine":137,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1981","line":7,"column":10,"nodeType":"1933","messageId":"1934","endLine":7,"endColumn":16},{"ruleId":"1931","severity":1,"message":"1963","line":9,"column":10,"nodeType":"1933","messageId":"1934","endLine":9,"endColumn":14},{"ruleId":"1939","severity":1,"message":"1940","line":32,"column":21,"nodeType":"1941","messageId":"1942","endLine":32,"endColumn":23},{"ruleId":"1931","severity":1,"message":"2118","line":38,"column":11,"nodeType":"1933","messageId":"1934","endLine":38,"endColumn":19},{"ruleId":"1951","severity":1,"message":"2116","line":50,"column":7,"nodeType":"1953","endLine":50,"endColumn":22,"suggestions":"2187"},{"ruleId":"1931","severity":1,"message":"2142","line":28,"column":11,"nodeType":"1933","messageId":"1934","endLine":28,"endColumn":24},{"ruleId":"1939","severity":1,"message":"1940","line":40,"column":21,"nodeType":"1941","messageId":"1942","endLine":40,"endColumn":23},{"ruleId":"1951","severity":1,"message":"2143","line":73,"column":8,"nodeType":"1953","endLine":73,"endColumn":16,"suggestions":"2188"},{"ruleId":"1951","severity":1,"message":"2145","line":88,"column":7,"nodeType":"1953","endLine":88,"endColumn":16,"suggestions":"2189"},{"ruleId":"1931","severity":1,"message":"1991","line":5,"column":20,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":29},{"ruleId":"1931","severity":1,"message":"1935","line":6,"column":8,"nodeType":"1933","messageId":"1934","endLine":6,"endColumn":12},{"ruleId":"1931","severity":1,"message":"2148","line":12,"column":8,"nodeType":"1933","messageId":"1934","endLine":12,"endColumn":18},{"ruleId":"1931","severity":1,"message":"2149","line":13,"column":8,"nodeType":"1933","messageId":"1934","endLine":13,"endColumn":18},{"ruleId":"1931","severity":1,"message":"2150","line":21,"column":12,"nodeType":"1933","messageId":"1934","endLine":21,"endColumn":28},{"ruleId":"1931","severity":1,"message":"2151","line":21,"column":30,"nodeType":"1933","messageId":"1934","endLine":21,"endColumn":49},{"ruleId":"1931","severity":1,"message":"2152","line":92,"column":11,"nodeType":"1933","messageId":"1934","endLine":92,"endColumn":27},{"ruleId":"1931","severity":1,"message":"2153","line":97,"column":11,"nodeType":"1933","messageId":"1934","endLine":97,"endColumn":27},{"ruleId":"1931","severity":1,"message":"2154","line":102,"column":11,"nodeType":"1933","messageId":"1934","endLine":102,"endColumn":21},{"ruleId":"1969","severity":1,"message":"1970","line":175,"column":33,"nodeType":"1928","endLine":175,"endColumn":148},{"ruleId":"1969","severity":1,"message":"1970","line":201,"column":25,"nodeType":"1928","endLine":201,"endColumn":121},{"ruleId":"1931","severity":1,"message":"1935","line":16,"column":8,"nodeType":"1933","messageId":"1934","endLine":16,"endColumn":12},{"ruleId":"1939","severity":1,"message":"1940","line":45,"column":21,"nodeType":"1941","messageId":"1942","endLine":45,"endColumn":23},{"ruleId":"1951","severity":1,"message":"2116","line":60,"column":7,"nodeType":"1953","endLine":60,"endColumn":19,"suggestions":"2190"},{"ruleId":"1931","severity":1,"message":"1981","line":6,"column":10,"nodeType":"1933","messageId":"1934","endLine":6,"endColumn":16},{"ruleId":"1951","severity":1,"message":"1982","line":47,"column":8,"nodeType":"1953","endLine":47,"endColumn":20,"suggestions":"2191"},{"ruleId":"1951","severity":1,"message":"1965","line":55,"column":8,"nodeType":"1953","endLine":55,"endColumn":20,"suggestions":"2192"},{"ruleId":"1951","severity":1,"message":"1965","line":63,"column":8,"nodeType":"1953","endLine":63,"endColumn":16,"suggestions":"2193"},{"ruleId":"1931","severity":1,"message":"1986","line":5,"column":8,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":16},{"ruleId":"1931","severity":1,"message":"1987","line":9,"column":8,"nodeType":"1933","messageId":"1934","endLine":9,"endColumn":25},{"ruleId":"1931","severity":1,"message":"1988","line":10,"column":8,"nodeType":"1933","messageId":"1934","endLine":10,"endColumn":28},{"ruleId":"1931","severity":1,"message":"1989","line":11,"column":10,"nodeType":"1933","messageId":"1934","endLine":11,"endColumn":29},{"ruleId":"1931","severity":1,"message":"1993","line":8,"column":10,"nodeType":"1933","messageId":"1934","endLine":8,"endColumn":33},{"ruleId":"1931","severity":1,"message":"1994","line":11,"column":12,"nodeType":"1933","messageId":"1934","endLine":11,"endColumn":26},{"ruleId":"1931","severity":1,"message":"1995","line":11,"column":28,"nodeType":"1933","messageId":"1934","endLine":11,"endColumn":45},{"ruleId":"1931","severity":1,"message":"1996","line":12,"column":12,"nodeType":"1933","messageId":"1934","endLine":12,"endColumn":27},{"ruleId":"1931","severity":1,"message":"1997","line":12,"column":29,"nodeType":"1933","messageId":"1934","endLine":12,"endColumn":47},{"ruleId":"1931","severity":1,"message":"2000","line":30,"column":11,"nodeType":"1933","messageId":"1934","endLine":30,"endColumn":13},{"ruleId":"1931","severity":1,"message":"1937","line":8,"column":20,"nodeType":"1933","messageId":"1934","endLine":8,"endColumn":30},{"ruleId":"1951","severity":1,"message":"1998","line":40,"column":8,"nodeType":"1953","endLine":40,"endColumn":10,"suggestions":"2194"},{"ruleId":"1931","severity":1,"message":"1990","line":7,"column":32,"nodeType":"1933","messageId":"1934","endLine":7,"endColumn":38},{"ruleId":"1931","severity":1,"message":"1991","line":7,"column":40,"nodeType":"1933","messageId":"1934","endLine":7,"endColumn":49},{"ruleId":"1931","severity":1,"message":"1992","line":10,"column":8,"nodeType":"1933","messageId":"1934","endLine":10,"endColumn":16},{"ruleId":"1931","severity":1,"message":"1991","line":6,"column":20,"nodeType":"1933","messageId":"1934","endLine":6,"endColumn":29},{"ruleId":"1931","severity":1,"message":"2003","line":51,"column":11,"nodeType":"1933","messageId":"1934","endLine":51,"endColumn":30},{"ruleId":"1969","severity":1,"message":"1970","line":202,"column":25,"nodeType":"1928","endLine":202,"endColumn":117},{"ruleId":"1931","severity":1,"message":"2057","line":10,"column":8,"nodeType":"1933","messageId":"1934","endLine":10,"endColumn":16},{"ruleId":"1931","severity":1,"message":"2058","line":11,"column":8,"nodeType":"1933","messageId":"1934","endLine":11,"endColumn":16},{"ruleId":"1931","severity":1,"message":"2000","line":21,"column":11,"nodeType":"1933","messageId":"1934","endLine":21,"endColumn":13},{"ruleId":"1931","severity":1,"message":"1991","line":7,"column":20,"nodeType":"1933","messageId":"1934","endLine":7,"endColumn":29},{"ruleId":"1931","severity":1,"message":"1991","line":5,"column":20,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":29},{"ruleId":"1931","severity":1,"message":"1981","line":2,"column":10,"nodeType":"1933","messageId":"1934","endLine":2,"endColumn":16},{"ruleId":"1931","severity":1,"message":"1932","line":14,"column":14,"nodeType":"1933","messageId":"1934","endLine":14,"endColumn":23},{"ruleId":"1931","severity":1,"message":"2006","line":16,"column":8,"nodeType":"1933","messageId":"1934","endLine":16,"endColumn":16},{"ruleId":"1951","severity":1,"message":"2007","line":128,"column":8,"nodeType":"1953","endLine":128,"endColumn":17,"suggestions":"2195"},{"ruleId":"1969","severity":1,"message":"1970","line":315,"column":45,"nodeType":"1928","endLine":315,"endColumn":171},{"ruleId":"1931","severity":1,"message":"2012","line":1,"column":9,"nodeType":"1933","messageId":"1934","endLine":1,"endColumn":30},{"ruleId":"1931","severity":1,"message":"1932","line":9,"column":14,"nodeType":"1933","messageId":"1934","endLine":9,"endColumn":23},{"ruleId":"1951","severity":1,"message":"2007","line":83,"column":8,"nodeType":"1953","endLine":83,"endColumn":17,"suggestions":"2196"},{"ruleId":"1931","severity":1,"message":"1981","line":2,"column":10,"nodeType":"1933","messageId":"1934","endLine":2,"endColumn":16},{"ruleId":"1931","severity":1,"message":"1937","line":9,"column":10,"nodeType":"1933","messageId":"1934","endLine":9,"endColumn":20},{"ruleId":"1931","severity":1,"message":"2009","line":10,"column":10,"nodeType":"1933","messageId":"1934","endLine":10,"endColumn":14},{"ruleId":"1951","severity":1,"message":"2010","line":208,"column":8,"nodeType":"1953","endLine":208,"endColumn":17,"suggestions":"2197"},{"ruleId":"1931","severity":1,"message":"1932","line":9,"column":14,"nodeType":"1933","messageId":"1934","endLine":9,"endColumn":23},{"ruleId":"1931","severity":1,"message":"2014","line":14,"column":12,"nodeType":"1933","messageId":"1934","endLine":14,"endColumn":25},{"ruleId":"1931","severity":1,"message":"2015","line":14,"column":27,"nodeType":"1933","messageId":"1934","endLine":14,"endColumn":43},{"ruleId":"1951","severity":1,"message":"2016","line":202,"column":8,"nodeType":"1953","endLine":202,"endColumn":20,"suggestions":"2198"},{"ruleId":"1931","severity":1,"message":"1945","line":59,"column":19,"nodeType":"1933","messageId":"1934","endLine":59,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":60,"column":13,"nodeType":"1948","messageId":"1949","endLine":67,"endColumn":14},{"ruleId":"1951","severity":1,"message":"2018","line":144,"column":8,"nodeType":"1953","endLine":144,"endColumn":20,"suggestions":"2199"},{"ruleId":"1951","severity":1,"message":"2018","line":89,"column":8,"nodeType":"1953","endLine":89,"endColumn":31,"suggestions":"2200"},{"ruleId":"1951","severity":1,"message":"2021","line":178,"column":11,"nodeType":"1953","endLine":178,"endColumn":13,"suggestions":"2201"},{"ruleId":"1951","severity":1,"message":"2052","line":70,"column":8,"nodeType":"1953","endLine":70,"endColumn":17,"suggestions":"2202"},{"ruleId":"1951","severity":1,"message":"2054","line":164,"column":8,"nodeType":"1953","endLine":164,"endColumn":20,"suggestions":"2203"},{"ruleId":"1931","severity":1,"message":"2056","line":18,"column":11,"nodeType":"1933","messageId":"1934","endLine":18,"endColumn":16},{"ruleId":"1931","severity":1,"message":"2048","line":2,"column":19,"nodeType":"1933","messageId":"1934","endLine":2,"endColumn":23},{"ruleId":"1951","severity":1,"message":"1965","line":44,"column":8,"nodeType":"1953","endLine":44,"endColumn":20,"suggestions":"2204"},{"ruleId":"1951","severity":1,"message":"1965","line":52,"column":8,"nodeType":"1953","endLine":52,"endColumn":25,"suggestions":"2205"},{"ruleId":"1951","severity":1,"message":"1965","line":60,"column":8,"nodeType":"1953","endLine":60,"endColumn":16,"suggestions":"2206"},{"ruleId":"1931","severity":1,"message":"2023","line":9,"column":24,"nodeType":"1933","messageId":"1934","endLine":9,"endColumn":60},{"ruleId":"1931","severity":1,"message":"2024","line":17,"column":12,"nodeType":"1933","messageId":"1934","endLine":17,"endColumn":18},{"ruleId":"1931","severity":1,"message":"2025","line":34,"column":11,"nodeType":"1933","messageId":"1934","endLine":34,"endColumn":19},{"ruleId":"1931","severity":1,"message":"2026","line":35,"column":11,"nodeType":"1933","messageId":"1934","endLine":35,"endColumn":24},{"ruleId":"1951","severity":1,"message":"1965","line":59,"column":8,"nodeType":"1953","endLine":59,"endColumn":16,"suggestions":"2207"},{"ruleId":"1951","severity":1,"message":"1965","line":67,"column":8,"nodeType":"1953","endLine":67,"endColumn":27,"suggestions":"2208"},{"ruleId":"1951","severity":1,"message":"1965","line":75,"column":8,"nodeType":"1953","endLine":75,"endColumn":17,"suggestions":"2209"},{"ruleId":"1951","severity":1,"message":"1965","line":83,"column":8,"nodeType":"1953","endLine":83,"endColumn":25,"suggestions":"2210"},{"ruleId":"1951","severity":1,"message":"1965","line":91,"column":8,"nodeType":"1953","endLine":91,"endColumn":20,"suggestions":"2211"},{"ruleId":"1951","severity":1,"message":"1965","line":97,"column":8,"nodeType":"1953","endLine":97,"endColumn":16,"suggestions":"2212"},{"ruleId":"1951","severity":1,"message":"1965","line":105,"column":8,"nodeType":"1953","endLine":105,"endColumn":18,"suggestions":"2213"},{"ruleId":"1951","severity":1,"message":"2034","line":132,"column":8,"nodeType":"1953","endLine":132,"endColumn":10,"suggestions":"2214"},{"ruleId":"1931","severity":1,"message":"1991","line":4,"column":20,"nodeType":"1933","messageId":"1934","endLine":4,"endColumn":29},{"ruleId":"1931","severity":1,"message":"2108","line":16,"column":19,"nodeType":"1933","messageId":"1934","endLine":16,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":138,"column":13,"nodeType":"1948","messageId":"1949","endLine":145,"endColumn":14},{"ruleId":"1931","severity":1,"message":"2045","line":5,"column":18,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":25},{"ruleId":"1931","severity":1,"message":"2098","line":10,"column":8,"nodeType":"1933","messageId":"1934","endLine":10,"endColumn":20},{"ruleId":"1931","severity":1,"message":"2024","line":16,"column":12,"nodeType":"1933","messageId":"1934","endLine":16,"endColumn":18},{"ruleId":"1931","severity":1,"message":"2036","line":23,"column":33,"nodeType":"1933","messageId":"1934","endLine":23,"endColumn":55},{"ruleId":"1931","severity":1,"message":"2025","line":34,"column":11,"nodeType":"1933","messageId":"1934","endLine":34,"endColumn":19},{"ruleId":"1931","severity":1,"message":"2026","line":35,"column":11,"nodeType":"1933","messageId":"1934","endLine":35,"endColumn":24},{"ruleId":"1951","severity":1,"message":"1965","line":58,"column":8,"nodeType":"1953","endLine":58,"endColumn":16,"suggestions":"2215"},{"ruleId":"1951","severity":1,"message":"1965","line":66,"column":8,"nodeType":"1953","endLine":66,"endColumn":17,"suggestions":"2216"},{"ruleId":"1951","severity":1,"message":"1965","line":74,"column":8,"nodeType":"1953","endLine":74,"endColumn":27,"suggestions":"2217"},{"ruleId":"1951","severity":1,"message":"1965","line":82,"column":8,"nodeType":"1953","endLine":82,"endColumn":25,"suggestions":"2218"},{"ruleId":"1951","severity":1,"message":"1965","line":90,"column":8,"nodeType":"1953","endLine":90,"endColumn":20,"suggestions":"2219"},{"ruleId":"1951","severity":1,"message":"1965","line":99,"column":8,"nodeType":"1953","endLine":99,"endColumn":18,"suggestions":"2220"},{"ruleId":"1951","severity":1,"message":"1965","line":105,"column":8,"nodeType":"1953","endLine":105,"endColumn":16,"suggestions":"2221"},{"ruleId":"1951","severity":1,"message":"2034","line":201,"column":8,"nodeType":"1953","endLine":201,"endColumn":10,"suggestions":"2222"},{"ruleId":"1931","severity":1,"message":"2109","line":22,"column":12,"nodeType":"1933","messageId":"1934","endLine":22,"endColumn":21},{"ruleId":"1951","severity":1,"message":"1965","line":50,"column":8,"nodeType":"1953","endLine":50,"endColumn":20,"suggestions":"2223"},{"ruleId":"1951","severity":1,"message":"1965","line":58,"column":8,"nodeType":"1953","endLine":58,"endColumn":16,"suggestions":"2224"},{"ruleId":"1939","severity":1,"message":"1940","line":111,"column":33,"nodeType":"1941","messageId":"1942","endLine":111,"endColumn":35},{"ruleId":"1931","severity":1,"message":"2112","line":124,"column":11,"nodeType":"1933","messageId":"1934","endLine":124,"endColumn":28},{"ruleId":"1951","severity":1,"message":"2046","line":65,"column":8,"nodeType":"1953","endLine":65,"endColumn":20,"suggestions":"2225"},{"ruleId":"1931","severity":1,"message":"2159","line":3,"column":8,"nodeType":"1933","messageId":"1934","endLine":3,"endColumn":21},{"ruleId":"1931","severity":1,"message":"2160","line":6,"column":18,"nodeType":"1933","messageId":"1934","endLine":6,"endColumn":22},{"ruleId":"1931","severity":1,"message":"2161","line":23,"column":11,"nodeType":"1933","messageId":"1934","endLine":23,"endColumn":20},{"ruleId":"1931","severity":1,"message":"2155","line":26,"column":11,"nodeType":"1933","messageId":"1934","endLine":26,"endColumn":19},{"ruleId":"1951","severity":1,"message":"2162","line":40,"column":8,"nodeType":"1953","endLine":40,"endColumn":16,"suggestions":"2226"},{"ruleId":"1946","severity":1,"message":"1947","line":130,"column":13,"nodeType":"1948","messageId":"1949","endLine":137,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1945","line":140,"column":19,"nodeType":"1933","messageId":"1934","endLine":140,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":141,"column":13,"nodeType":"1948","messageId":"1949","endLine":148,"endColumn":14},{"ruleId":"1939","severity":1,"message":"1940","line":35,"column":16,"nodeType":"1941","messageId":"1942","endLine":35,"endColumn":18},{"ruleId":"1931","severity":1,"message":"2113","line":193,"column":9,"nodeType":"1933","messageId":"1934","endLine":193,"endColumn":14},{"ruleId":"1951","severity":1,"message":"2157","line":59,"column":12,"nodeType":"1953","endLine":59,"endColumn":22,"suggestions":"2227"},{"ruleId":"1931","severity":1,"message":"1963","line":4,"column":10,"nodeType":"1933","messageId":"1934","endLine":4,"endColumn":14},{"ruleId":"1951","severity":1,"message":"2001","line":44,"column":8,"nodeType":"1953","endLine":44,"endColumn":24,"suggestions":"2228"},{"ruleId":"1939","severity":1,"message":"1940","line":49,"column":26,"nodeType":"1941","messageId":"1942","endLine":49,"endColumn":28},{"ruleId":"1931","severity":1,"message":"1991","line":8,"column":20,"nodeType":"1933","messageId":"1934","endLine":8,"endColumn":29},{"ruleId":"1931","severity":1,"message":"2004","line":11,"column":12,"nodeType":"1933","messageId":"1934","endLine":11,"endColumn":23},{"ruleId":"1931","severity":1,"message":"2005","line":11,"column":25,"nodeType":"1933","messageId":"1934","endLine":11,"endColumn":39},{"ruleId":"1931","severity":1,"message":"2004","line":13,"column":12,"nodeType":"1933","messageId":"1934","endLine":13,"endColumn":23},{"ruleId":"1931","severity":1,"message":"2005","line":13,"column":25,"nodeType":"1933","messageId":"1934","endLine":13,"endColumn":39},{"ruleId":"1951","severity":1,"message":"2229","line":142,"column":12,"nodeType":"1953","endLine":142,"endColumn":19,"suggestions":"2230"},{"ruleId":"1951","severity":1,"message":"1965","line":50,"column":8,"nodeType":"1953","endLine":50,"endColumn":16,"suggestions":"2231"},{"ruleId":"1951","severity":1,"message":"1965","line":58,"column":8,"nodeType":"1953","endLine":58,"endColumn":17,"suggestions":"2232"},{"ruleId":"1969","severity":1,"message":"1970","line":77,"column":17,"nodeType":"1928","endLine":77,"endColumn":103},{"ruleId":"1969","severity":1,"message":"1970","line":117,"column":33,"nodeType":"1928","endLine":117,"endColumn":106},{"ruleId":"1931","severity":1,"message":"1945","line":122,"column":19,"nodeType":"1933","messageId":"1934","endLine":122,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":123,"column":13,"nodeType":"1948","messageId":"1949","endLine":130,"endColumn":14},{"ruleId":"1931","severity":1,"message":"1991","line":6,"column":20,"nodeType":"1933","messageId":"1934","endLine":6,"endColumn":29},{"ruleId":"2125","severity":1,"message":"2126","line":130,"column":147,"nodeType":"2127","messageId":"2128","endLine":130,"endColumn":160},{"ruleId":"1931","severity":1,"message":"2155","line":32,"column":11,"nodeType":"1933","messageId":"1934","endLine":32,"endColumn":19},{"ruleId":"1931","severity":1,"message":"1945","line":80,"column":19,"nodeType":"1933","messageId":"1934","endLine":80,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":81,"column":13,"nodeType":"1948","messageId":"1949","endLine":88,"endColumn":14},{"ruleId":"1931","severity":1,"message":"2233","line":4,"column":8,"nodeType":"1933","messageId":"1934","endLine":4,"endColumn":17},{"ruleId":"1931","severity":1,"message":"2234","line":29,"column":11,"nodeType":"1933","messageId":"1934","endLine":29,"endColumn":18},{"ruleId":"1951","severity":1,"message":"2054","line":50,"column":8,"nodeType":"1953","endLine":50,"endColumn":20,"suggestions":"2235"},{"ruleId":"1931","severity":1,"message":"2236","line":7,"column":8,"nodeType":"1933","messageId":"1934","endLine":7,"endColumn":18},{"ruleId":"1931","severity":1,"message":"1944","line":9,"column":10,"nodeType":"1933","messageId":"1934","endLine":9,"endColumn":12},{"ruleId":"1969","severity":1,"message":"1970","line":45,"column":33,"nodeType":"1928","endLine":45,"endColumn":100},{"ruleId":"1931","severity":1,"message":"2237","line":4,"column":8,"nodeType":"1933","messageId":"1934","endLine":4,"endColumn":17},{"ruleId":"1931","severity":1,"message":"2233","line":5,"column":8,"nodeType":"1933","messageId":"1934","endLine":5,"endColumn":17},{"ruleId":"1931","severity":1,"message":"1935","line":6,"column":8,"nodeType":"1933","messageId":"1934","endLine":6,"endColumn":12},{"ruleId":"1931","severity":1,"message":"1945","line":94,"column":19,"nodeType":"1933","messageId":"1934","endLine":94,"endColumn":27},{"ruleId":"1946","severity":1,"message":"1947","line":95,"column":13,"nodeType":"1948","messageId":"1949","endLine":102,"endColumn":14},{"ruleId":"1969","severity":1,"message":"1970","line":193,"column":25,"nodeType":"1928","endLine":193,"endColumn":115},{"ruleId":"1931","severity":1,"message":"1937","line":13,"column":10,"nodeType":"1933","messageId":"1934","endLine":13,"endColumn":20},{"ruleId":"1931","severity":1,"message":"1991","line":13,"column":32,"nodeType":"1933","messageId":"1934","endLine":13,"endColumn":41},"no-native-reassign",["2238"],"no-negated-in-lhs",["2239"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"2240","text":"2241"},"no-unused-vars","'timestamp' is defined but never used.","Identifier","unusedVar","'uuid' is defined but never used.","'useHistory' is defined but never used.","'useContext' is defined but never used.","'userID' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"range":"2242","text":"2241"},"'db' is defined but never used.","'progress' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'docArray'. Either include it or remove the dependency array.","ArrayExpression",["2243"],["2244"],["2245"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["2246"],"React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.",["2247"],"'userCompagnyArray' is assigned a value but never used.","'setUserCompagnyArray' is assigned a value but never used.","'auth' is defined but never used.","'client' is defined but never used.","React Hook useEffect has a missing dependency: 'authO.ID'. Either include it or remove the dependency array.",["2248"],["2249"],["2250"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useFirestoreID' is defined but never used.",["2251"],"'labelGoalLikes' is assigned a value but never used.","'setLabelGoalLikes' is assigned a value but never used.","'dataGoalLikes' is assigned a value but never used.","'setDataGoalLikes' is assigned a value but never used.","'goalLikes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'messages'. Either include it or remove the dependency array.",["2252"],"'menu' is assigned a value but never used.","'motion' is defined but never used.","React Hook useEffect has missing dependencies: 'authO.ID' and 'projectManagers'. Either include them or remove the dependency array.",["2253"],["2254"],["2255"],"'plusIcon' is defined but never used.","'RegistrationRadio' is defined but never used.","'RegistrationDropdown' is defined but never used.","'useFirestoreAboutMe' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'firebase' is defined but never used.","'useFirestoreChatsGroups' is defined but never used.","'channelMembers' is assigned a value but never used.","'setChannelMembers' is assigned a value but never used.","'groupMemberList' is assigned a value but never used.","'setGroupMemberList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'authChannels'. Either include it or remove the dependency array.",["2256"],"'id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'tasks.length'. Either include it or remove the dependency array.",["2257"],"'effectMiddleHandler' is assigned a value but never used.","'progression' is assigned a value but never used.","'setProgression' is assigned a value but never used.","'userIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'matchArray'. Either include it or remove the dependency array.",["2258"],"'Auth' is defined but never used.","React Hook useEffect has a missing dependency: 'displayMatches'. Either include it or remove the dependency array.",["2259"],"'useFirestoreTimestamp' is defined but never used.",["2260"],"'filteredItems' is assigned a value but never used.","'setFilteredItems' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'filters'. Either include it or remove the dependency array.",["2261"],"React Hook useEffect has a missing dependency: 'categorieOverview'. Either include it or remove the dependency array.",["2262"],["2263"],"React Hook useEffect has a missing dependency: 'tag.Docid'. Either include it or remove the dependency array.",["2264"],"'useFirestoreSubscriptionsNotApproved' is defined but never used.","'author' is assigned a value but never used.","'channels' is assigned a value but never used.","'groupChannels' is assigned a value but never used.",["2265"],["2266"],["2267"],["2268"],["2269"],["2270"],["2271"],"React Hook useEffect has a missing dependency: 'notificationsTotal'. Either include it or remove the dependency array.",["2272"],"'setNotificationsGroups' is assigned a value but never used.",["2273"],["2274"],["2275"],["2276"],["2277"],["2278"],["2279"],["2280"],"'setMenu' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMonth'. Either include it or remove the dependency array.",["2281"],"'Link' is defined but never used.",["2282"],["2283"],["2284"],"React Hook useEffect has a missing dependency: 'membersDB'. Either include it or remove the dependency array.",["2285"],"React Hook useEffect has a missing dependency: 'totalProgressionArray'. Either include it or remove the dependency array.",["2286"],"'route' is assigned a value but never used.","'sendIcon' is defined but never used.","'editIcon' is defined but never used.","'authO' is assigned a value but never used.",{"range":"2287","text":"2241"},"'useState' is defined but never used.",{"range":"2288","text":"2241"},["2289"],["2290"],["2291"],["2292"],["2293"],"'Editor' is defined but never used.","'editorRef' is assigned a value but never used.",["2294"],["2295"],["2296"],["2297"],["2298"],["2299"],["2300"],["2301"],["2302"],["2303"],["2304"],["2305"],["2306"],["2307"],["2308"],["2309"],["2310"],["2311"],["2312"],["2313"],["2314"],["2315"],["2316"],["2317"],["2318"],["2319"],["2320"],["2321"],"'GroupChannel' is defined but never used.",["2322"],["2323"],["2324"],["2325"],["2326"],["2327"],["2328"],["2329"],["2330"],"'setAuthO' is assigned a value but never used.","'impacteer' is assigned a value but never used.",["2331"],["2332"],"'toggleGoalLikeBar' is assigned a value but never used.","'email' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'authO.ID', 'history', and 'route'. Either include them or remove the dependency array.",["2333"],"React Hook useEffect has a missing dependency: 'route'. Either include it or remove the dependency array.",["2334"],"'variants' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'chatsOverview'. Either include it or remove the dependency array.",["2335"],"React Hook useEffect has a missing dependency: 'groupsOverview'. Either include it or remove the dependency array.",["2336"],"'useFirestore' is defined but never used.",["2337"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",["2338"],["2339"],"'numberOfContributions' is assigned a value but never used.","'numberOfContributionsReaction' is assigned a value but never used.","'numberOfReactions' is assigned a value but never used.","'updateRoute' is assigned a value but never used.","'showContributions' is assigned a value but never used.","'setSelectedEmailUser' is assigned a value but never used.","'setuserName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'memberIDArray'. Either include it or remove the dependency array.",["2340"],"'channelsName' is assigned a value but never used.",["2341"],"'subscriptions' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.",["2342"],"React Hook useEffect has missing dependencies: 'authO.ID', 'groupID', and 'history'. Either include them or remove the dependency array.",["2343"],["2344"],"'ListLayout' is defined but never used.","'CardLayout' is defined but never used.","'channelItemsList' is assigned a value but never used.","'setChannelItemsList' is assigned a value but never used.","'selectListLayout' is assigned a value but never used.","'selectCardLayout' is assigned a value but never used.","'saveLayout' is assigned a value but never used.","'compagny' is assigned a value but never used.",["2345"],"React Hook useEffect has a missing dependency: 'number'. Either include it or remove the dependency array. Outer scope values like 'messages' aren't valid dependencies because mutating them doesn't re-render the component.",["2346"],"'spinnerRipple' is defined but never used.","'type' is defined but never used.","'timestamp' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'chats'. Either include it or remove the dependency array.",["2347"],{"range":"2348","text":"2241"},{"range":"2349","text":"2241"},["2350"],["2351"],["2352"],["2353"],["2354"],["2355"],["2356"],["2357"],["2358"],["2359"],["2360"],"'newsIcon' is defined but never used.",["2361"],["2362"],["2363"],"'articleIcon' is defined but never used.",["2364"],["2365"],["2366"],["2367"],["2368"],["2369"],["2370"],["2371"],["2372"],["2373"],["2374"],["2375"],["2376"],["2377"],["2378"],["2379"],["2380"],["2381"],["2382"],["2383"],["2384"],["2385"],["2386"],["2387"],["2388"],["2389"],["2390"],["2391"],["2392"],["2393"],["2394"],["2395"],["2396"],["2397"],["2398"],["2399"],["2400"],["2401"],["2402"],["2403"],["2404"],["2405"],["2406"],["2407"],["2408"],["2409"],["2410"],"React Hook useEffect has missing dependencies: 'end' and 'start'. Either include them or remove the dependency array.",["2411"],["2412"],["2413"],"'houseIcon' is defined but never used.","'options' is assigned a value but never used.",["2414"],"'deleteIcon' is defined but never used.","'worldIcon' is defined but never used.","no-global-assign","no-unsafe-negation",[1323,1323]," rel=\"noreferrer\"",[11372,11372],{"desc":"2415","fix":"2416"},{"desc":"2417","fix":"2418"},{"desc":"2417","fix":"2419"},{"desc":"2420","fix":"2421"},{"desc":"2422","fix":"2423"},{"desc":"2424","fix":"2425"},{"desc":"2426","fix":"2427"},{"desc":"2428","fix":"2429"},{"desc":"2424","fix":"2430"},{"desc":"2431","fix":"2432"},{"desc":"2433","fix":"2434"},{"desc":"2426","fix":"2435"},{"desc":"2424","fix":"2436"},{"desc":"2437","fix":"2438"},{"desc":"2439","fix":"2440"},{"desc":"2441","fix":"2442"},{"desc":"2443","fix":"2444"},{"desc":"2441","fix":"2445"},{"desc":"2446","fix":"2447"},{"desc":"2448","fix":"2449"},{"desc":"2450","fix":"2451"},{"desc":"2452","fix":"2453"},{"desc":"2424","fix":"2454"},{"desc":"2455","fix":"2456"},{"desc":"2457","fix":"2458"},{"desc":"2459","fix":"2460"},{"desc":"2426","fix":"2461"},{"desc":"2424","fix":"2462"},{"desc":"2463","fix":"2464"},{"desc":"2465","fix":"2466"},{"desc":"2424","fix":"2467"},{"desc":"2457","fix":"2468"},{"desc":"2455","fix":"2469"},{"desc":"2459","fix":"2470"},{"desc":"2426","fix":"2471"},{"desc":"2463","fix":"2472"},{"desc":"2424","fix":"2473"},{"desc":"2465","fix":"2474"},{"desc":"2475","fix":"2476"},{"desc":"2426","fix":"2477"},{"desc":"2459","fix":"2478"},{"desc":"2424","fix":"2479"},{"desc":"2480","fix":"2481"},{"desc":"2482","fix":"2483"},[1323,1323],[11229,11229],{"desc":"2415","fix":"2484"},{"desc":"2417","fix":"2485"},{"desc":"2417","fix":"2486"},{"desc":"2420","fix":"2487"},{"desc":"2422","fix":"2488"},{"desc":"2424","fix":"2489"},{"desc":"2424","fix":"2490"},{"desc":"2426","fix":"2491"},{"desc":"2428","fix":"2492"},{"desc":"2431","fix":"2493"},{"desc":"2433","fix":"2494"},{"desc":"2426","fix":"2495"},{"desc":"2424","fix":"2496"},{"desc":"2480","fix":"2497"},{"desc":"2482","fix":"2498"},{"desc":"2441","fix":"2499"},{"desc":"2441","fix":"2500"},{"desc":"2443","fix":"2501"},{"desc":"2446","fix":"2502"},{"desc":"2448","fix":"2503"},{"desc":"2450","fix":"2504"},{"desc":"2452","fix":"2505"},{"desc":"2439","fix":"2506"},{"desc":"2426","fix":"2507"},{"desc":"2459","fix":"2508"},{"desc":"2424","fix":"2509"},{"desc":"2424","fix":"2510"},{"desc":"2455","fix":"2511"},{"desc":"2457","fix":"2512"},{"desc":"2459","fix":"2513"},{"desc":"2426","fix":"2514"},{"desc":"2424","fix":"2515"},{"desc":"2465","fix":"2516"},{"desc":"2424","fix":"2517"},{"desc":"2457","fix":"2518"},{"desc":"2455","fix":"2519"},{"desc":"2459","fix":"2520"},{"desc":"2426","fix":"2521"},{"desc":"2424","fix":"2522"},{"desc":"2465","fix":"2523"},{"desc":"2475","fix":"2524"},{"desc":"2437","fix":"2525"},{"desc":"2426","fix":"2526"},{"desc":"2424","fix":"2527"},{"desc":"2528","fix":"2529"},{"desc":"2530","fix":"2531"},{"desc":"2532","fix":"2533"},{"desc":"2534","fix":"2535"},{"desc":"2530","fix":"2536"},{"desc":"2426","fix":"2537"},{"desc":"2424","fix":"2538"},{"desc":"2539","fix":"2540"},{"desc":"2530","fix":"2541"},{"desc":"2542","fix":"2543"},{"desc":"2544","fix":"2545"},{"desc":"2530","fix":"2546"},{"desc":"2547","fix":"2548"},{"desc":"2549","fix":"2550"},{"desc":"2551","fix":"2552"},[1323,1323],[11372,11372],{"desc":"2415","fix":"2553"},{"desc":"2417","fix":"2554"},{"desc":"2417","fix":"2555"},{"desc":"2420","fix":"2556"},{"desc":"2422","fix":"2557"},{"desc":"2431","fix":"2558"},{"desc":"2424","fix":"2559"},{"desc":"2424","fix":"2560"},{"desc":"2426","fix":"2561"},{"desc":"2428","fix":"2562"},{"desc":"2528","fix":"2563"},{"desc":"2530","fix":"2564"},{"desc":"2532","fix":"2565"},{"desc":"2534","fix":"2566"},{"desc":"2530","fix":"2567"},{"desc":"2426","fix":"2568"},{"desc":"2424","fix":"2569"},{"desc":"2539","fix":"2570"},{"desc":"2530","fix":"2571"},{"desc":"2530","fix":"2572"},{"desc":"2542","fix":"2573"},{"desc":"2544","fix":"2574"},{"desc":"2547","fix":"2575"},{"desc":"2433","fix":"2576"},{"desc":"2426","fix":"2577"},{"desc":"2424","fix":"2578"},{"desc":"2437","fix":"2579"},{"desc":"2441","fix":"2580"},{"desc":"2441","fix":"2581"},{"desc":"2443","fix":"2582"},{"desc":"2446","fix":"2583"},{"desc":"2448","fix":"2584"},{"desc":"2450","fix":"2585"},{"desc":"2452","fix":"2586"},{"desc":"2480","fix":"2587"},{"desc":"2482","fix":"2588"},{"desc":"2426","fix":"2589"},{"desc":"2459","fix":"2590"},{"desc":"2424","fix":"2591"},{"desc":"2424","fix":"2592"},{"desc":"2455","fix":"2593"},{"desc":"2457","fix":"2594"},{"desc":"2459","fix":"2595"},{"desc":"2426","fix":"2596"},{"desc":"2424","fix":"2597"},{"desc":"2463","fix":"2598"},{"desc":"2465","fix":"2599"},{"desc":"2424","fix":"2600"},{"desc":"2457","fix":"2601"},{"desc":"2455","fix":"2602"},{"desc":"2459","fix":"2603"},{"desc":"2426","fix":"2604"},{"desc":"2463","fix":"2605"},{"desc":"2424","fix":"2606"},{"desc":"2465","fix":"2607"},{"desc":"2426","fix":"2608"},{"desc":"2424","fix":"2609"},{"desc":"2475","fix":"2610"},{"desc":"2551","fix":"2611"},{"desc":"2549","fix":"2612"},{"desc":"2439","fix":"2613"},{"desc":"2614","fix":"2615"},{"desc":"2424","fix":"2616"},{"desc":"2457","fix":"2617"},{"desc":"2482","fix":"2618"},"Update the dependencies array to be: [docArray, userID]",{"range":"2619","text":"2620"},"Update the dependencies array to be: [docArray, state]",{"range":"2621","text":"2622"},{"range":"2623","text":"2622"},"Update the dependencies array to be: [id]",{"range":"2624","text":"2625"},"Update the dependencies array to be: [auth, collection, status]",{"range":"2626","text":"2627"},"Update the dependencies array to be: [admins, authO.ID]",{"range":"2628","text":"2629"},"Update the dependencies array to be: [authO.ID, impacteers]",{"range":"2630","text":"2631"},"Update the dependencies array to be: [authO.ID, profiles]",{"range":"2632","text":"2633"},{"range":"2634","text":"2629"},"Update the dependencies array to be: [likes, messages]",{"range":"2635","text":"2636"},"Update the dependencies array to be: [authO.ID, impacteers, projectManagers]",{"range":"2637","text":"2638"},{"range":"2639","text":"2631"},{"range":"2640","text":"2629"},"Update the dependencies array to be: [authChannels]",{"range":"2641","text":"2642"},"Update the dependencies array to be: [completedTasks, tasks.length]",{"range":"2643","text":"2644"},"Update the dependencies array to be: [matchArray, matches]",{"range":"2645","text":"2646"},"Update the dependencies array to be: [displayMatches, matches]",{"range":"2647","text":"2648"},{"range":"2649","text":"2646"},"Update the dependencies array to be: [categories, filters]",{"range":"2650","text":"2651"},"Update the dependencies array to be: [categorieOverview, categories]",{"range":"2652","text":"2653"},"Update the dependencies array to be: [categorieOverview, categories, matchTags]",{"range":"2654","text":"2655"},"Update the dependencies array to be: [tag.Docid]",{"range":"2656","text":"2657"},{"range":"2658","text":"2629"},"Update the dependencies array to be: [authO.ID, communityManagers]",{"range":"2659","text":"2660"},"Update the dependencies array to be: [authO.ID, authors]",{"range":"2661","text":"2662"},"Update the dependencies array to be: [authO.ID, projectManagers]",{"range":"2663","text":"2664"},{"range":"2665","text":"2631"},{"range":"2666","text":"2629"},"Update the dependencies array to be: [authO.ID, matchers]",{"range":"2667","text":"2668"},"Update the dependencies array to be: [notificationsTotal]",{"range":"2669","text":"2670"},{"range":"2671","text":"2629"},{"range":"2672","text":"2662"},{"range":"2673","text":"2660"},{"range":"2674","text":"2664"},{"range":"2675","text":"2631"},{"range":"2676","text":"2668"},{"range":"2677","text":"2629"},{"range":"2678","text":"2670"},"Update the dependencies array to be: [getMonth, monthIndex]",{"range":"2679","text":"2680"},{"range":"2681","text":"2631"},{"range":"2682","text":"2664"},{"range":"2683","text":"2629"},"Update the dependencies array to be: [members, membersDB]",{"range":"2684","text":"2685"},"Update the dependencies array to be: [activities, totalProgressionArray]",{"range":"2686","text":"2687"},{"range":"2688","text":"2620"},{"range":"2689","text":"2622"},{"range":"2690","text":"2622"},{"range":"2691","text":"2625"},{"range":"2692","text":"2627"},{"range":"2693","text":"2629"},{"range":"2694","text":"2629"},{"range":"2695","text":"2631"},{"range":"2696","text":"2633"},{"range":"2697","text":"2636"},{"range":"2698","text":"2638"},{"range":"2699","text":"2631"},{"range":"2700","text":"2629"},{"range":"2701","text":"2685"},{"range":"2702","text":"2687"},{"range":"2703","text":"2646"},{"range":"2704","text":"2646"},{"range":"2705","text":"2648"},{"range":"2706","text":"2651"},{"range":"2707","text":"2653"},{"range":"2708","text":"2655"},{"range":"2709","text":"2657"},{"range":"2710","text":"2644"},{"range":"2711","text":"2631"},{"range":"2712","text":"2664"},{"range":"2713","text":"2629"},{"range":"2714","text":"2629"},{"range":"2715","text":"2660"},{"range":"2716","text":"2662"},{"range":"2717","text":"2664"},{"range":"2718","text":"2631"},{"range":"2719","text":"2629"},{"range":"2720","text":"2670"},{"range":"2721","text":"2629"},{"range":"2722","text":"2662"},{"range":"2723","text":"2660"},{"range":"2724","text":"2664"},{"range":"2725","text":"2631"},{"range":"2726","text":"2629"},{"range":"2727","text":"2670"},{"range":"2728","text":"2680"},{"range":"2729","text":"2642"},{"range":"2730","text":"2631"},{"range":"2731","text":"2629"},"Update the dependencies array to be: [authO.ID, history, route, subscriptions]",{"range":"2732","text":"2733"},"Update the dependencies array to be: [route, subscriptions]",{"range":"2734","text":"2735"},"Update the dependencies array to be: [chats, chatsOverview]",{"range":"2736","text":"2737"},"Update the dependencies array to be: [groups, groupsOverview]",{"range":"2738","text":"2739"},{"range":"2740","text":"2735"},{"range":"2741","text":"2631"},{"range":"2742","text":"2629"},"Update the dependencies array to be: [channels, memberIDArray]",{"range":"2743","text":"2744"},{"range":"2745","text":"2735"},"Update the dependencies array to be: [groups, options]",{"range":"2746","text":"2747"},"Update the dependencies array to be: [authO.ID, groupID, history, members]",{"range":"2748","text":"2749"},{"range":"2750","text":"2735"},"Update the dependencies array to be: [authEvents, route]",{"range":"2751","text":"2752"},"Update the dependencies array to be: [number]",{"range":"2753","text":"2754"},"Update the dependencies array to be: [chats, groups]",{"range":"2755","text":"2756"},{"range":"2757","text":"2620"},{"range":"2758","text":"2622"},{"range":"2759","text":"2622"},{"range":"2760","text":"2625"},{"range":"2761","text":"2627"},{"range":"2762","text":"2636"},{"range":"2763","text":"2629"},{"range":"2764","text":"2629"},{"range":"2765","text":"2631"},{"range":"2766","text":"2633"},{"range":"2767","text":"2733"},{"range":"2768","text":"2735"},{"range":"2769","text":"2737"},{"range":"2770","text":"2739"},{"range":"2771","text":"2735"},{"range":"2772","text":"2631"},{"range":"2773","text":"2629"},{"range":"2774","text":"2744"},{"range":"2775","text":"2735"},{"range":"2776","text":"2735"},{"range":"2777","text":"2747"},{"range":"2778","text":"2749"},{"range":"2779","text":"2752"},{"range":"2780","text":"2638"},{"range":"2781","text":"2631"},{"range":"2782","text":"2629"},{"range":"2783","text":"2642"},{"range":"2784","text":"2646"},{"range":"2785","text":"2646"},{"range":"2786","text":"2648"},{"range":"2787","text":"2651"},{"range":"2788","text":"2653"},{"range":"2789","text":"2655"},{"range":"2790","text":"2657"},{"range":"2791","text":"2685"},{"range":"2792","text":"2687"},{"range":"2793","text":"2631"},{"range":"2794","text":"2664"},{"range":"2795","text":"2629"},{"range":"2796","text":"2629"},{"range":"2797","text":"2660"},{"range":"2798","text":"2662"},{"range":"2799","text":"2664"},{"range":"2800","text":"2631"},{"range":"2801","text":"2629"},{"range":"2802","text":"2668"},{"range":"2803","text":"2670"},{"range":"2804","text":"2629"},{"range":"2805","text":"2662"},{"range":"2806","text":"2660"},{"range":"2807","text":"2664"},{"range":"2808","text":"2631"},{"range":"2809","text":"2668"},{"range":"2810","text":"2629"},{"range":"2811","text":"2670"},{"range":"2812","text":"2631"},{"range":"2813","text":"2629"},{"range":"2814","text":"2680"},{"range":"2815","text":"2756"},{"range":"2816","text":"2754"},{"range":"2817","text":"2644"},"Update the dependencies array to be: [end, field, start]",{"range":"2818","text":"2819"},{"range":"2820","text":"2629"},{"range":"2821","text":"2662"},{"range":"2822","text":"2687"},[2244,2252],"[docArray, userID]",[2796,2803],"[docArray, state]",[3394,3401],[5722,5724],"[id]",[8106,8126],"[auth, collection, status]",[1895,1903],"[admins, authO.ID]",[2098,2110],"[authO.ID, impacteers]",[2804,2814],"[authO.ID, profiles]",[1891,1899],[2060,2067],"[likes, messages]",[1886,1898],"[authO.ID, impacteers, projectManagers]",[2096,2108],[2290,2298],[1178,1180],"[authChannels]",[1765,1781],"[completedTasks, tasks.length]",[3643,3652],"[matchArray, matches]",[5443,5452],"[displayMatches, matches]",[2294,2303],[5523,5535],"[categories, filters]",[4178,4190],"[categorieOverview, categories]",[2511,2534],"[categorieOverview, categories, matchTags]",[4408,4410],"[tag.Docid]",[2600,2608],[2838,2857],"[authO.ID, communityManagers]",[3037,3046],"[authO.ID, authors]",[3255,3272],"[authO.ID, projectManagers]",[3467,3479],[3627,3635],[3820,3830],"[authO.ID, matchers]",[4657,4659],"[notificationsTotal]",[2470,2478],[2658,2667],[2897,2916],[3125,3142],[3337,3349],[3570,3580],[3728,3736],[6866,6868],[2153,2165],"[getMonth, monthIndex]",[1725,1737],[1946,1963],[2145,2153],[2244,2253],"[members, membersDB]",[5380,5392],"[activities, totalProgressionArray]",[2244,2252],[2796,2803],[3394,3401],[5722,5724],[8106,8126],[1834,1842],[1895,1903],[2098,2110],[2804,2814],[2060,2067],[1886,1898],[2096,2108],[2290,2298],[2009,2018],[4158,4170],[3623,3632],[2294,2303],[5423,5432],[5171,5183],[4178,4190],[2511,2534],[4408,4410],[1765,1781],[1725,1737],[1946,1963],[2145,2153],[2505,2513],[2743,2762],[2942,2951],[3160,3177],[3372,3384],[3532,3540],[4367,4369],[2416,2424],[2604,2613],[2843,2862],[3071,3088],[3283,3295],[3443,3451],[6171,6173],[2153,2165],[1178,1180],[1818,1830],[2011,2019],[2493,2508],"[authO.ID, history, route, subscriptions]",[1745,1760],"[route, subscriptions]",[4282,4289],"[chats, chatsOverview]",[7748,7756],"[groups, groupsOverview]",[2068,2083],[1847,1859],[2040,2048],[3239,3249],"[channels, memberIDArray]",[1929,1944],[2536,2544],"[groups, options]",[2971,2980],"[authO.ID, groupID, history, members]",[1683,1698],[2423,2435],"[authEvents, route]",[1639,1649],"[number]",[1472,1480],"[chats, groups]",[2244,2252],[2796,2803],[3394,3401],[5722,5724],[8106,8126],[2060,2067],[1891,1899],[1895,1903],[2098,2110],[2804,2814],[2487,2502],[1798,1813],[4263,4270],[7729,7737],[2161,2176],[1847,1859],[2040,2048],[3239,3249],[1988,2003],[1683,1698],[2533,2541],[2968,2977],[2423,2435],[1886,1898],[2096,2108],[2290,2298],[1178,1180],[3643,3652],[2294,2303],[5443,5452],[5523,5535],[4178,4190],[2511,2534],[4408,4410],[2244,2253],[5380,5392],[1725,1737],[1946,1963],[2145,2153],[2600,2608],[2838,2857],[3037,3046],[3255,3272],[3467,3479],[3627,3635],[3820,3830],[4657,4659],[2512,2520],[2700,2709],[2939,2958],[3167,3184],[3379,3391],[3612,3622],[3770,3778],[6908,6910],[1818,1830],[2011,2019],[2153,2165],[1446,1454],[1627,1637],[1765,1781],[3848,3855],"[end, field, start]",[1648,1656],[1836,1845],[1810,1822]]